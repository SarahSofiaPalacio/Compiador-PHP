Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AMPERSANT
    ANDEQUAL
    ASSIGN
    BACKSLASH
    BOOL_AND
    BOOL_OR
    COLON
    COMILLASDOBLES
    COMILLASIMPLE
    DIVEQUAL
    DOT
    HASHTAG
    INVALID_NUMBER_SEQUENCE
    INVALID_VARIABLE
    ISIDENTICAL
    ISNOTIDENTICAL
    MINUSEQUAL
    MOD
    MULEQUAL
    NOT
    PLUSEQUAL
    POW
    QUESTIONMARK
    SL
    SLEQUAL
    SR
    SREQUAL
    XOREQUAL
    abs
    abstract
    and
    array
    as
    break
    callable
    case
    catch
    ceil
    clone
    continue
    cos
    declare
    default
    deg2rad
    die
    do
    endclare
    endfor
    endforeach
    endswitch
    endwhile
    eval
    exit
    exp
    extends
    final
    finally
    floor
    for
    foreach
    global
    goto
    implements
    include_once
    instanceof
    insteadof
    interface
    isset
    list
    log
    log10
    match
    max
    min
    namespace
    objectoperator
    or
    php
    pow
    private
    protected
    public
    rad2deg
    rand
    readonly
    require
    require_once
    return
    round
    sin
    sqrt
    static
    switch
    throw
    trait
    try
    unset
    use
    var
    xor

Grammar

Rule 0     S' -> program
Rule 1     program -> header declaration_list
Rule 2     header -> OPEN_TAG
Rule 3     footer_declaration -> CLOSE_TAG
Rule 4     declaration_list -> declaration
Rule 5     declaration_list -> declaration_list declaration
Rule 6     declaration -> COMMENT
Rule 7     declaration -> COMMENT_HASHTAG
Rule 8     declaration -> COMMENT_MULTI
Rule 9     declaration -> header_declaration
Rule 10    declaration -> var_declaration
Rule 11    declaration -> constant_declaration
Rule 12    declaration -> print_declaration
Rule 13    declaration -> echo_declaration
Rule 14    declaration -> iteration_stmt
Rule 15    declaration -> if_statement
Rule 16    declaration -> fun_declaration
Rule 17    declaration -> fun_call
Rule 18    declaration -> obj_declaration
Rule 19    declaration -> create_obj_declaration
Rule 20    declaration -> footer_declaration
Rule 21    declaration -> empty
Rule 22    data_type -> NUMBER
Rule 23    data_type -> CADENA
Rule 24    header_declaration -> include CADENA SEMICOLON
Rule 25    constant_declaration -> const ID EQUAL data_type SEMICOLON
Rule 26    print_declaration -> print var_declaration2 SEMICOLON
Rule 27    print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON
Rule 28    print_declaration -> print LPAREN data_type RPAREN SEMICOLON
Rule 29    print_declaration -> print data_type SEMICOLON
Rule 30    echo_declaration -> echo var_declaration2 SEMICOLON
Rule 31    echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON
Rule 32    echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON
Rule 33    echo_declaration -> echo data_type SEMICOLON
Rule 34    var_declaration -> var_declaration2 SEMICOLON
Rule 35    var_declaration2 -> VARIABLE assignment_tail
Rule 36    assignment_tail -> EQUAL expression
Rule 37    assignment_tail -> EQUAL NUMBER COMMA var_declaration2
Rule 38    assignment_tail -> EQUAL VARIABLE COMMA var_declaration2
Rule 39    assignment_tail -> EQUAL CADENA
Rule 40    assignment_tail -> COMMA var_declaration2
Rule 41    assignment_tail -> EQUAL LBRACKET expression COMMA var_declaration2
Rule 42    assignment_tail -> EQUAL LBRACKET data_type COMMA var_declaration2
Rule 43    assignment_tail -> RBRACKET
Rule 44    iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK
Rule 45    expression -> additive_expression
Rule 46    expression -> additive_expression comp_op additive_expression
Rule 47    additive_expression -> term
Rule 48    additive_expression -> term math_op term
Rule 49    term -> factor
Rule 50    term -> factor increment_decrement_op
Rule 51    term -> increment_decrement_op factor
Rule 52    factor -> NUMBER
Rule 53    factor -> VARIABLE
Rule 54    factor -> LPAREN expression RPAREN
Rule 55    increment_decrement_op -> PLUSPLUS
Rule 56    increment_decrement_op -> MINUSMINUS
Rule 57    math_op -> PLUS
Rule 58    math_op -> MINUS
Rule 59    math_op -> TIMES
Rule 60    math_op -> DIVIDE
Rule 61    comp_op -> LESS
Rule 62    comp_op -> LESSEQUAL
Rule 63    comp_op -> GREATER
Rule 64    comp_op -> GREATEREQUAL
Rule 65    comp_op -> DEQUAL
Rule 66    comp_op -> DISTINT
Rule 67    comp_op -> ISEQUAL
Rule 68    if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
Rule 69    else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
Rule 70    else_part -> else LBLOCK declaration_list RBLOCK
Rule 71    else_part -> endif
Rule 72    else_part -> empty
Rule 73    fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK
Rule 74    fun_call -> ID LPAREN params RPAREN
Rule 75    obj_declaration -> class ID LBLOCK declaration RBLOCK
Rule 76    create_obj_declaration -> new ID LPAREN params RPAREN
Rule 77    params -> single_param
Rule 78    params -> params COMMA single_param
Rule 79    single_param -> var_declaration2
Rule 80    single_param -> empty_function
Rule 81    empty_function -> <empty>

Terminals, with rules where they appear

AMPERSANT            : 
ANDEQUAL             : 
ASSIGN               : 
BACKSLASH            : 
BOOL_AND             : 
BOOL_OR              : 
CADENA               : 23 24 39
CLOSE_TAG            : 3
COLON                : 
COMILLASDOBLES       : 
COMILLASIMPLE        : 
COMMA                : 37 38 40 41 42 78
COMMENT              : 6
COMMENT_HASHTAG      : 7
COMMENT_MULTI        : 8
DEQUAL               : 65
DISTINT              : 66
DIVEQUAL             : 
DIVIDE               : 60
DOT                  : 
EQUAL                : 25 36 37 38 39 41 42
GREATER              : 63
GREATEREQUAL         : 64
HASHTAG              : 
ID                   : 25 73 74 75 76
INVALID_NUMBER_SEQUENCE : 
INVALID_VARIABLE     : 
ISEQUAL              : 67
ISIDENTICAL          : 
ISNOTIDENTICAL       : 
LBLOCK               : 44 68 69 70 73 75
LBRACKET             : 41 42
LESS                 : 61
LESSEQUAL            : 62
LPAREN               : 27 28 31 32 44 54 68 69 73 74 76
MINUS                : 58
MINUSEQUAL           : 
MINUSMINUS           : 56
MOD                  : 
MULEQUAL             : 
NOT                  : 
NUMBER               : 22 37 52
OPEN_TAG             : 2
PLUS                 : 57
PLUSEQUAL            : 
PLUSPLUS             : 55
POW                  : 
QUESTIONMARK         : 
RBLOCK               : 44 68 69 70 73 75
RBRACKET             : 43
RPAREN               : 27 28 31 32 44 54 68 69 73 74 76
SEMICOLON            : 24 25 26 27 28 29 30 31 32 33 34
SL                   : 
SLEQUAL              : 
SR                   : 
SREQUAL              : 
TIMES                : 59
VARIABLE             : 35 38 53
XOREQUAL             : 
abs                  : 
abstract             : 
and                  : 
array                : 
as                   : 
break                : 
callable             : 
case                 : 
catch                : 
ceil                 : 
class                : 75
clone                : 
const                : 25
continue             : 
cos                  : 
declare              : 
default              : 
deg2rad              : 
die                  : 
do                   : 
echo                 : 30 31 32 33
else                 : 70
elseif               : 69
empty                : 21 72
endclare             : 
endfor               : 
endforeach           : 
endif                : 71
endswitch            : 
endwhile             : 
error                : 
eval                 : 
exit                 : 
exp                  : 
extends              : 
final                : 
finally              : 
floor                : 
for                  : 
foreach              : 
function             : 73
global               : 
goto                 : 
if                   : 68
implements           : 
include              : 24
include_once         : 
instanceof           : 
insteadof            : 
interface            : 
isset                : 
list                 : 
log                  : 
log10                : 
match                : 
max                  : 
min                  : 
namespace            : 
new                  : 76
objectoperator       : 
or                   : 
php                  : 
pow                  : 
print                : 26 27 28 29
private              : 
protected            : 
public               : 
rad2deg              : 
rand                 : 
readonly             : 
require              : 
require_once         : 
return               : 
round                : 
sin                  : 
sqrt                 : 
static               : 
switch               : 
throw                : 
trait                : 
try                  : 
unset                : 
use                  : 
var                  : 
while                : 44
xor                  : 

Nonterminals, with rules where they appear

additive_expression  : 45 46 46
assignment_tail      : 35
comp_op              : 46
constant_declaration : 11
create_obj_declaration : 19
data_type            : 25 28 29 32 33 42
declaration          : 4 5 44 73 75
declaration_list     : 1 5 68 69 70
echo_declaration     : 13
else_part            : 68 69
empty_function       : 80
expression           : 36 41 44 54 68 69
factor               : 49 50 51
footer_declaration   : 20
fun_call             : 17
fun_declaration      : 16
header               : 1
header_declaration   : 9
if_statement         : 15
increment_decrement_op : 50 51
iteration_stmt       : 14
math_op              : 48
obj_declaration      : 18
params               : 73 74 76 78
print_declaration    : 12
program              : 0
single_param         : 77 78
term                 : 47 48 48
var_declaration      : 10
var_declaration2     : 26 27 30 31 34 37 38 40 41 42 79

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . header declaration_list
    (2) header -> . OPEN_TAG

    OPEN_TAG        shift and go to state 3

    program                        shift and go to state 1
    header                         shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> header . declaration_list
    (4) declaration_list -> . declaration
    (5) declaration_list -> . declaration_list declaration
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . obj_declaration
    (19) declaration -> . create_obj_declaration
    (20) declaration -> . footer_declaration
    (21) declaration -> . empty
    (24) header_declaration -> . include CADENA SEMICOLON
    (34) var_declaration -> . var_declaration2 SEMICOLON
    (25) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (26) print_declaration -> . print var_declaration2 SEMICOLON
    (27) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (28) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (29) print_declaration -> . print data_type SEMICOLON
    (30) echo_declaration -> . echo var_declaration2 SEMICOLON
    (31) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (32) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (33) echo_declaration -> . echo data_type SEMICOLON
    (44) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (68) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (73) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration RBLOCK
    (74) fun_call -> . ID LPAREN params RPAREN
    (75) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (76) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (35) var_declaration2 -> . VARIABLE assignment_tail

    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 21
    include         shift and go to state 22
    const           shift and go to state 24
    print           shift and go to state 26
    echo            shift and go to state 27
    while           shift and go to state 28
    if              shift and go to state 29
    function        shift and go to state 30
    ID              shift and go to state 25
    class           shift and go to state 31
    new             shift and go to state 32
    CLOSE_TAG       shift and go to state 33
    VARIABLE        shift and go to state 34

    declaration_list               shift and go to state 4
    declaration                    shift and go to state 5
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    obj_declaration                shift and go to state 18
    create_obj_declaration         shift and go to state 19
    footer_declaration             shift and go to state 20
    var_declaration2               shift and go to state 23

state 3

    (2) header -> OPEN_TAG .

    COMMENT         reduce using rule 2 (header -> OPEN_TAG .)
    COMMENT_HASHTAG reduce using rule 2 (header -> OPEN_TAG .)
    COMMENT_MULTI   reduce using rule 2 (header -> OPEN_TAG .)
    empty           reduce using rule 2 (header -> OPEN_TAG .)
    include         reduce using rule 2 (header -> OPEN_TAG .)
    const           reduce using rule 2 (header -> OPEN_TAG .)
    print           reduce using rule 2 (header -> OPEN_TAG .)
    echo            reduce using rule 2 (header -> OPEN_TAG .)
    while           reduce using rule 2 (header -> OPEN_TAG .)
    if              reduce using rule 2 (header -> OPEN_TAG .)
    function        reduce using rule 2 (header -> OPEN_TAG .)
    ID              reduce using rule 2 (header -> OPEN_TAG .)
    class           reduce using rule 2 (header -> OPEN_TAG .)
    new             reduce using rule 2 (header -> OPEN_TAG .)
    CLOSE_TAG       reduce using rule 2 (header -> OPEN_TAG .)
    VARIABLE        reduce using rule 2 (header -> OPEN_TAG .)


state 4

    (1) program -> header declaration_list .
    (5) declaration_list -> declaration_list . declaration
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . obj_declaration
    (19) declaration -> . create_obj_declaration
    (20) declaration -> . footer_declaration
    (21) declaration -> . empty
    (24) header_declaration -> . include CADENA SEMICOLON
    (34) var_declaration -> . var_declaration2 SEMICOLON
    (25) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (26) print_declaration -> . print var_declaration2 SEMICOLON
    (27) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (28) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (29) print_declaration -> . print data_type SEMICOLON
    (30) echo_declaration -> . echo var_declaration2 SEMICOLON
    (31) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (32) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (33) echo_declaration -> . echo data_type SEMICOLON
    (44) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (68) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (73) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration RBLOCK
    (74) fun_call -> . ID LPAREN params RPAREN
    (75) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (76) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (35) var_declaration2 -> . VARIABLE assignment_tail

    $end            reduce using rule 1 (program -> header declaration_list .)
    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 21
    include         shift and go to state 22
    const           shift and go to state 24
    print           shift and go to state 26
    echo            shift and go to state 27
    while           shift and go to state 28
    if              shift and go to state 29
    function        shift and go to state 30
    ID              shift and go to state 25
    class           shift and go to state 31
    new             shift and go to state 32
    CLOSE_TAG       shift and go to state 33
    VARIABLE        shift and go to state 34

    declaration                    shift and go to state 35
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    obj_declaration                shift and go to state 18
    create_obj_declaration         shift and go to state 19
    footer_declaration             shift and go to state 20
    var_declaration2               shift and go to state 23

state 5

    (4) declaration_list -> declaration .

    COMMENT         reduce using rule 4 (declaration_list -> declaration .)
    COMMENT_HASHTAG reduce using rule 4 (declaration_list -> declaration .)
    COMMENT_MULTI   reduce using rule 4 (declaration_list -> declaration .)
    empty           reduce using rule 4 (declaration_list -> declaration .)
    include         reduce using rule 4 (declaration_list -> declaration .)
    const           reduce using rule 4 (declaration_list -> declaration .)
    print           reduce using rule 4 (declaration_list -> declaration .)
    echo            reduce using rule 4 (declaration_list -> declaration .)
    while           reduce using rule 4 (declaration_list -> declaration .)
    if              reduce using rule 4 (declaration_list -> declaration .)
    function        reduce using rule 4 (declaration_list -> declaration .)
    ID              reduce using rule 4 (declaration_list -> declaration .)
    class           reduce using rule 4 (declaration_list -> declaration .)
    new             reduce using rule 4 (declaration_list -> declaration .)
    CLOSE_TAG       reduce using rule 4 (declaration_list -> declaration .)
    VARIABLE        reduce using rule 4 (declaration_list -> declaration .)
    $end            reduce using rule 4 (declaration_list -> declaration .)
    RBLOCK          reduce using rule 4 (declaration_list -> declaration .)


state 6

    (6) declaration -> COMMENT .

    COMMENT         reduce using rule 6 (declaration -> COMMENT .)
    COMMENT_HASHTAG reduce using rule 6 (declaration -> COMMENT .)
    COMMENT_MULTI   reduce using rule 6 (declaration -> COMMENT .)
    empty           reduce using rule 6 (declaration -> COMMENT .)
    include         reduce using rule 6 (declaration -> COMMENT .)
    const           reduce using rule 6 (declaration -> COMMENT .)
    print           reduce using rule 6 (declaration -> COMMENT .)
    echo            reduce using rule 6 (declaration -> COMMENT .)
    while           reduce using rule 6 (declaration -> COMMENT .)
    if              reduce using rule 6 (declaration -> COMMENT .)
    function        reduce using rule 6 (declaration -> COMMENT .)
    ID              reduce using rule 6 (declaration -> COMMENT .)
    class           reduce using rule 6 (declaration -> COMMENT .)
    new             reduce using rule 6 (declaration -> COMMENT .)
    CLOSE_TAG       reduce using rule 6 (declaration -> COMMENT .)
    VARIABLE        reduce using rule 6 (declaration -> COMMENT .)
    $end            reduce using rule 6 (declaration -> COMMENT .)
    RBLOCK          reduce using rule 6 (declaration -> COMMENT .)


state 7

    (7) declaration -> COMMENT_HASHTAG .

    COMMENT         reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    COMMENT_HASHTAG reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    COMMENT_MULTI   reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    empty           reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    include         reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    const           reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    print           reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    echo            reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    while           reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    if              reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    function        reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    ID              reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    class           reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    new             reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    CLOSE_TAG       reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    VARIABLE        reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    $end            reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    RBLOCK          reduce using rule 7 (declaration -> COMMENT_HASHTAG .)


state 8

    (8) declaration -> COMMENT_MULTI .

    COMMENT         reduce using rule 8 (declaration -> COMMENT_MULTI .)
    COMMENT_HASHTAG reduce using rule 8 (declaration -> COMMENT_MULTI .)
    COMMENT_MULTI   reduce using rule 8 (declaration -> COMMENT_MULTI .)
    empty           reduce using rule 8 (declaration -> COMMENT_MULTI .)
    include         reduce using rule 8 (declaration -> COMMENT_MULTI .)
    const           reduce using rule 8 (declaration -> COMMENT_MULTI .)
    print           reduce using rule 8 (declaration -> COMMENT_MULTI .)
    echo            reduce using rule 8 (declaration -> COMMENT_MULTI .)
    while           reduce using rule 8 (declaration -> COMMENT_MULTI .)
    if              reduce using rule 8 (declaration -> COMMENT_MULTI .)
    function        reduce using rule 8 (declaration -> COMMENT_MULTI .)
    ID              reduce using rule 8 (declaration -> COMMENT_MULTI .)
    class           reduce using rule 8 (declaration -> COMMENT_MULTI .)
    new             reduce using rule 8 (declaration -> COMMENT_MULTI .)
    CLOSE_TAG       reduce using rule 8 (declaration -> COMMENT_MULTI .)
    VARIABLE        reduce using rule 8 (declaration -> COMMENT_MULTI .)
    $end            reduce using rule 8 (declaration -> COMMENT_MULTI .)
    RBLOCK          reduce using rule 8 (declaration -> COMMENT_MULTI .)


state 9

    (9) declaration -> header_declaration .

    COMMENT         reduce using rule 9 (declaration -> header_declaration .)
    COMMENT_HASHTAG reduce using rule 9 (declaration -> header_declaration .)
    COMMENT_MULTI   reduce using rule 9 (declaration -> header_declaration .)
    empty           reduce using rule 9 (declaration -> header_declaration .)
    include         reduce using rule 9 (declaration -> header_declaration .)
    const           reduce using rule 9 (declaration -> header_declaration .)
    print           reduce using rule 9 (declaration -> header_declaration .)
    echo            reduce using rule 9 (declaration -> header_declaration .)
    while           reduce using rule 9 (declaration -> header_declaration .)
    if              reduce using rule 9 (declaration -> header_declaration .)
    function        reduce using rule 9 (declaration -> header_declaration .)
    ID              reduce using rule 9 (declaration -> header_declaration .)
    class           reduce using rule 9 (declaration -> header_declaration .)
    new             reduce using rule 9 (declaration -> header_declaration .)
    CLOSE_TAG       reduce using rule 9 (declaration -> header_declaration .)
    VARIABLE        reduce using rule 9 (declaration -> header_declaration .)
    $end            reduce using rule 9 (declaration -> header_declaration .)
    RBLOCK          reduce using rule 9 (declaration -> header_declaration .)


state 10

    (10) declaration -> var_declaration .

    COMMENT         reduce using rule 10 (declaration -> var_declaration .)
    COMMENT_HASHTAG reduce using rule 10 (declaration -> var_declaration .)
    COMMENT_MULTI   reduce using rule 10 (declaration -> var_declaration .)
    empty           reduce using rule 10 (declaration -> var_declaration .)
    include         reduce using rule 10 (declaration -> var_declaration .)
    const           reduce using rule 10 (declaration -> var_declaration .)
    print           reduce using rule 10 (declaration -> var_declaration .)
    echo            reduce using rule 10 (declaration -> var_declaration .)
    while           reduce using rule 10 (declaration -> var_declaration .)
    if              reduce using rule 10 (declaration -> var_declaration .)
    function        reduce using rule 10 (declaration -> var_declaration .)
    ID              reduce using rule 10 (declaration -> var_declaration .)
    class           reduce using rule 10 (declaration -> var_declaration .)
    new             reduce using rule 10 (declaration -> var_declaration .)
    CLOSE_TAG       reduce using rule 10 (declaration -> var_declaration .)
    VARIABLE        reduce using rule 10 (declaration -> var_declaration .)
    $end            reduce using rule 10 (declaration -> var_declaration .)
    RBLOCK          reduce using rule 10 (declaration -> var_declaration .)


state 11

    (11) declaration -> constant_declaration .

    COMMENT         reduce using rule 11 (declaration -> constant_declaration .)
    COMMENT_HASHTAG reduce using rule 11 (declaration -> constant_declaration .)
    COMMENT_MULTI   reduce using rule 11 (declaration -> constant_declaration .)
    empty           reduce using rule 11 (declaration -> constant_declaration .)
    include         reduce using rule 11 (declaration -> constant_declaration .)
    const           reduce using rule 11 (declaration -> constant_declaration .)
    print           reduce using rule 11 (declaration -> constant_declaration .)
    echo            reduce using rule 11 (declaration -> constant_declaration .)
    while           reduce using rule 11 (declaration -> constant_declaration .)
    if              reduce using rule 11 (declaration -> constant_declaration .)
    function        reduce using rule 11 (declaration -> constant_declaration .)
    ID              reduce using rule 11 (declaration -> constant_declaration .)
    class           reduce using rule 11 (declaration -> constant_declaration .)
    new             reduce using rule 11 (declaration -> constant_declaration .)
    CLOSE_TAG       reduce using rule 11 (declaration -> constant_declaration .)
    VARIABLE        reduce using rule 11 (declaration -> constant_declaration .)
    $end            reduce using rule 11 (declaration -> constant_declaration .)
    RBLOCK          reduce using rule 11 (declaration -> constant_declaration .)


state 12

    (12) declaration -> print_declaration .

    COMMENT         reduce using rule 12 (declaration -> print_declaration .)
    COMMENT_HASHTAG reduce using rule 12 (declaration -> print_declaration .)
    COMMENT_MULTI   reduce using rule 12 (declaration -> print_declaration .)
    empty           reduce using rule 12 (declaration -> print_declaration .)
    include         reduce using rule 12 (declaration -> print_declaration .)
    const           reduce using rule 12 (declaration -> print_declaration .)
    print           reduce using rule 12 (declaration -> print_declaration .)
    echo            reduce using rule 12 (declaration -> print_declaration .)
    while           reduce using rule 12 (declaration -> print_declaration .)
    if              reduce using rule 12 (declaration -> print_declaration .)
    function        reduce using rule 12 (declaration -> print_declaration .)
    ID              reduce using rule 12 (declaration -> print_declaration .)
    class           reduce using rule 12 (declaration -> print_declaration .)
    new             reduce using rule 12 (declaration -> print_declaration .)
    CLOSE_TAG       reduce using rule 12 (declaration -> print_declaration .)
    VARIABLE        reduce using rule 12 (declaration -> print_declaration .)
    $end            reduce using rule 12 (declaration -> print_declaration .)
    RBLOCK          reduce using rule 12 (declaration -> print_declaration .)


state 13

    (13) declaration -> echo_declaration .

    COMMENT         reduce using rule 13 (declaration -> echo_declaration .)
    COMMENT_HASHTAG reduce using rule 13 (declaration -> echo_declaration .)
    COMMENT_MULTI   reduce using rule 13 (declaration -> echo_declaration .)
    empty           reduce using rule 13 (declaration -> echo_declaration .)
    include         reduce using rule 13 (declaration -> echo_declaration .)
    const           reduce using rule 13 (declaration -> echo_declaration .)
    print           reduce using rule 13 (declaration -> echo_declaration .)
    echo            reduce using rule 13 (declaration -> echo_declaration .)
    while           reduce using rule 13 (declaration -> echo_declaration .)
    if              reduce using rule 13 (declaration -> echo_declaration .)
    function        reduce using rule 13 (declaration -> echo_declaration .)
    ID              reduce using rule 13 (declaration -> echo_declaration .)
    class           reduce using rule 13 (declaration -> echo_declaration .)
    new             reduce using rule 13 (declaration -> echo_declaration .)
    CLOSE_TAG       reduce using rule 13 (declaration -> echo_declaration .)
    VARIABLE        reduce using rule 13 (declaration -> echo_declaration .)
    $end            reduce using rule 13 (declaration -> echo_declaration .)
    RBLOCK          reduce using rule 13 (declaration -> echo_declaration .)


state 14

    (14) declaration -> iteration_stmt .

    COMMENT         reduce using rule 14 (declaration -> iteration_stmt .)
    COMMENT_HASHTAG reduce using rule 14 (declaration -> iteration_stmt .)
    COMMENT_MULTI   reduce using rule 14 (declaration -> iteration_stmt .)
    empty           reduce using rule 14 (declaration -> iteration_stmt .)
    include         reduce using rule 14 (declaration -> iteration_stmt .)
    const           reduce using rule 14 (declaration -> iteration_stmt .)
    print           reduce using rule 14 (declaration -> iteration_stmt .)
    echo            reduce using rule 14 (declaration -> iteration_stmt .)
    while           reduce using rule 14 (declaration -> iteration_stmt .)
    if              reduce using rule 14 (declaration -> iteration_stmt .)
    function        reduce using rule 14 (declaration -> iteration_stmt .)
    ID              reduce using rule 14 (declaration -> iteration_stmt .)
    class           reduce using rule 14 (declaration -> iteration_stmt .)
    new             reduce using rule 14 (declaration -> iteration_stmt .)
    CLOSE_TAG       reduce using rule 14 (declaration -> iteration_stmt .)
    VARIABLE        reduce using rule 14 (declaration -> iteration_stmt .)
    $end            reduce using rule 14 (declaration -> iteration_stmt .)
    RBLOCK          reduce using rule 14 (declaration -> iteration_stmt .)


state 15

    (15) declaration -> if_statement .

    COMMENT         reduce using rule 15 (declaration -> if_statement .)
    COMMENT_HASHTAG reduce using rule 15 (declaration -> if_statement .)
    COMMENT_MULTI   reduce using rule 15 (declaration -> if_statement .)
    empty           reduce using rule 15 (declaration -> if_statement .)
    include         reduce using rule 15 (declaration -> if_statement .)
    const           reduce using rule 15 (declaration -> if_statement .)
    print           reduce using rule 15 (declaration -> if_statement .)
    echo            reduce using rule 15 (declaration -> if_statement .)
    while           reduce using rule 15 (declaration -> if_statement .)
    if              reduce using rule 15 (declaration -> if_statement .)
    function        reduce using rule 15 (declaration -> if_statement .)
    ID              reduce using rule 15 (declaration -> if_statement .)
    class           reduce using rule 15 (declaration -> if_statement .)
    new             reduce using rule 15 (declaration -> if_statement .)
    CLOSE_TAG       reduce using rule 15 (declaration -> if_statement .)
    VARIABLE        reduce using rule 15 (declaration -> if_statement .)
    $end            reduce using rule 15 (declaration -> if_statement .)
    RBLOCK          reduce using rule 15 (declaration -> if_statement .)


state 16

    (16) declaration -> fun_declaration .

    COMMENT         reduce using rule 16 (declaration -> fun_declaration .)
    COMMENT_HASHTAG reduce using rule 16 (declaration -> fun_declaration .)
    COMMENT_MULTI   reduce using rule 16 (declaration -> fun_declaration .)
    empty           reduce using rule 16 (declaration -> fun_declaration .)
    include         reduce using rule 16 (declaration -> fun_declaration .)
    const           reduce using rule 16 (declaration -> fun_declaration .)
    print           reduce using rule 16 (declaration -> fun_declaration .)
    echo            reduce using rule 16 (declaration -> fun_declaration .)
    while           reduce using rule 16 (declaration -> fun_declaration .)
    if              reduce using rule 16 (declaration -> fun_declaration .)
    function        reduce using rule 16 (declaration -> fun_declaration .)
    ID              reduce using rule 16 (declaration -> fun_declaration .)
    class           reduce using rule 16 (declaration -> fun_declaration .)
    new             reduce using rule 16 (declaration -> fun_declaration .)
    CLOSE_TAG       reduce using rule 16 (declaration -> fun_declaration .)
    VARIABLE        reduce using rule 16 (declaration -> fun_declaration .)
    $end            reduce using rule 16 (declaration -> fun_declaration .)
    RBLOCK          reduce using rule 16 (declaration -> fun_declaration .)


state 17

    (17) declaration -> fun_call .

    COMMENT         reduce using rule 17 (declaration -> fun_call .)
    COMMENT_HASHTAG reduce using rule 17 (declaration -> fun_call .)
    COMMENT_MULTI   reduce using rule 17 (declaration -> fun_call .)
    empty           reduce using rule 17 (declaration -> fun_call .)
    include         reduce using rule 17 (declaration -> fun_call .)
    const           reduce using rule 17 (declaration -> fun_call .)
    print           reduce using rule 17 (declaration -> fun_call .)
    echo            reduce using rule 17 (declaration -> fun_call .)
    while           reduce using rule 17 (declaration -> fun_call .)
    if              reduce using rule 17 (declaration -> fun_call .)
    function        reduce using rule 17 (declaration -> fun_call .)
    ID              reduce using rule 17 (declaration -> fun_call .)
    class           reduce using rule 17 (declaration -> fun_call .)
    new             reduce using rule 17 (declaration -> fun_call .)
    CLOSE_TAG       reduce using rule 17 (declaration -> fun_call .)
    VARIABLE        reduce using rule 17 (declaration -> fun_call .)
    $end            reduce using rule 17 (declaration -> fun_call .)
    RBLOCK          reduce using rule 17 (declaration -> fun_call .)


state 18

    (18) declaration -> obj_declaration .

    COMMENT         reduce using rule 18 (declaration -> obj_declaration .)
    COMMENT_HASHTAG reduce using rule 18 (declaration -> obj_declaration .)
    COMMENT_MULTI   reduce using rule 18 (declaration -> obj_declaration .)
    empty           reduce using rule 18 (declaration -> obj_declaration .)
    include         reduce using rule 18 (declaration -> obj_declaration .)
    const           reduce using rule 18 (declaration -> obj_declaration .)
    print           reduce using rule 18 (declaration -> obj_declaration .)
    echo            reduce using rule 18 (declaration -> obj_declaration .)
    while           reduce using rule 18 (declaration -> obj_declaration .)
    if              reduce using rule 18 (declaration -> obj_declaration .)
    function        reduce using rule 18 (declaration -> obj_declaration .)
    ID              reduce using rule 18 (declaration -> obj_declaration .)
    class           reduce using rule 18 (declaration -> obj_declaration .)
    new             reduce using rule 18 (declaration -> obj_declaration .)
    CLOSE_TAG       reduce using rule 18 (declaration -> obj_declaration .)
    VARIABLE        reduce using rule 18 (declaration -> obj_declaration .)
    $end            reduce using rule 18 (declaration -> obj_declaration .)
    RBLOCK          reduce using rule 18 (declaration -> obj_declaration .)


state 19

    (19) declaration -> create_obj_declaration .

    COMMENT         reduce using rule 19 (declaration -> create_obj_declaration .)
    COMMENT_HASHTAG reduce using rule 19 (declaration -> create_obj_declaration .)
    COMMENT_MULTI   reduce using rule 19 (declaration -> create_obj_declaration .)
    empty           reduce using rule 19 (declaration -> create_obj_declaration .)
    include         reduce using rule 19 (declaration -> create_obj_declaration .)
    const           reduce using rule 19 (declaration -> create_obj_declaration .)
    print           reduce using rule 19 (declaration -> create_obj_declaration .)
    echo            reduce using rule 19 (declaration -> create_obj_declaration .)
    while           reduce using rule 19 (declaration -> create_obj_declaration .)
    if              reduce using rule 19 (declaration -> create_obj_declaration .)
    function        reduce using rule 19 (declaration -> create_obj_declaration .)
    ID              reduce using rule 19 (declaration -> create_obj_declaration .)
    class           reduce using rule 19 (declaration -> create_obj_declaration .)
    new             reduce using rule 19 (declaration -> create_obj_declaration .)
    CLOSE_TAG       reduce using rule 19 (declaration -> create_obj_declaration .)
    VARIABLE        reduce using rule 19 (declaration -> create_obj_declaration .)
    $end            reduce using rule 19 (declaration -> create_obj_declaration .)
    RBLOCK          reduce using rule 19 (declaration -> create_obj_declaration .)


state 20

    (20) declaration -> footer_declaration .

    COMMENT         reduce using rule 20 (declaration -> footer_declaration .)
    COMMENT_HASHTAG reduce using rule 20 (declaration -> footer_declaration .)
    COMMENT_MULTI   reduce using rule 20 (declaration -> footer_declaration .)
    empty           reduce using rule 20 (declaration -> footer_declaration .)
    include         reduce using rule 20 (declaration -> footer_declaration .)
    const           reduce using rule 20 (declaration -> footer_declaration .)
    print           reduce using rule 20 (declaration -> footer_declaration .)
    echo            reduce using rule 20 (declaration -> footer_declaration .)
    while           reduce using rule 20 (declaration -> footer_declaration .)
    if              reduce using rule 20 (declaration -> footer_declaration .)
    function        reduce using rule 20 (declaration -> footer_declaration .)
    ID              reduce using rule 20 (declaration -> footer_declaration .)
    class           reduce using rule 20 (declaration -> footer_declaration .)
    new             reduce using rule 20 (declaration -> footer_declaration .)
    CLOSE_TAG       reduce using rule 20 (declaration -> footer_declaration .)
    VARIABLE        reduce using rule 20 (declaration -> footer_declaration .)
    $end            reduce using rule 20 (declaration -> footer_declaration .)
    RBLOCK          reduce using rule 20 (declaration -> footer_declaration .)


state 21

    (21) declaration -> empty .

    COMMENT         reduce using rule 21 (declaration -> empty .)
    COMMENT_HASHTAG reduce using rule 21 (declaration -> empty .)
    COMMENT_MULTI   reduce using rule 21 (declaration -> empty .)
    empty           reduce using rule 21 (declaration -> empty .)
    include         reduce using rule 21 (declaration -> empty .)
    const           reduce using rule 21 (declaration -> empty .)
    print           reduce using rule 21 (declaration -> empty .)
    echo            reduce using rule 21 (declaration -> empty .)
    while           reduce using rule 21 (declaration -> empty .)
    if              reduce using rule 21 (declaration -> empty .)
    function        reduce using rule 21 (declaration -> empty .)
    ID              reduce using rule 21 (declaration -> empty .)
    class           reduce using rule 21 (declaration -> empty .)
    new             reduce using rule 21 (declaration -> empty .)
    CLOSE_TAG       reduce using rule 21 (declaration -> empty .)
    VARIABLE        reduce using rule 21 (declaration -> empty .)
    $end            reduce using rule 21 (declaration -> empty .)
    RBLOCK          reduce using rule 21 (declaration -> empty .)


state 22

    (24) header_declaration -> include . CADENA SEMICOLON

    CADENA          shift and go to state 36


state 23

    (34) var_declaration -> var_declaration2 . SEMICOLON

    SEMICOLON       shift and go to state 37


state 24

    (25) constant_declaration -> const . ID EQUAL data_type SEMICOLON

    ID              shift and go to state 38


state 25

    (74) fun_call -> ID . LPAREN params RPAREN

    LPAREN          shift and go to state 39


state 26

    (26) print_declaration -> print . var_declaration2 SEMICOLON
    (27) print_declaration -> print . LPAREN var_declaration2 RPAREN SEMICOLON
    (28) print_declaration -> print . LPAREN data_type RPAREN SEMICOLON
    (29) print_declaration -> print . data_type SEMICOLON
    (35) var_declaration2 -> . VARIABLE assignment_tail
    (22) data_type -> . NUMBER
    (23) data_type -> . CADENA

    LPAREN          shift and go to state 41
    VARIABLE        shift and go to state 34
    NUMBER          shift and go to state 43
    CADENA          shift and go to state 44

    var_declaration2               shift and go to state 40
    data_type                      shift and go to state 42

state 27

    (30) echo_declaration -> echo . var_declaration2 SEMICOLON
    (31) echo_declaration -> echo . LPAREN var_declaration2 RPAREN SEMICOLON
    (32) echo_declaration -> echo . LPAREN data_type RPAREN SEMICOLON
    (33) echo_declaration -> echo . data_type SEMICOLON
    (35) var_declaration2 -> . VARIABLE assignment_tail
    (22) data_type -> . NUMBER
    (23) data_type -> . CADENA

    LPAREN          shift and go to state 46
    VARIABLE        shift and go to state 34
    NUMBER          shift and go to state 43
    CADENA          shift and go to state 44

    var_declaration2               shift and go to state 45
    data_type                      shift and go to state 47

state 28

    (44) iteration_stmt -> while . LPAREN expression RPAREN LBLOCK declaration RBLOCK

    LPAREN          shift and go to state 48


state 29

    (68) if_statement -> if . LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part

    LPAREN          shift and go to state 49


state 30

    (73) fun_declaration -> function . ID LPAREN params RPAREN LBLOCK declaration RBLOCK

    ID              shift and go to state 50


state 31

    (75) obj_declaration -> class . ID LBLOCK declaration RBLOCK

    ID              shift and go to state 51


state 32

    (76) create_obj_declaration -> new . ID LPAREN params RPAREN

    ID              shift and go to state 52


state 33

    (3) footer_declaration -> CLOSE_TAG .

    COMMENT         reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    COMMENT_HASHTAG reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    COMMENT_MULTI   reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    empty           reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    include         reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    const           reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    print           reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    echo            reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    while           reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    if              reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    function        reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    ID              reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    class           reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    new             reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    CLOSE_TAG       reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    VARIABLE        reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    $end            reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    RBLOCK          reduce using rule 3 (footer_declaration -> CLOSE_TAG .)


state 34

    (35) var_declaration2 -> VARIABLE . assignment_tail
    (36) assignment_tail -> . EQUAL expression
    (37) assignment_tail -> . EQUAL NUMBER COMMA var_declaration2
    (38) assignment_tail -> . EQUAL VARIABLE COMMA var_declaration2
    (39) assignment_tail -> . EQUAL CADENA
    (40) assignment_tail -> . COMMA var_declaration2
    (41) assignment_tail -> . EQUAL LBRACKET expression COMMA var_declaration2
    (42) assignment_tail -> . EQUAL LBRACKET data_type COMMA var_declaration2
    (43) assignment_tail -> . RBRACKET

    EQUAL           shift and go to state 54
    COMMA           shift and go to state 55
    RBRACKET        shift and go to state 56

    assignment_tail                shift and go to state 53

state 35

    (5) declaration_list -> declaration_list declaration .

    COMMENT         reduce using rule 5 (declaration_list -> declaration_list declaration .)
    COMMENT_HASHTAG reduce using rule 5 (declaration_list -> declaration_list declaration .)
    COMMENT_MULTI   reduce using rule 5 (declaration_list -> declaration_list declaration .)
    empty           reduce using rule 5 (declaration_list -> declaration_list declaration .)
    include         reduce using rule 5 (declaration_list -> declaration_list declaration .)
    const           reduce using rule 5 (declaration_list -> declaration_list declaration .)
    print           reduce using rule 5 (declaration_list -> declaration_list declaration .)
    echo            reduce using rule 5 (declaration_list -> declaration_list declaration .)
    while           reduce using rule 5 (declaration_list -> declaration_list declaration .)
    if              reduce using rule 5 (declaration_list -> declaration_list declaration .)
    function        reduce using rule 5 (declaration_list -> declaration_list declaration .)
    ID              reduce using rule 5 (declaration_list -> declaration_list declaration .)
    class           reduce using rule 5 (declaration_list -> declaration_list declaration .)
    new             reduce using rule 5 (declaration_list -> declaration_list declaration .)
    CLOSE_TAG       reduce using rule 5 (declaration_list -> declaration_list declaration .)
    VARIABLE        reduce using rule 5 (declaration_list -> declaration_list declaration .)
    $end            reduce using rule 5 (declaration_list -> declaration_list declaration .)
    RBLOCK          reduce using rule 5 (declaration_list -> declaration_list declaration .)


state 36

    (24) header_declaration -> include CADENA . SEMICOLON

    SEMICOLON       shift and go to state 57


state 37

    (34) var_declaration -> var_declaration2 SEMICOLON .

    COMMENT         reduce using rule 34 (var_declaration -> var_declaration2 SEMICOLON .)
    COMMENT_HASHTAG reduce using rule 34 (var_declaration -> var_declaration2 SEMICOLON .)
    COMMENT_MULTI   reduce using rule 34 (var_declaration -> var_declaration2 SEMICOLON .)
    empty           reduce using rule 34 (var_declaration -> var_declaration2 SEMICOLON .)
    include         reduce using rule 34 (var_declaration -> var_declaration2 SEMICOLON .)
    const           reduce using rule 34 (var_declaration -> var_declaration2 SEMICOLON .)
    print           reduce using rule 34 (var_declaration -> var_declaration2 SEMICOLON .)
    echo            reduce using rule 34 (var_declaration -> var_declaration2 SEMICOLON .)
    while           reduce using rule 34 (var_declaration -> var_declaration2 SEMICOLON .)
    if              reduce using rule 34 (var_declaration -> var_declaration2 SEMICOLON .)
    function        reduce using rule 34 (var_declaration -> var_declaration2 SEMICOLON .)
    ID              reduce using rule 34 (var_declaration -> var_declaration2 SEMICOLON .)
    class           reduce using rule 34 (var_declaration -> var_declaration2 SEMICOLON .)
    new             reduce using rule 34 (var_declaration -> var_declaration2 SEMICOLON .)
    CLOSE_TAG       reduce using rule 34 (var_declaration -> var_declaration2 SEMICOLON .)
    VARIABLE        reduce using rule 34 (var_declaration -> var_declaration2 SEMICOLON .)
    $end            reduce using rule 34 (var_declaration -> var_declaration2 SEMICOLON .)
    RBLOCK          reduce using rule 34 (var_declaration -> var_declaration2 SEMICOLON .)


state 38

    (25) constant_declaration -> const ID . EQUAL data_type SEMICOLON

    EQUAL           shift and go to state 58


state 39

    (74) fun_call -> ID LPAREN . params RPAREN
    (77) params -> . single_param
    (78) params -> . params COMMA single_param
    (79) single_param -> . var_declaration2
    (80) single_param -> . empty_function
    (35) var_declaration2 -> . VARIABLE assignment_tail
    (81) empty_function -> .

    VARIABLE        shift and go to state 34
    RPAREN          reduce using rule 81 (empty_function -> .)
    COMMA           reduce using rule 81 (empty_function -> .)

    params                         shift and go to state 59
    single_param                   shift and go to state 60
    var_declaration2               shift and go to state 61
    empty_function                 shift and go to state 62

state 40

    (26) print_declaration -> print var_declaration2 . SEMICOLON

    SEMICOLON       shift and go to state 63


state 41

    (27) print_declaration -> print LPAREN . var_declaration2 RPAREN SEMICOLON
    (28) print_declaration -> print LPAREN . data_type RPAREN SEMICOLON
    (35) var_declaration2 -> . VARIABLE assignment_tail
    (22) data_type -> . NUMBER
    (23) data_type -> . CADENA

    VARIABLE        shift and go to state 34
    NUMBER          shift and go to state 43
    CADENA          shift and go to state 44

    var_declaration2               shift and go to state 64
    data_type                      shift and go to state 65

state 42

    (29) print_declaration -> print data_type . SEMICOLON

    SEMICOLON       shift and go to state 66


state 43

    (22) data_type -> NUMBER .

    SEMICOLON       reduce using rule 22 (data_type -> NUMBER .)
    RPAREN          reduce using rule 22 (data_type -> NUMBER .)


state 44

    (23) data_type -> CADENA .

    SEMICOLON       reduce using rule 23 (data_type -> CADENA .)
    RPAREN          reduce using rule 23 (data_type -> CADENA .)
    COMMA           reduce using rule 23 (data_type -> CADENA .)


state 45

    (30) echo_declaration -> echo var_declaration2 . SEMICOLON

    SEMICOLON       shift and go to state 67


state 46

    (31) echo_declaration -> echo LPAREN . var_declaration2 RPAREN SEMICOLON
    (32) echo_declaration -> echo LPAREN . data_type RPAREN SEMICOLON
    (35) var_declaration2 -> . VARIABLE assignment_tail
    (22) data_type -> . NUMBER
    (23) data_type -> . CADENA

    VARIABLE        shift and go to state 34
    NUMBER          shift and go to state 43
    CADENA          shift and go to state 44

    var_declaration2               shift and go to state 68
    data_type                      shift and go to state 69

state 47

    (33) echo_declaration -> echo data_type . SEMICOLON

    SEMICOLON       shift and go to state 70


state 48

    (44) iteration_stmt -> while LPAREN . expression RPAREN LBLOCK declaration RBLOCK
    (45) expression -> . additive_expression
    (46) expression -> . additive_expression comp_op additive_expression
    (47) additive_expression -> . term
    (48) additive_expression -> . term math_op term
    (49) term -> . factor
    (50) term -> . factor increment_decrement_op
    (51) term -> . increment_decrement_op factor
    (52) factor -> . NUMBER
    (53) factor -> . VARIABLE
    (54) factor -> . LPAREN expression RPAREN
    (55) increment_decrement_op -> . PLUSPLUS
    (56) increment_decrement_op -> . MINUSMINUS

    NUMBER          shift and go to state 77
    VARIABLE        shift and go to state 78
    LPAREN          shift and go to state 71
    PLUSPLUS        shift and go to state 79
    MINUSMINUS      shift and go to state 80

    expression                     shift and go to state 72
    additive_expression            shift and go to state 73
    term                           shift and go to state 74
    factor                         shift and go to state 75
    increment_decrement_op         shift and go to state 76

state 49

    (68) if_statement -> if LPAREN . expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (45) expression -> . additive_expression
    (46) expression -> . additive_expression comp_op additive_expression
    (47) additive_expression -> . term
    (48) additive_expression -> . term math_op term
    (49) term -> . factor
    (50) term -> . factor increment_decrement_op
    (51) term -> . increment_decrement_op factor
    (52) factor -> . NUMBER
    (53) factor -> . VARIABLE
    (54) factor -> . LPAREN expression RPAREN
    (55) increment_decrement_op -> . PLUSPLUS
    (56) increment_decrement_op -> . MINUSMINUS

    NUMBER          shift and go to state 77
    VARIABLE        shift and go to state 78
    LPAREN          shift and go to state 71
    PLUSPLUS        shift and go to state 79
    MINUSMINUS      shift and go to state 80

    expression                     shift and go to state 81
    additive_expression            shift and go to state 73
    term                           shift and go to state 74
    factor                         shift and go to state 75
    increment_decrement_op         shift and go to state 76

state 50

    (73) fun_declaration -> function ID . LPAREN params RPAREN LBLOCK declaration RBLOCK

    LPAREN          shift and go to state 82


state 51

    (75) obj_declaration -> class ID . LBLOCK declaration RBLOCK

    LBLOCK          shift and go to state 83


state 52

    (76) create_obj_declaration -> new ID . LPAREN params RPAREN

    LPAREN          shift and go to state 84


state 53

    (35) var_declaration2 -> VARIABLE assignment_tail .

    SEMICOLON       reduce using rule 35 (var_declaration2 -> VARIABLE assignment_tail .)
    RPAREN          reduce using rule 35 (var_declaration2 -> VARIABLE assignment_tail .)
    COMMA           reduce using rule 35 (var_declaration2 -> VARIABLE assignment_tail .)


state 54

    (36) assignment_tail -> EQUAL . expression
    (37) assignment_tail -> EQUAL . NUMBER COMMA var_declaration2
    (38) assignment_tail -> EQUAL . VARIABLE COMMA var_declaration2
    (39) assignment_tail -> EQUAL . CADENA
    (41) assignment_tail -> EQUAL . LBRACKET expression COMMA var_declaration2
    (42) assignment_tail -> EQUAL . LBRACKET data_type COMMA var_declaration2
    (45) expression -> . additive_expression
    (46) expression -> . additive_expression comp_op additive_expression
    (47) additive_expression -> . term
    (48) additive_expression -> . term math_op term
    (49) term -> . factor
    (50) term -> . factor increment_decrement_op
    (51) term -> . increment_decrement_op factor
    (52) factor -> . NUMBER
    (53) factor -> . VARIABLE
    (54) factor -> . LPAREN expression RPAREN
    (55) increment_decrement_op -> . PLUSPLUS
    (56) increment_decrement_op -> . MINUSMINUS

    NUMBER          shift and go to state 86
    VARIABLE        shift and go to state 87
    CADENA          shift and go to state 88
    LBRACKET        shift and go to state 89
    LPAREN          shift and go to state 71
    PLUSPLUS        shift and go to state 79
    MINUSMINUS      shift and go to state 80

    expression                     shift and go to state 85
    additive_expression            shift and go to state 73
    term                           shift and go to state 74
    factor                         shift and go to state 75
    increment_decrement_op         shift and go to state 76

state 55

    (40) assignment_tail -> COMMA . var_declaration2
    (35) var_declaration2 -> . VARIABLE assignment_tail

    VARIABLE        shift and go to state 34

    var_declaration2               shift and go to state 90

state 56

    (43) assignment_tail -> RBRACKET .

    SEMICOLON       reduce using rule 43 (assignment_tail -> RBRACKET .)
    RPAREN          reduce using rule 43 (assignment_tail -> RBRACKET .)
    COMMA           reduce using rule 43 (assignment_tail -> RBRACKET .)


state 57

    (24) header_declaration -> include CADENA SEMICOLON .

    COMMENT         reduce using rule 24 (header_declaration -> include CADENA SEMICOLON .)
    COMMENT_HASHTAG reduce using rule 24 (header_declaration -> include CADENA SEMICOLON .)
    COMMENT_MULTI   reduce using rule 24 (header_declaration -> include CADENA SEMICOLON .)
    empty           reduce using rule 24 (header_declaration -> include CADENA SEMICOLON .)
    include         reduce using rule 24 (header_declaration -> include CADENA SEMICOLON .)
    const           reduce using rule 24 (header_declaration -> include CADENA SEMICOLON .)
    print           reduce using rule 24 (header_declaration -> include CADENA SEMICOLON .)
    echo            reduce using rule 24 (header_declaration -> include CADENA SEMICOLON .)
    while           reduce using rule 24 (header_declaration -> include CADENA SEMICOLON .)
    if              reduce using rule 24 (header_declaration -> include CADENA SEMICOLON .)
    function        reduce using rule 24 (header_declaration -> include CADENA SEMICOLON .)
    ID              reduce using rule 24 (header_declaration -> include CADENA SEMICOLON .)
    class           reduce using rule 24 (header_declaration -> include CADENA SEMICOLON .)
    new             reduce using rule 24 (header_declaration -> include CADENA SEMICOLON .)
    CLOSE_TAG       reduce using rule 24 (header_declaration -> include CADENA SEMICOLON .)
    VARIABLE        reduce using rule 24 (header_declaration -> include CADENA SEMICOLON .)
    $end            reduce using rule 24 (header_declaration -> include CADENA SEMICOLON .)
    RBLOCK          reduce using rule 24 (header_declaration -> include CADENA SEMICOLON .)


state 58

    (25) constant_declaration -> const ID EQUAL . data_type SEMICOLON
    (22) data_type -> . NUMBER
    (23) data_type -> . CADENA

    NUMBER          shift and go to state 43
    CADENA          shift and go to state 44

    data_type                      shift and go to state 91

state 59

    (74) fun_call -> ID LPAREN params . RPAREN
    (78) params -> params . COMMA single_param

    RPAREN          shift and go to state 92
    COMMA           shift and go to state 93


state 60

    (77) params -> single_param .

    RPAREN          reduce using rule 77 (params -> single_param .)
    COMMA           reduce using rule 77 (params -> single_param .)


state 61

    (79) single_param -> var_declaration2 .

    RPAREN          reduce using rule 79 (single_param -> var_declaration2 .)
    COMMA           reduce using rule 79 (single_param -> var_declaration2 .)


state 62

    (80) single_param -> empty_function .

    RPAREN          reduce using rule 80 (single_param -> empty_function .)
    COMMA           reduce using rule 80 (single_param -> empty_function .)


state 63

    (26) print_declaration -> print var_declaration2 SEMICOLON .

    COMMENT         reduce using rule 26 (print_declaration -> print var_declaration2 SEMICOLON .)
    COMMENT_HASHTAG reduce using rule 26 (print_declaration -> print var_declaration2 SEMICOLON .)
    COMMENT_MULTI   reduce using rule 26 (print_declaration -> print var_declaration2 SEMICOLON .)
    empty           reduce using rule 26 (print_declaration -> print var_declaration2 SEMICOLON .)
    include         reduce using rule 26 (print_declaration -> print var_declaration2 SEMICOLON .)
    const           reduce using rule 26 (print_declaration -> print var_declaration2 SEMICOLON .)
    print           reduce using rule 26 (print_declaration -> print var_declaration2 SEMICOLON .)
    echo            reduce using rule 26 (print_declaration -> print var_declaration2 SEMICOLON .)
    while           reduce using rule 26 (print_declaration -> print var_declaration2 SEMICOLON .)
    if              reduce using rule 26 (print_declaration -> print var_declaration2 SEMICOLON .)
    function        reduce using rule 26 (print_declaration -> print var_declaration2 SEMICOLON .)
    ID              reduce using rule 26 (print_declaration -> print var_declaration2 SEMICOLON .)
    class           reduce using rule 26 (print_declaration -> print var_declaration2 SEMICOLON .)
    new             reduce using rule 26 (print_declaration -> print var_declaration2 SEMICOLON .)
    CLOSE_TAG       reduce using rule 26 (print_declaration -> print var_declaration2 SEMICOLON .)
    VARIABLE        reduce using rule 26 (print_declaration -> print var_declaration2 SEMICOLON .)
    $end            reduce using rule 26 (print_declaration -> print var_declaration2 SEMICOLON .)
    RBLOCK          reduce using rule 26 (print_declaration -> print var_declaration2 SEMICOLON .)


state 64

    (27) print_declaration -> print LPAREN var_declaration2 . RPAREN SEMICOLON

    RPAREN          shift and go to state 94


state 65

    (28) print_declaration -> print LPAREN data_type . RPAREN SEMICOLON

    RPAREN          shift and go to state 95


state 66

    (29) print_declaration -> print data_type SEMICOLON .

    COMMENT         reduce using rule 29 (print_declaration -> print data_type SEMICOLON .)
    COMMENT_HASHTAG reduce using rule 29 (print_declaration -> print data_type SEMICOLON .)
    COMMENT_MULTI   reduce using rule 29 (print_declaration -> print data_type SEMICOLON .)
    empty           reduce using rule 29 (print_declaration -> print data_type SEMICOLON .)
    include         reduce using rule 29 (print_declaration -> print data_type SEMICOLON .)
    const           reduce using rule 29 (print_declaration -> print data_type SEMICOLON .)
    print           reduce using rule 29 (print_declaration -> print data_type SEMICOLON .)
    echo            reduce using rule 29 (print_declaration -> print data_type SEMICOLON .)
    while           reduce using rule 29 (print_declaration -> print data_type SEMICOLON .)
    if              reduce using rule 29 (print_declaration -> print data_type SEMICOLON .)
    function        reduce using rule 29 (print_declaration -> print data_type SEMICOLON .)
    ID              reduce using rule 29 (print_declaration -> print data_type SEMICOLON .)
    class           reduce using rule 29 (print_declaration -> print data_type SEMICOLON .)
    new             reduce using rule 29 (print_declaration -> print data_type SEMICOLON .)
    CLOSE_TAG       reduce using rule 29 (print_declaration -> print data_type SEMICOLON .)
    VARIABLE        reduce using rule 29 (print_declaration -> print data_type SEMICOLON .)
    $end            reduce using rule 29 (print_declaration -> print data_type SEMICOLON .)
    RBLOCK          reduce using rule 29 (print_declaration -> print data_type SEMICOLON .)


state 67

    (30) echo_declaration -> echo var_declaration2 SEMICOLON .

    COMMENT         reduce using rule 30 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    COMMENT_HASHTAG reduce using rule 30 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    COMMENT_MULTI   reduce using rule 30 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    empty           reduce using rule 30 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    include         reduce using rule 30 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    const           reduce using rule 30 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    print           reduce using rule 30 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    echo            reduce using rule 30 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    while           reduce using rule 30 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    if              reduce using rule 30 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    function        reduce using rule 30 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    ID              reduce using rule 30 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    class           reduce using rule 30 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    new             reduce using rule 30 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    CLOSE_TAG       reduce using rule 30 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    VARIABLE        reduce using rule 30 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    $end            reduce using rule 30 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    RBLOCK          reduce using rule 30 (echo_declaration -> echo var_declaration2 SEMICOLON .)


state 68

    (31) echo_declaration -> echo LPAREN var_declaration2 . RPAREN SEMICOLON

    RPAREN          shift and go to state 96


state 69

    (32) echo_declaration -> echo LPAREN data_type . RPAREN SEMICOLON

    RPAREN          shift and go to state 97


state 70

    (33) echo_declaration -> echo data_type SEMICOLON .

    COMMENT         reduce using rule 33 (echo_declaration -> echo data_type SEMICOLON .)
    COMMENT_HASHTAG reduce using rule 33 (echo_declaration -> echo data_type SEMICOLON .)
    COMMENT_MULTI   reduce using rule 33 (echo_declaration -> echo data_type SEMICOLON .)
    empty           reduce using rule 33 (echo_declaration -> echo data_type SEMICOLON .)
    include         reduce using rule 33 (echo_declaration -> echo data_type SEMICOLON .)
    const           reduce using rule 33 (echo_declaration -> echo data_type SEMICOLON .)
    print           reduce using rule 33 (echo_declaration -> echo data_type SEMICOLON .)
    echo            reduce using rule 33 (echo_declaration -> echo data_type SEMICOLON .)
    while           reduce using rule 33 (echo_declaration -> echo data_type SEMICOLON .)
    if              reduce using rule 33 (echo_declaration -> echo data_type SEMICOLON .)
    function        reduce using rule 33 (echo_declaration -> echo data_type SEMICOLON .)
    ID              reduce using rule 33 (echo_declaration -> echo data_type SEMICOLON .)
    class           reduce using rule 33 (echo_declaration -> echo data_type SEMICOLON .)
    new             reduce using rule 33 (echo_declaration -> echo data_type SEMICOLON .)
    CLOSE_TAG       reduce using rule 33 (echo_declaration -> echo data_type SEMICOLON .)
    VARIABLE        reduce using rule 33 (echo_declaration -> echo data_type SEMICOLON .)
    $end            reduce using rule 33 (echo_declaration -> echo data_type SEMICOLON .)
    RBLOCK          reduce using rule 33 (echo_declaration -> echo data_type SEMICOLON .)


state 71

    (54) factor -> LPAREN . expression RPAREN
    (45) expression -> . additive_expression
    (46) expression -> . additive_expression comp_op additive_expression
    (47) additive_expression -> . term
    (48) additive_expression -> . term math_op term
    (49) term -> . factor
    (50) term -> . factor increment_decrement_op
    (51) term -> . increment_decrement_op factor
    (52) factor -> . NUMBER
    (53) factor -> . VARIABLE
    (54) factor -> . LPAREN expression RPAREN
    (55) increment_decrement_op -> . PLUSPLUS
    (56) increment_decrement_op -> . MINUSMINUS

    NUMBER          shift and go to state 77
    VARIABLE        shift and go to state 78
    LPAREN          shift and go to state 71
    PLUSPLUS        shift and go to state 79
    MINUSMINUS      shift and go to state 80

    expression                     shift and go to state 98
    additive_expression            shift and go to state 73
    term                           shift and go to state 74
    factor                         shift and go to state 75
    increment_decrement_op         shift and go to state 76

state 72

    (44) iteration_stmt -> while LPAREN expression . RPAREN LBLOCK declaration RBLOCK

    RPAREN          shift and go to state 99


state 73

    (45) expression -> additive_expression .
    (46) expression -> additive_expression . comp_op additive_expression
    (61) comp_op -> . LESS
    (62) comp_op -> . LESSEQUAL
    (63) comp_op -> . GREATER
    (64) comp_op -> . GREATEREQUAL
    (65) comp_op -> . DEQUAL
    (66) comp_op -> . DISTINT
    (67) comp_op -> . ISEQUAL

    RPAREN          reduce using rule 45 (expression -> additive_expression .)
    SEMICOLON       reduce using rule 45 (expression -> additive_expression .)
    COMMA           reduce using rule 45 (expression -> additive_expression .)
    LESS            shift and go to state 101
    LESSEQUAL       shift and go to state 102
    GREATER         shift and go to state 103
    GREATEREQUAL    shift and go to state 104
    DEQUAL          shift and go to state 105
    DISTINT         shift and go to state 106
    ISEQUAL         shift and go to state 107

    comp_op                        shift and go to state 100

state 74

    (47) additive_expression -> term .
    (48) additive_expression -> term . math_op term
    (57) math_op -> . PLUS
    (58) math_op -> . MINUS
    (59) math_op -> . TIMES
    (60) math_op -> . DIVIDE

    LESS            reduce using rule 47 (additive_expression -> term .)
    LESSEQUAL       reduce using rule 47 (additive_expression -> term .)
    GREATER         reduce using rule 47 (additive_expression -> term .)
    GREATEREQUAL    reduce using rule 47 (additive_expression -> term .)
    DEQUAL          reduce using rule 47 (additive_expression -> term .)
    DISTINT         reduce using rule 47 (additive_expression -> term .)
    ISEQUAL         reduce using rule 47 (additive_expression -> term .)
    RPAREN          reduce using rule 47 (additive_expression -> term .)
    SEMICOLON       reduce using rule 47 (additive_expression -> term .)
    COMMA           reduce using rule 47 (additive_expression -> term .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 110
    TIMES           shift and go to state 111
    DIVIDE          shift and go to state 112

    math_op                        shift and go to state 108

state 75

    (49) term -> factor .
    (50) term -> factor . increment_decrement_op
    (55) increment_decrement_op -> . PLUSPLUS
    (56) increment_decrement_op -> . MINUSMINUS

    PLUS            reduce using rule 49 (term -> factor .)
    MINUS           reduce using rule 49 (term -> factor .)
    TIMES           reduce using rule 49 (term -> factor .)
    DIVIDE          reduce using rule 49 (term -> factor .)
    LESS            reduce using rule 49 (term -> factor .)
    LESSEQUAL       reduce using rule 49 (term -> factor .)
    GREATER         reduce using rule 49 (term -> factor .)
    GREATEREQUAL    reduce using rule 49 (term -> factor .)
    DEQUAL          reduce using rule 49 (term -> factor .)
    DISTINT         reduce using rule 49 (term -> factor .)
    ISEQUAL         reduce using rule 49 (term -> factor .)
    RPAREN          reduce using rule 49 (term -> factor .)
    SEMICOLON       reduce using rule 49 (term -> factor .)
    COMMA           reduce using rule 49 (term -> factor .)
    PLUSPLUS        shift and go to state 79
    MINUSMINUS      shift and go to state 80

    increment_decrement_op         shift and go to state 113

state 76

    (51) term -> increment_decrement_op . factor
    (52) factor -> . NUMBER
    (53) factor -> . VARIABLE
    (54) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 77
    VARIABLE        shift and go to state 78
    LPAREN          shift and go to state 71

    factor                         shift and go to state 114

state 77

    (52) factor -> NUMBER .

    PLUSPLUS        reduce using rule 52 (factor -> NUMBER .)
    MINUSMINUS      reduce using rule 52 (factor -> NUMBER .)
    PLUS            reduce using rule 52 (factor -> NUMBER .)
    MINUS           reduce using rule 52 (factor -> NUMBER .)
    TIMES           reduce using rule 52 (factor -> NUMBER .)
    DIVIDE          reduce using rule 52 (factor -> NUMBER .)
    LESS            reduce using rule 52 (factor -> NUMBER .)
    LESSEQUAL       reduce using rule 52 (factor -> NUMBER .)
    GREATER         reduce using rule 52 (factor -> NUMBER .)
    GREATEREQUAL    reduce using rule 52 (factor -> NUMBER .)
    DEQUAL          reduce using rule 52 (factor -> NUMBER .)
    DISTINT         reduce using rule 52 (factor -> NUMBER .)
    ISEQUAL         reduce using rule 52 (factor -> NUMBER .)
    RPAREN          reduce using rule 52 (factor -> NUMBER .)
    SEMICOLON       reduce using rule 52 (factor -> NUMBER .)
    COMMA           reduce using rule 52 (factor -> NUMBER .)


state 78

    (53) factor -> VARIABLE .

    PLUSPLUS        reduce using rule 53 (factor -> VARIABLE .)
    MINUSMINUS      reduce using rule 53 (factor -> VARIABLE .)
    PLUS            reduce using rule 53 (factor -> VARIABLE .)
    MINUS           reduce using rule 53 (factor -> VARIABLE .)
    TIMES           reduce using rule 53 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 53 (factor -> VARIABLE .)
    LESS            reduce using rule 53 (factor -> VARIABLE .)
    LESSEQUAL       reduce using rule 53 (factor -> VARIABLE .)
    GREATER         reduce using rule 53 (factor -> VARIABLE .)
    GREATEREQUAL    reduce using rule 53 (factor -> VARIABLE .)
    DEQUAL          reduce using rule 53 (factor -> VARIABLE .)
    DISTINT         reduce using rule 53 (factor -> VARIABLE .)
    ISEQUAL         reduce using rule 53 (factor -> VARIABLE .)
    RPAREN          reduce using rule 53 (factor -> VARIABLE .)
    SEMICOLON       reduce using rule 53 (factor -> VARIABLE .)
    COMMA           reduce using rule 53 (factor -> VARIABLE .)


state 79

    (55) increment_decrement_op -> PLUSPLUS .

    NUMBER          reduce using rule 55 (increment_decrement_op -> PLUSPLUS .)
    VARIABLE        reduce using rule 55 (increment_decrement_op -> PLUSPLUS .)
    LPAREN          reduce using rule 55 (increment_decrement_op -> PLUSPLUS .)
    PLUS            reduce using rule 55 (increment_decrement_op -> PLUSPLUS .)
    MINUS           reduce using rule 55 (increment_decrement_op -> PLUSPLUS .)
    TIMES           reduce using rule 55 (increment_decrement_op -> PLUSPLUS .)
    DIVIDE          reduce using rule 55 (increment_decrement_op -> PLUSPLUS .)
    LESS            reduce using rule 55 (increment_decrement_op -> PLUSPLUS .)
    LESSEQUAL       reduce using rule 55 (increment_decrement_op -> PLUSPLUS .)
    GREATER         reduce using rule 55 (increment_decrement_op -> PLUSPLUS .)
    GREATEREQUAL    reduce using rule 55 (increment_decrement_op -> PLUSPLUS .)
    DEQUAL          reduce using rule 55 (increment_decrement_op -> PLUSPLUS .)
    DISTINT         reduce using rule 55 (increment_decrement_op -> PLUSPLUS .)
    ISEQUAL         reduce using rule 55 (increment_decrement_op -> PLUSPLUS .)
    RPAREN          reduce using rule 55 (increment_decrement_op -> PLUSPLUS .)
    SEMICOLON       reduce using rule 55 (increment_decrement_op -> PLUSPLUS .)
    COMMA           reduce using rule 55 (increment_decrement_op -> PLUSPLUS .)


state 80

    (56) increment_decrement_op -> MINUSMINUS .

    NUMBER          reduce using rule 56 (increment_decrement_op -> MINUSMINUS .)
    VARIABLE        reduce using rule 56 (increment_decrement_op -> MINUSMINUS .)
    LPAREN          reduce using rule 56 (increment_decrement_op -> MINUSMINUS .)
    PLUS            reduce using rule 56 (increment_decrement_op -> MINUSMINUS .)
    MINUS           reduce using rule 56 (increment_decrement_op -> MINUSMINUS .)
    TIMES           reduce using rule 56 (increment_decrement_op -> MINUSMINUS .)
    DIVIDE          reduce using rule 56 (increment_decrement_op -> MINUSMINUS .)
    LESS            reduce using rule 56 (increment_decrement_op -> MINUSMINUS .)
    LESSEQUAL       reduce using rule 56 (increment_decrement_op -> MINUSMINUS .)
    GREATER         reduce using rule 56 (increment_decrement_op -> MINUSMINUS .)
    GREATEREQUAL    reduce using rule 56 (increment_decrement_op -> MINUSMINUS .)
    DEQUAL          reduce using rule 56 (increment_decrement_op -> MINUSMINUS .)
    DISTINT         reduce using rule 56 (increment_decrement_op -> MINUSMINUS .)
    ISEQUAL         reduce using rule 56 (increment_decrement_op -> MINUSMINUS .)
    RPAREN          reduce using rule 56 (increment_decrement_op -> MINUSMINUS .)
    SEMICOLON       reduce using rule 56 (increment_decrement_op -> MINUSMINUS .)
    COMMA           reduce using rule 56 (increment_decrement_op -> MINUSMINUS .)


state 81

    (68) if_statement -> if LPAREN expression . RPAREN LBLOCK declaration_list RBLOCK else_part

    RPAREN          shift and go to state 115


state 82

    (73) fun_declaration -> function ID LPAREN . params RPAREN LBLOCK declaration RBLOCK
    (77) params -> . single_param
    (78) params -> . params COMMA single_param
    (79) single_param -> . var_declaration2
    (80) single_param -> . empty_function
    (35) var_declaration2 -> . VARIABLE assignment_tail
    (81) empty_function -> .

    VARIABLE        shift and go to state 34
    RPAREN          reduce using rule 81 (empty_function -> .)
    COMMA           reduce using rule 81 (empty_function -> .)

    params                         shift and go to state 116
    single_param                   shift and go to state 60
    var_declaration2               shift and go to state 61
    empty_function                 shift and go to state 62

state 83

    (75) obj_declaration -> class ID LBLOCK . declaration RBLOCK
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . obj_declaration
    (19) declaration -> . create_obj_declaration
    (20) declaration -> . footer_declaration
    (21) declaration -> . empty
    (24) header_declaration -> . include CADENA SEMICOLON
    (34) var_declaration -> . var_declaration2 SEMICOLON
    (25) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (26) print_declaration -> . print var_declaration2 SEMICOLON
    (27) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (28) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (29) print_declaration -> . print data_type SEMICOLON
    (30) echo_declaration -> . echo var_declaration2 SEMICOLON
    (31) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (32) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (33) echo_declaration -> . echo data_type SEMICOLON
    (44) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (68) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (73) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration RBLOCK
    (74) fun_call -> . ID LPAREN params RPAREN
    (75) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (76) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (35) var_declaration2 -> . VARIABLE assignment_tail

    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 21
    include         shift and go to state 22
    const           shift and go to state 24
    print           shift and go to state 26
    echo            shift and go to state 27
    while           shift and go to state 28
    if              shift and go to state 29
    function        shift and go to state 30
    ID              shift and go to state 25
    class           shift and go to state 31
    new             shift and go to state 32
    CLOSE_TAG       shift and go to state 33
    VARIABLE        shift and go to state 34

    declaration                    shift and go to state 117
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    obj_declaration                shift and go to state 18
    create_obj_declaration         shift and go to state 19
    footer_declaration             shift and go to state 20
    var_declaration2               shift and go to state 23

state 84

    (76) create_obj_declaration -> new ID LPAREN . params RPAREN
    (77) params -> . single_param
    (78) params -> . params COMMA single_param
    (79) single_param -> . var_declaration2
    (80) single_param -> . empty_function
    (35) var_declaration2 -> . VARIABLE assignment_tail
    (81) empty_function -> .

    VARIABLE        shift and go to state 34
    RPAREN          reduce using rule 81 (empty_function -> .)
    COMMA           reduce using rule 81 (empty_function -> .)

    params                         shift and go to state 118
    single_param                   shift and go to state 60
    var_declaration2               shift and go to state 61
    empty_function                 shift and go to state 62

state 85

    (36) assignment_tail -> EQUAL expression .

    SEMICOLON       reduce using rule 36 (assignment_tail -> EQUAL expression .)
    RPAREN          reduce using rule 36 (assignment_tail -> EQUAL expression .)
    COMMA           reduce using rule 36 (assignment_tail -> EQUAL expression .)


state 86

    (37) assignment_tail -> EQUAL NUMBER . COMMA var_declaration2
    (52) factor -> NUMBER .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 119
    PLUSPLUS        reduce using rule 52 (factor -> NUMBER .)
    MINUSMINUS      reduce using rule 52 (factor -> NUMBER .)
    PLUS            reduce using rule 52 (factor -> NUMBER .)
    MINUS           reduce using rule 52 (factor -> NUMBER .)
    TIMES           reduce using rule 52 (factor -> NUMBER .)
    DIVIDE          reduce using rule 52 (factor -> NUMBER .)
    LESS            reduce using rule 52 (factor -> NUMBER .)
    LESSEQUAL       reduce using rule 52 (factor -> NUMBER .)
    GREATER         reduce using rule 52 (factor -> NUMBER .)
    GREATEREQUAL    reduce using rule 52 (factor -> NUMBER .)
    DEQUAL          reduce using rule 52 (factor -> NUMBER .)
    DISTINT         reduce using rule 52 (factor -> NUMBER .)
    ISEQUAL         reduce using rule 52 (factor -> NUMBER .)
    SEMICOLON       reduce using rule 52 (factor -> NUMBER .)
    RPAREN          reduce using rule 52 (factor -> NUMBER .)

  ! COMMA           [ reduce using rule 52 (factor -> NUMBER .) ]


state 87

    (38) assignment_tail -> EQUAL VARIABLE . COMMA var_declaration2
    (53) factor -> VARIABLE .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 120
    PLUSPLUS        reduce using rule 53 (factor -> VARIABLE .)
    MINUSMINUS      reduce using rule 53 (factor -> VARIABLE .)
    PLUS            reduce using rule 53 (factor -> VARIABLE .)
    MINUS           reduce using rule 53 (factor -> VARIABLE .)
    TIMES           reduce using rule 53 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 53 (factor -> VARIABLE .)
    LESS            reduce using rule 53 (factor -> VARIABLE .)
    LESSEQUAL       reduce using rule 53 (factor -> VARIABLE .)
    GREATER         reduce using rule 53 (factor -> VARIABLE .)
    GREATEREQUAL    reduce using rule 53 (factor -> VARIABLE .)
    DEQUAL          reduce using rule 53 (factor -> VARIABLE .)
    DISTINT         reduce using rule 53 (factor -> VARIABLE .)
    ISEQUAL         reduce using rule 53 (factor -> VARIABLE .)
    SEMICOLON       reduce using rule 53 (factor -> VARIABLE .)
    RPAREN          reduce using rule 53 (factor -> VARIABLE .)

  ! COMMA           [ reduce using rule 53 (factor -> VARIABLE .) ]


state 88

    (39) assignment_tail -> EQUAL CADENA .

    SEMICOLON       reduce using rule 39 (assignment_tail -> EQUAL CADENA .)
    RPAREN          reduce using rule 39 (assignment_tail -> EQUAL CADENA .)
    COMMA           reduce using rule 39 (assignment_tail -> EQUAL CADENA .)


state 89

    (41) assignment_tail -> EQUAL LBRACKET . expression COMMA var_declaration2
    (42) assignment_tail -> EQUAL LBRACKET . data_type COMMA var_declaration2
    (45) expression -> . additive_expression
    (46) expression -> . additive_expression comp_op additive_expression
    (22) data_type -> . NUMBER
    (23) data_type -> . CADENA
    (47) additive_expression -> . term
    (48) additive_expression -> . term math_op term
    (49) term -> . factor
    (50) term -> . factor increment_decrement_op
    (51) term -> . increment_decrement_op factor
    (52) factor -> . NUMBER
    (53) factor -> . VARIABLE
    (54) factor -> . LPAREN expression RPAREN
    (55) increment_decrement_op -> . PLUSPLUS
    (56) increment_decrement_op -> . MINUSMINUS

    NUMBER          shift and go to state 123
    CADENA          shift and go to state 44
    VARIABLE        shift and go to state 78
    LPAREN          shift and go to state 71
    PLUSPLUS        shift and go to state 79
    MINUSMINUS      shift and go to state 80

    expression                     shift and go to state 121
    data_type                      shift and go to state 122
    additive_expression            shift and go to state 73
    term                           shift and go to state 74
    factor                         shift and go to state 75
    increment_decrement_op         shift and go to state 76

state 90

    (40) assignment_tail -> COMMA var_declaration2 .

    SEMICOLON       reduce using rule 40 (assignment_tail -> COMMA var_declaration2 .)
    RPAREN          reduce using rule 40 (assignment_tail -> COMMA var_declaration2 .)
    COMMA           reduce using rule 40 (assignment_tail -> COMMA var_declaration2 .)


state 91

    (25) constant_declaration -> const ID EQUAL data_type . SEMICOLON

    SEMICOLON       shift and go to state 124


state 92

    (74) fun_call -> ID LPAREN params RPAREN .

    COMMENT         reduce using rule 74 (fun_call -> ID LPAREN params RPAREN .)
    COMMENT_HASHTAG reduce using rule 74 (fun_call -> ID LPAREN params RPAREN .)
    COMMENT_MULTI   reduce using rule 74 (fun_call -> ID LPAREN params RPAREN .)
    empty           reduce using rule 74 (fun_call -> ID LPAREN params RPAREN .)
    include         reduce using rule 74 (fun_call -> ID LPAREN params RPAREN .)
    const           reduce using rule 74 (fun_call -> ID LPAREN params RPAREN .)
    print           reduce using rule 74 (fun_call -> ID LPAREN params RPAREN .)
    echo            reduce using rule 74 (fun_call -> ID LPAREN params RPAREN .)
    while           reduce using rule 74 (fun_call -> ID LPAREN params RPAREN .)
    if              reduce using rule 74 (fun_call -> ID LPAREN params RPAREN .)
    function        reduce using rule 74 (fun_call -> ID LPAREN params RPAREN .)
    ID              reduce using rule 74 (fun_call -> ID LPAREN params RPAREN .)
    class           reduce using rule 74 (fun_call -> ID LPAREN params RPAREN .)
    new             reduce using rule 74 (fun_call -> ID LPAREN params RPAREN .)
    CLOSE_TAG       reduce using rule 74 (fun_call -> ID LPAREN params RPAREN .)
    VARIABLE        reduce using rule 74 (fun_call -> ID LPAREN params RPAREN .)
    $end            reduce using rule 74 (fun_call -> ID LPAREN params RPAREN .)
    RBLOCK          reduce using rule 74 (fun_call -> ID LPAREN params RPAREN .)


state 93

    (78) params -> params COMMA . single_param
    (79) single_param -> . var_declaration2
    (80) single_param -> . empty_function
    (35) var_declaration2 -> . VARIABLE assignment_tail
    (81) empty_function -> .

    VARIABLE        shift and go to state 34
    RPAREN          reduce using rule 81 (empty_function -> .)
    COMMA           reduce using rule 81 (empty_function -> .)

    single_param                   shift and go to state 125
    var_declaration2               shift and go to state 61
    empty_function                 shift and go to state 62

state 94

    (27) print_declaration -> print LPAREN var_declaration2 RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 126


state 95

    (28) print_declaration -> print LPAREN data_type RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 127


state 96

    (31) echo_declaration -> echo LPAREN var_declaration2 RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 128


state 97

    (32) echo_declaration -> echo LPAREN data_type RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 129


state 98

    (54) factor -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 130


state 99

    (44) iteration_stmt -> while LPAREN expression RPAREN . LBLOCK declaration RBLOCK

    LBLOCK          shift and go to state 131


state 100

    (46) expression -> additive_expression comp_op . additive_expression
    (47) additive_expression -> . term
    (48) additive_expression -> . term math_op term
    (49) term -> . factor
    (50) term -> . factor increment_decrement_op
    (51) term -> . increment_decrement_op factor
    (52) factor -> . NUMBER
    (53) factor -> . VARIABLE
    (54) factor -> . LPAREN expression RPAREN
    (55) increment_decrement_op -> . PLUSPLUS
    (56) increment_decrement_op -> . MINUSMINUS

    NUMBER          shift and go to state 77
    VARIABLE        shift and go to state 78
    LPAREN          shift and go to state 71
    PLUSPLUS        shift and go to state 79
    MINUSMINUS      shift and go to state 80

    additive_expression            shift and go to state 132
    term                           shift and go to state 74
    factor                         shift and go to state 75
    increment_decrement_op         shift and go to state 76

state 101

    (61) comp_op -> LESS .

    NUMBER          reduce using rule 61 (comp_op -> LESS .)
    VARIABLE        reduce using rule 61 (comp_op -> LESS .)
    LPAREN          reduce using rule 61 (comp_op -> LESS .)
    PLUSPLUS        reduce using rule 61 (comp_op -> LESS .)
    MINUSMINUS      reduce using rule 61 (comp_op -> LESS .)


state 102

    (62) comp_op -> LESSEQUAL .

    NUMBER          reduce using rule 62 (comp_op -> LESSEQUAL .)
    VARIABLE        reduce using rule 62 (comp_op -> LESSEQUAL .)
    LPAREN          reduce using rule 62 (comp_op -> LESSEQUAL .)
    PLUSPLUS        reduce using rule 62 (comp_op -> LESSEQUAL .)
    MINUSMINUS      reduce using rule 62 (comp_op -> LESSEQUAL .)


state 103

    (63) comp_op -> GREATER .

    NUMBER          reduce using rule 63 (comp_op -> GREATER .)
    VARIABLE        reduce using rule 63 (comp_op -> GREATER .)
    LPAREN          reduce using rule 63 (comp_op -> GREATER .)
    PLUSPLUS        reduce using rule 63 (comp_op -> GREATER .)
    MINUSMINUS      reduce using rule 63 (comp_op -> GREATER .)


state 104

    (64) comp_op -> GREATEREQUAL .

    NUMBER          reduce using rule 64 (comp_op -> GREATEREQUAL .)
    VARIABLE        reduce using rule 64 (comp_op -> GREATEREQUAL .)
    LPAREN          reduce using rule 64 (comp_op -> GREATEREQUAL .)
    PLUSPLUS        reduce using rule 64 (comp_op -> GREATEREQUAL .)
    MINUSMINUS      reduce using rule 64 (comp_op -> GREATEREQUAL .)


state 105

    (65) comp_op -> DEQUAL .

    NUMBER          reduce using rule 65 (comp_op -> DEQUAL .)
    VARIABLE        reduce using rule 65 (comp_op -> DEQUAL .)
    LPAREN          reduce using rule 65 (comp_op -> DEQUAL .)
    PLUSPLUS        reduce using rule 65 (comp_op -> DEQUAL .)
    MINUSMINUS      reduce using rule 65 (comp_op -> DEQUAL .)


state 106

    (66) comp_op -> DISTINT .

    NUMBER          reduce using rule 66 (comp_op -> DISTINT .)
    VARIABLE        reduce using rule 66 (comp_op -> DISTINT .)
    LPAREN          reduce using rule 66 (comp_op -> DISTINT .)
    PLUSPLUS        reduce using rule 66 (comp_op -> DISTINT .)
    MINUSMINUS      reduce using rule 66 (comp_op -> DISTINT .)


state 107

    (67) comp_op -> ISEQUAL .

    NUMBER          reduce using rule 67 (comp_op -> ISEQUAL .)
    VARIABLE        reduce using rule 67 (comp_op -> ISEQUAL .)
    LPAREN          reduce using rule 67 (comp_op -> ISEQUAL .)
    PLUSPLUS        reduce using rule 67 (comp_op -> ISEQUAL .)
    MINUSMINUS      reduce using rule 67 (comp_op -> ISEQUAL .)


state 108

    (48) additive_expression -> term math_op . term
    (49) term -> . factor
    (50) term -> . factor increment_decrement_op
    (51) term -> . increment_decrement_op factor
    (52) factor -> . NUMBER
    (53) factor -> . VARIABLE
    (54) factor -> . LPAREN expression RPAREN
    (55) increment_decrement_op -> . PLUSPLUS
    (56) increment_decrement_op -> . MINUSMINUS

    NUMBER          shift and go to state 77
    VARIABLE        shift and go to state 78
    LPAREN          shift and go to state 71
    PLUSPLUS        shift and go to state 79
    MINUSMINUS      shift and go to state 80

    term                           shift and go to state 133
    factor                         shift and go to state 75
    increment_decrement_op         shift and go to state 76

state 109

    (57) math_op -> PLUS .

    NUMBER          reduce using rule 57 (math_op -> PLUS .)
    VARIABLE        reduce using rule 57 (math_op -> PLUS .)
    LPAREN          reduce using rule 57 (math_op -> PLUS .)
    PLUSPLUS        reduce using rule 57 (math_op -> PLUS .)
    MINUSMINUS      reduce using rule 57 (math_op -> PLUS .)


state 110

    (58) math_op -> MINUS .

    NUMBER          reduce using rule 58 (math_op -> MINUS .)
    VARIABLE        reduce using rule 58 (math_op -> MINUS .)
    LPAREN          reduce using rule 58 (math_op -> MINUS .)
    PLUSPLUS        reduce using rule 58 (math_op -> MINUS .)
    MINUSMINUS      reduce using rule 58 (math_op -> MINUS .)


state 111

    (59) math_op -> TIMES .

    NUMBER          reduce using rule 59 (math_op -> TIMES .)
    VARIABLE        reduce using rule 59 (math_op -> TIMES .)
    LPAREN          reduce using rule 59 (math_op -> TIMES .)
    PLUSPLUS        reduce using rule 59 (math_op -> TIMES .)
    MINUSMINUS      reduce using rule 59 (math_op -> TIMES .)


state 112

    (60) math_op -> DIVIDE .

    NUMBER          reduce using rule 60 (math_op -> DIVIDE .)
    VARIABLE        reduce using rule 60 (math_op -> DIVIDE .)
    LPAREN          reduce using rule 60 (math_op -> DIVIDE .)
    PLUSPLUS        reduce using rule 60 (math_op -> DIVIDE .)
    MINUSMINUS      reduce using rule 60 (math_op -> DIVIDE .)


state 113

    (50) term -> factor increment_decrement_op .

    PLUS            reduce using rule 50 (term -> factor increment_decrement_op .)
    MINUS           reduce using rule 50 (term -> factor increment_decrement_op .)
    TIMES           reduce using rule 50 (term -> factor increment_decrement_op .)
    DIVIDE          reduce using rule 50 (term -> factor increment_decrement_op .)
    LESS            reduce using rule 50 (term -> factor increment_decrement_op .)
    LESSEQUAL       reduce using rule 50 (term -> factor increment_decrement_op .)
    GREATER         reduce using rule 50 (term -> factor increment_decrement_op .)
    GREATEREQUAL    reduce using rule 50 (term -> factor increment_decrement_op .)
    DEQUAL          reduce using rule 50 (term -> factor increment_decrement_op .)
    DISTINT         reduce using rule 50 (term -> factor increment_decrement_op .)
    ISEQUAL         reduce using rule 50 (term -> factor increment_decrement_op .)
    RPAREN          reduce using rule 50 (term -> factor increment_decrement_op .)
    SEMICOLON       reduce using rule 50 (term -> factor increment_decrement_op .)
    COMMA           reduce using rule 50 (term -> factor increment_decrement_op .)


state 114

    (51) term -> increment_decrement_op factor .

    PLUS            reduce using rule 51 (term -> increment_decrement_op factor .)
    MINUS           reduce using rule 51 (term -> increment_decrement_op factor .)
    TIMES           reduce using rule 51 (term -> increment_decrement_op factor .)
    DIVIDE          reduce using rule 51 (term -> increment_decrement_op factor .)
    LESS            reduce using rule 51 (term -> increment_decrement_op factor .)
    LESSEQUAL       reduce using rule 51 (term -> increment_decrement_op factor .)
    GREATER         reduce using rule 51 (term -> increment_decrement_op factor .)
    GREATEREQUAL    reduce using rule 51 (term -> increment_decrement_op factor .)
    DEQUAL          reduce using rule 51 (term -> increment_decrement_op factor .)
    DISTINT         reduce using rule 51 (term -> increment_decrement_op factor .)
    ISEQUAL         reduce using rule 51 (term -> increment_decrement_op factor .)
    RPAREN          reduce using rule 51 (term -> increment_decrement_op factor .)
    SEMICOLON       reduce using rule 51 (term -> increment_decrement_op factor .)
    COMMA           reduce using rule 51 (term -> increment_decrement_op factor .)


state 115

    (68) if_statement -> if LPAREN expression RPAREN . LBLOCK declaration_list RBLOCK else_part

    LBLOCK          shift and go to state 134


state 116

    (73) fun_declaration -> function ID LPAREN params . RPAREN LBLOCK declaration RBLOCK
    (78) params -> params . COMMA single_param

    RPAREN          shift and go to state 135
    COMMA           shift and go to state 93


state 117

    (75) obj_declaration -> class ID LBLOCK declaration . RBLOCK

    RBLOCK          shift and go to state 136


state 118

    (76) create_obj_declaration -> new ID LPAREN params . RPAREN
    (78) params -> params . COMMA single_param

    RPAREN          shift and go to state 137
    COMMA           shift and go to state 93


state 119

    (37) assignment_tail -> EQUAL NUMBER COMMA . var_declaration2
    (35) var_declaration2 -> . VARIABLE assignment_tail

    VARIABLE        shift and go to state 34

    var_declaration2               shift and go to state 138

state 120

    (38) assignment_tail -> EQUAL VARIABLE COMMA . var_declaration2
    (35) var_declaration2 -> . VARIABLE assignment_tail

    VARIABLE        shift and go to state 34

    var_declaration2               shift and go to state 139

state 121

    (41) assignment_tail -> EQUAL LBRACKET expression . COMMA var_declaration2

    COMMA           shift and go to state 140


state 122

    (42) assignment_tail -> EQUAL LBRACKET data_type . COMMA var_declaration2

    COMMA           shift and go to state 141


state 123

    (22) data_type -> NUMBER .
    (52) factor -> NUMBER .

  ! reduce/reduce conflict for COMMA resolved using rule 22 (data_type -> NUMBER .)
    COMMA           reduce using rule 22 (data_type -> NUMBER .)
    PLUSPLUS        reduce using rule 52 (factor -> NUMBER .)
    MINUSMINUS      reduce using rule 52 (factor -> NUMBER .)
    PLUS            reduce using rule 52 (factor -> NUMBER .)
    MINUS           reduce using rule 52 (factor -> NUMBER .)
    TIMES           reduce using rule 52 (factor -> NUMBER .)
    DIVIDE          reduce using rule 52 (factor -> NUMBER .)
    LESS            reduce using rule 52 (factor -> NUMBER .)
    LESSEQUAL       reduce using rule 52 (factor -> NUMBER .)
    GREATER         reduce using rule 52 (factor -> NUMBER .)
    GREATEREQUAL    reduce using rule 52 (factor -> NUMBER .)
    DEQUAL          reduce using rule 52 (factor -> NUMBER .)
    DISTINT         reduce using rule 52 (factor -> NUMBER .)
    ISEQUAL         reduce using rule 52 (factor -> NUMBER .)

  ! COMMA           [ reduce using rule 52 (factor -> NUMBER .) ]


state 124

    (25) constant_declaration -> const ID EQUAL data_type SEMICOLON .

    COMMENT         reduce using rule 25 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    COMMENT_HASHTAG reduce using rule 25 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    COMMENT_MULTI   reduce using rule 25 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    empty           reduce using rule 25 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    include         reduce using rule 25 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    const           reduce using rule 25 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    print           reduce using rule 25 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    echo            reduce using rule 25 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    while           reduce using rule 25 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    if              reduce using rule 25 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    function        reduce using rule 25 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    ID              reduce using rule 25 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    class           reduce using rule 25 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    new             reduce using rule 25 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    CLOSE_TAG       reduce using rule 25 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    VARIABLE        reduce using rule 25 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    $end            reduce using rule 25 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    RBLOCK          reduce using rule 25 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)


state 125

    (78) params -> params COMMA single_param .

    RPAREN          reduce using rule 78 (params -> params COMMA single_param .)
    COMMA           reduce using rule 78 (params -> params COMMA single_param .)


state 126

    (27) print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .

    COMMENT         reduce using rule 27 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    COMMENT_HASHTAG reduce using rule 27 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    COMMENT_MULTI   reduce using rule 27 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    empty           reduce using rule 27 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    include         reduce using rule 27 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    const           reduce using rule 27 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    print           reduce using rule 27 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    echo            reduce using rule 27 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    while           reduce using rule 27 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    if              reduce using rule 27 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    function        reduce using rule 27 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    ID              reduce using rule 27 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    class           reduce using rule 27 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    new             reduce using rule 27 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    CLOSE_TAG       reduce using rule 27 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    VARIABLE        reduce using rule 27 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    $end            reduce using rule 27 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    RBLOCK          reduce using rule 27 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)


state 127

    (28) print_declaration -> print LPAREN data_type RPAREN SEMICOLON .

    COMMENT         reduce using rule 28 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    COMMENT_HASHTAG reduce using rule 28 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    COMMENT_MULTI   reduce using rule 28 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    empty           reduce using rule 28 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    include         reduce using rule 28 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    const           reduce using rule 28 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    print           reduce using rule 28 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    echo            reduce using rule 28 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    while           reduce using rule 28 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    if              reduce using rule 28 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    function        reduce using rule 28 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    ID              reduce using rule 28 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    class           reduce using rule 28 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    new             reduce using rule 28 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    CLOSE_TAG       reduce using rule 28 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    VARIABLE        reduce using rule 28 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    $end            reduce using rule 28 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    RBLOCK          reduce using rule 28 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)


state 128

    (31) echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .

    COMMENT         reduce using rule 31 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    COMMENT_HASHTAG reduce using rule 31 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    COMMENT_MULTI   reduce using rule 31 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    empty           reduce using rule 31 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    include         reduce using rule 31 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    const           reduce using rule 31 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    print           reduce using rule 31 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    echo            reduce using rule 31 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    while           reduce using rule 31 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    if              reduce using rule 31 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    function        reduce using rule 31 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    ID              reduce using rule 31 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    class           reduce using rule 31 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    new             reduce using rule 31 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    CLOSE_TAG       reduce using rule 31 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    VARIABLE        reduce using rule 31 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    $end            reduce using rule 31 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    RBLOCK          reduce using rule 31 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)


state 129

    (32) echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .

    COMMENT         reduce using rule 32 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    COMMENT_HASHTAG reduce using rule 32 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    COMMENT_MULTI   reduce using rule 32 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    empty           reduce using rule 32 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    include         reduce using rule 32 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    const           reduce using rule 32 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    print           reduce using rule 32 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    echo            reduce using rule 32 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    while           reduce using rule 32 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    if              reduce using rule 32 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    function        reduce using rule 32 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    ID              reduce using rule 32 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    class           reduce using rule 32 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    new             reduce using rule 32 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    CLOSE_TAG       reduce using rule 32 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    VARIABLE        reduce using rule 32 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    $end            reduce using rule 32 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    RBLOCK          reduce using rule 32 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)


state 130

    (54) factor -> LPAREN expression RPAREN .

    PLUSPLUS        reduce using rule 54 (factor -> LPAREN expression RPAREN .)
    MINUSMINUS      reduce using rule 54 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 54 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 54 (factor -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 54 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 54 (factor -> LPAREN expression RPAREN .)
    LESS            reduce using rule 54 (factor -> LPAREN expression RPAREN .)
    LESSEQUAL       reduce using rule 54 (factor -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 54 (factor -> LPAREN expression RPAREN .)
    GREATEREQUAL    reduce using rule 54 (factor -> LPAREN expression RPAREN .)
    DEQUAL          reduce using rule 54 (factor -> LPAREN expression RPAREN .)
    DISTINT         reduce using rule 54 (factor -> LPAREN expression RPAREN .)
    ISEQUAL         reduce using rule 54 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 54 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 54 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 54 (factor -> LPAREN expression RPAREN .)


state 131

    (44) iteration_stmt -> while LPAREN expression RPAREN LBLOCK . declaration RBLOCK
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . obj_declaration
    (19) declaration -> . create_obj_declaration
    (20) declaration -> . footer_declaration
    (21) declaration -> . empty
    (24) header_declaration -> . include CADENA SEMICOLON
    (34) var_declaration -> . var_declaration2 SEMICOLON
    (25) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (26) print_declaration -> . print var_declaration2 SEMICOLON
    (27) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (28) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (29) print_declaration -> . print data_type SEMICOLON
    (30) echo_declaration -> . echo var_declaration2 SEMICOLON
    (31) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (32) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (33) echo_declaration -> . echo data_type SEMICOLON
    (44) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (68) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (73) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration RBLOCK
    (74) fun_call -> . ID LPAREN params RPAREN
    (75) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (76) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (35) var_declaration2 -> . VARIABLE assignment_tail

    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 21
    include         shift and go to state 22
    const           shift and go to state 24
    print           shift and go to state 26
    echo            shift and go to state 27
    while           shift and go to state 28
    if              shift and go to state 29
    function        shift and go to state 30
    ID              shift and go to state 25
    class           shift and go to state 31
    new             shift and go to state 32
    CLOSE_TAG       shift and go to state 33
    VARIABLE        shift and go to state 34

    declaration                    shift and go to state 142
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    obj_declaration                shift and go to state 18
    create_obj_declaration         shift and go to state 19
    footer_declaration             shift and go to state 20
    var_declaration2               shift and go to state 23

state 132

    (46) expression -> additive_expression comp_op additive_expression .

    RPAREN          reduce using rule 46 (expression -> additive_expression comp_op additive_expression .)
    SEMICOLON       reduce using rule 46 (expression -> additive_expression comp_op additive_expression .)
    COMMA           reduce using rule 46 (expression -> additive_expression comp_op additive_expression .)


state 133

    (48) additive_expression -> term math_op term .

    LESS            reduce using rule 48 (additive_expression -> term math_op term .)
    LESSEQUAL       reduce using rule 48 (additive_expression -> term math_op term .)
    GREATER         reduce using rule 48 (additive_expression -> term math_op term .)
    GREATEREQUAL    reduce using rule 48 (additive_expression -> term math_op term .)
    DEQUAL          reduce using rule 48 (additive_expression -> term math_op term .)
    DISTINT         reduce using rule 48 (additive_expression -> term math_op term .)
    ISEQUAL         reduce using rule 48 (additive_expression -> term math_op term .)
    RPAREN          reduce using rule 48 (additive_expression -> term math_op term .)
    SEMICOLON       reduce using rule 48 (additive_expression -> term math_op term .)
    COMMA           reduce using rule 48 (additive_expression -> term math_op term .)


state 134

    (68) if_statement -> if LPAREN expression RPAREN LBLOCK . declaration_list RBLOCK else_part
    (4) declaration_list -> . declaration
    (5) declaration_list -> . declaration_list declaration
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . obj_declaration
    (19) declaration -> . create_obj_declaration
    (20) declaration -> . footer_declaration
    (21) declaration -> . empty
    (24) header_declaration -> . include CADENA SEMICOLON
    (34) var_declaration -> . var_declaration2 SEMICOLON
    (25) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (26) print_declaration -> . print var_declaration2 SEMICOLON
    (27) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (28) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (29) print_declaration -> . print data_type SEMICOLON
    (30) echo_declaration -> . echo var_declaration2 SEMICOLON
    (31) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (32) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (33) echo_declaration -> . echo data_type SEMICOLON
    (44) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (68) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (73) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration RBLOCK
    (74) fun_call -> . ID LPAREN params RPAREN
    (75) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (76) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (35) var_declaration2 -> . VARIABLE assignment_tail

    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 21
    include         shift and go to state 22
    const           shift and go to state 24
    print           shift and go to state 26
    echo            shift and go to state 27
    while           shift and go to state 28
    if              shift and go to state 29
    function        shift and go to state 30
    ID              shift and go to state 25
    class           shift and go to state 31
    new             shift and go to state 32
    CLOSE_TAG       shift and go to state 33
    VARIABLE        shift and go to state 34

    declaration_list               shift and go to state 143
    declaration                    shift and go to state 5
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    obj_declaration                shift and go to state 18
    create_obj_declaration         shift and go to state 19
    footer_declaration             shift and go to state 20
    var_declaration2               shift and go to state 23

state 135

    (73) fun_declaration -> function ID LPAREN params RPAREN . LBLOCK declaration RBLOCK

    LBLOCK          shift and go to state 144


state 136

    (75) obj_declaration -> class ID LBLOCK declaration RBLOCK .

    COMMENT         reduce using rule 75 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    COMMENT_HASHTAG reduce using rule 75 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    COMMENT_MULTI   reduce using rule 75 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    empty           reduce using rule 75 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    include         reduce using rule 75 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    const           reduce using rule 75 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    print           reduce using rule 75 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    echo            reduce using rule 75 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    while           reduce using rule 75 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    if              reduce using rule 75 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    function        reduce using rule 75 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    ID              reduce using rule 75 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    class           reduce using rule 75 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    new             reduce using rule 75 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    CLOSE_TAG       reduce using rule 75 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    VARIABLE        reduce using rule 75 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    $end            reduce using rule 75 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    RBLOCK          reduce using rule 75 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)


state 137

    (76) create_obj_declaration -> new ID LPAREN params RPAREN .

    COMMENT         reduce using rule 76 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    COMMENT_HASHTAG reduce using rule 76 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    COMMENT_MULTI   reduce using rule 76 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    empty           reduce using rule 76 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    include         reduce using rule 76 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    const           reduce using rule 76 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    print           reduce using rule 76 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    echo            reduce using rule 76 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    while           reduce using rule 76 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    if              reduce using rule 76 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    function        reduce using rule 76 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    ID              reduce using rule 76 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    class           reduce using rule 76 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    new             reduce using rule 76 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    CLOSE_TAG       reduce using rule 76 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    VARIABLE        reduce using rule 76 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    $end            reduce using rule 76 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    RBLOCK          reduce using rule 76 (create_obj_declaration -> new ID LPAREN params RPAREN .)


state 138

    (37) assignment_tail -> EQUAL NUMBER COMMA var_declaration2 .

    SEMICOLON       reduce using rule 37 (assignment_tail -> EQUAL NUMBER COMMA var_declaration2 .)
    RPAREN          reduce using rule 37 (assignment_tail -> EQUAL NUMBER COMMA var_declaration2 .)
    COMMA           reduce using rule 37 (assignment_tail -> EQUAL NUMBER COMMA var_declaration2 .)


state 139

    (38) assignment_tail -> EQUAL VARIABLE COMMA var_declaration2 .

    SEMICOLON       reduce using rule 38 (assignment_tail -> EQUAL VARIABLE COMMA var_declaration2 .)
    RPAREN          reduce using rule 38 (assignment_tail -> EQUAL VARIABLE COMMA var_declaration2 .)
    COMMA           reduce using rule 38 (assignment_tail -> EQUAL VARIABLE COMMA var_declaration2 .)


state 140

    (41) assignment_tail -> EQUAL LBRACKET expression COMMA . var_declaration2
    (35) var_declaration2 -> . VARIABLE assignment_tail

    VARIABLE        shift and go to state 34

    var_declaration2               shift and go to state 145

state 141

    (42) assignment_tail -> EQUAL LBRACKET data_type COMMA . var_declaration2
    (35) var_declaration2 -> . VARIABLE assignment_tail

    VARIABLE        shift and go to state 34

    var_declaration2               shift and go to state 146

state 142

    (44) iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration . RBLOCK

    RBLOCK          shift and go to state 147


state 143

    (68) if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list . RBLOCK else_part
    (5) declaration_list -> declaration_list . declaration
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . obj_declaration
    (19) declaration -> . create_obj_declaration
    (20) declaration -> . footer_declaration
    (21) declaration -> . empty
    (24) header_declaration -> . include CADENA SEMICOLON
    (34) var_declaration -> . var_declaration2 SEMICOLON
    (25) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (26) print_declaration -> . print var_declaration2 SEMICOLON
    (27) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (28) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (29) print_declaration -> . print data_type SEMICOLON
    (30) echo_declaration -> . echo var_declaration2 SEMICOLON
    (31) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (32) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (33) echo_declaration -> . echo data_type SEMICOLON
    (44) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (68) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (73) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration RBLOCK
    (74) fun_call -> . ID LPAREN params RPAREN
    (75) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (76) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (35) var_declaration2 -> . VARIABLE assignment_tail

    RBLOCK          shift and go to state 148
    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 21
    include         shift and go to state 22
    const           shift and go to state 24
    print           shift and go to state 26
    echo            shift and go to state 27
    while           shift and go to state 28
    if              shift and go to state 29
    function        shift and go to state 30
    ID              shift and go to state 25
    class           shift and go to state 31
    new             shift and go to state 32
    CLOSE_TAG       shift and go to state 33
    VARIABLE        shift and go to state 34

    declaration                    shift and go to state 35
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    obj_declaration                shift and go to state 18
    create_obj_declaration         shift and go to state 19
    footer_declaration             shift and go to state 20
    var_declaration2               shift and go to state 23

state 144

    (73) fun_declaration -> function ID LPAREN params RPAREN LBLOCK . declaration RBLOCK
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . obj_declaration
    (19) declaration -> . create_obj_declaration
    (20) declaration -> . footer_declaration
    (21) declaration -> . empty
    (24) header_declaration -> . include CADENA SEMICOLON
    (34) var_declaration -> . var_declaration2 SEMICOLON
    (25) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (26) print_declaration -> . print var_declaration2 SEMICOLON
    (27) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (28) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (29) print_declaration -> . print data_type SEMICOLON
    (30) echo_declaration -> . echo var_declaration2 SEMICOLON
    (31) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (32) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (33) echo_declaration -> . echo data_type SEMICOLON
    (44) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (68) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (73) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration RBLOCK
    (74) fun_call -> . ID LPAREN params RPAREN
    (75) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (76) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (35) var_declaration2 -> . VARIABLE assignment_tail

    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 21
    include         shift and go to state 22
    const           shift and go to state 24
    print           shift and go to state 26
    echo            shift and go to state 27
    while           shift and go to state 28
    if              shift and go to state 29
    function        shift and go to state 30
    ID              shift and go to state 25
    class           shift and go to state 31
    new             shift and go to state 32
    CLOSE_TAG       shift and go to state 33
    VARIABLE        shift and go to state 34

    declaration                    shift and go to state 149
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    obj_declaration                shift and go to state 18
    create_obj_declaration         shift and go to state 19
    footer_declaration             shift and go to state 20
    var_declaration2               shift and go to state 23

state 145

    (41) assignment_tail -> EQUAL LBRACKET expression COMMA var_declaration2 .

    SEMICOLON       reduce using rule 41 (assignment_tail -> EQUAL LBRACKET expression COMMA var_declaration2 .)
    RPAREN          reduce using rule 41 (assignment_tail -> EQUAL LBRACKET expression COMMA var_declaration2 .)
    COMMA           reduce using rule 41 (assignment_tail -> EQUAL LBRACKET expression COMMA var_declaration2 .)


state 146

    (42) assignment_tail -> EQUAL LBRACKET data_type COMMA var_declaration2 .

    SEMICOLON       reduce using rule 42 (assignment_tail -> EQUAL LBRACKET data_type COMMA var_declaration2 .)
    RPAREN          reduce using rule 42 (assignment_tail -> EQUAL LBRACKET data_type COMMA var_declaration2 .)
    COMMA           reduce using rule 42 (assignment_tail -> EQUAL LBRACKET data_type COMMA var_declaration2 .)


state 147

    (44) iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .

    COMMENT         reduce using rule 44 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    COMMENT_HASHTAG reduce using rule 44 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    COMMENT_MULTI   reduce using rule 44 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    empty           reduce using rule 44 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    include         reduce using rule 44 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    const           reduce using rule 44 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    print           reduce using rule 44 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    echo            reduce using rule 44 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    while           reduce using rule 44 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    if              reduce using rule 44 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    function        reduce using rule 44 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    ID              reduce using rule 44 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    class           reduce using rule 44 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    new             reduce using rule 44 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    CLOSE_TAG       reduce using rule 44 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    VARIABLE        reduce using rule 44 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    $end            reduce using rule 44 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    RBLOCK          reduce using rule 44 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)


state 148

    (68) if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK . else_part
    (69) else_part -> . elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (70) else_part -> . else LBLOCK declaration_list RBLOCK
    (71) else_part -> . endif
    (72) else_part -> . empty

    elseif          shift and go to state 151
    else            shift and go to state 152
    endif           shift and go to state 153
    empty           shift and go to state 154

    else_part                      shift and go to state 150

state 149

    (73) fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration . RBLOCK

    RBLOCK          shift and go to state 155


state 150

    (68) if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .

    COMMENT         reduce using rule 68 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    COMMENT_HASHTAG reduce using rule 68 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    COMMENT_MULTI   reduce using rule 68 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    empty           reduce using rule 68 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    include         reduce using rule 68 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    const           reduce using rule 68 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    print           reduce using rule 68 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    echo            reduce using rule 68 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    while           reduce using rule 68 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    if              reduce using rule 68 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    function        reduce using rule 68 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    ID              reduce using rule 68 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    class           reduce using rule 68 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    new             reduce using rule 68 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    CLOSE_TAG       reduce using rule 68 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    VARIABLE        reduce using rule 68 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    $end            reduce using rule 68 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    RBLOCK          reduce using rule 68 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)


state 151

    (69) else_part -> elseif . LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part

    LPAREN          shift and go to state 156


state 152

    (70) else_part -> else . LBLOCK declaration_list RBLOCK

    LBLOCK          shift and go to state 157


state 153

    (71) else_part -> endif .

    COMMENT         reduce using rule 71 (else_part -> endif .)
    COMMENT_HASHTAG reduce using rule 71 (else_part -> endif .)
    COMMENT_MULTI   reduce using rule 71 (else_part -> endif .)
    empty           reduce using rule 71 (else_part -> endif .)
    include         reduce using rule 71 (else_part -> endif .)
    const           reduce using rule 71 (else_part -> endif .)
    print           reduce using rule 71 (else_part -> endif .)
    echo            reduce using rule 71 (else_part -> endif .)
    while           reduce using rule 71 (else_part -> endif .)
    if              reduce using rule 71 (else_part -> endif .)
    function        reduce using rule 71 (else_part -> endif .)
    ID              reduce using rule 71 (else_part -> endif .)
    class           reduce using rule 71 (else_part -> endif .)
    new             reduce using rule 71 (else_part -> endif .)
    CLOSE_TAG       reduce using rule 71 (else_part -> endif .)
    VARIABLE        reduce using rule 71 (else_part -> endif .)
    $end            reduce using rule 71 (else_part -> endif .)
    RBLOCK          reduce using rule 71 (else_part -> endif .)


state 154

    (72) else_part -> empty .

    COMMENT         reduce using rule 72 (else_part -> empty .)
    COMMENT_HASHTAG reduce using rule 72 (else_part -> empty .)
    COMMENT_MULTI   reduce using rule 72 (else_part -> empty .)
    empty           reduce using rule 72 (else_part -> empty .)
    include         reduce using rule 72 (else_part -> empty .)
    const           reduce using rule 72 (else_part -> empty .)
    print           reduce using rule 72 (else_part -> empty .)
    echo            reduce using rule 72 (else_part -> empty .)
    while           reduce using rule 72 (else_part -> empty .)
    if              reduce using rule 72 (else_part -> empty .)
    function        reduce using rule 72 (else_part -> empty .)
    ID              reduce using rule 72 (else_part -> empty .)
    class           reduce using rule 72 (else_part -> empty .)
    new             reduce using rule 72 (else_part -> empty .)
    CLOSE_TAG       reduce using rule 72 (else_part -> empty .)
    VARIABLE        reduce using rule 72 (else_part -> empty .)
    $end            reduce using rule 72 (else_part -> empty .)
    RBLOCK          reduce using rule 72 (else_part -> empty .)


state 155

    (73) fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .

    COMMENT         reduce using rule 73 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    COMMENT_HASHTAG reduce using rule 73 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    COMMENT_MULTI   reduce using rule 73 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    empty           reduce using rule 73 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    include         reduce using rule 73 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    const           reduce using rule 73 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    print           reduce using rule 73 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    echo            reduce using rule 73 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    while           reduce using rule 73 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    if              reduce using rule 73 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    function        reduce using rule 73 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    ID              reduce using rule 73 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    class           reduce using rule 73 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    new             reduce using rule 73 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    CLOSE_TAG       reduce using rule 73 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    VARIABLE        reduce using rule 73 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    $end            reduce using rule 73 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    RBLOCK          reduce using rule 73 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)


state 156

    (69) else_part -> elseif LPAREN . expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (45) expression -> . additive_expression
    (46) expression -> . additive_expression comp_op additive_expression
    (47) additive_expression -> . term
    (48) additive_expression -> . term math_op term
    (49) term -> . factor
    (50) term -> . factor increment_decrement_op
    (51) term -> . increment_decrement_op factor
    (52) factor -> . NUMBER
    (53) factor -> . VARIABLE
    (54) factor -> . LPAREN expression RPAREN
    (55) increment_decrement_op -> . PLUSPLUS
    (56) increment_decrement_op -> . MINUSMINUS

    NUMBER          shift and go to state 77
    VARIABLE        shift and go to state 78
    LPAREN          shift and go to state 71
    PLUSPLUS        shift and go to state 79
    MINUSMINUS      shift and go to state 80

    expression                     shift and go to state 158
    additive_expression            shift and go to state 73
    term                           shift and go to state 74
    factor                         shift and go to state 75
    increment_decrement_op         shift and go to state 76

state 157

    (70) else_part -> else LBLOCK . declaration_list RBLOCK
    (4) declaration_list -> . declaration
    (5) declaration_list -> . declaration_list declaration
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . obj_declaration
    (19) declaration -> . create_obj_declaration
    (20) declaration -> . footer_declaration
    (21) declaration -> . empty
    (24) header_declaration -> . include CADENA SEMICOLON
    (34) var_declaration -> . var_declaration2 SEMICOLON
    (25) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (26) print_declaration -> . print var_declaration2 SEMICOLON
    (27) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (28) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (29) print_declaration -> . print data_type SEMICOLON
    (30) echo_declaration -> . echo var_declaration2 SEMICOLON
    (31) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (32) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (33) echo_declaration -> . echo data_type SEMICOLON
    (44) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (68) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (73) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration RBLOCK
    (74) fun_call -> . ID LPAREN params RPAREN
    (75) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (76) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (35) var_declaration2 -> . VARIABLE assignment_tail

    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 21
    include         shift and go to state 22
    const           shift and go to state 24
    print           shift and go to state 26
    echo            shift and go to state 27
    while           shift and go to state 28
    if              shift and go to state 29
    function        shift and go to state 30
    ID              shift and go to state 25
    class           shift and go to state 31
    new             shift and go to state 32
    CLOSE_TAG       shift and go to state 33
    VARIABLE        shift and go to state 34

    declaration_list               shift and go to state 159
    declaration                    shift and go to state 5
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    obj_declaration                shift and go to state 18
    create_obj_declaration         shift and go to state 19
    footer_declaration             shift and go to state 20
    var_declaration2               shift and go to state 23

state 158

    (69) else_part -> elseif LPAREN expression . RPAREN LBLOCK declaration_list RBLOCK else_part

    RPAREN          shift and go to state 160


state 159

    (70) else_part -> else LBLOCK declaration_list . RBLOCK
    (5) declaration_list -> declaration_list . declaration
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . obj_declaration
    (19) declaration -> . create_obj_declaration
    (20) declaration -> . footer_declaration
    (21) declaration -> . empty
    (24) header_declaration -> . include CADENA SEMICOLON
    (34) var_declaration -> . var_declaration2 SEMICOLON
    (25) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (26) print_declaration -> . print var_declaration2 SEMICOLON
    (27) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (28) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (29) print_declaration -> . print data_type SEMICOLON
    (30) echo_declaration -> . echo var_declaration2 SEMICOLON
    (31) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (32) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (33) echo_declaration -> . echo data_type SEMICOLON
    (44) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (68) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (73) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration RBLOCK
    (74) fun_call -> . ID LPAREN params RPAREN
    (75) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (76) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (35) var_declaration2 -> . VARIABLE assignment_tail

    RBLOCK          shift and go to state 161
    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 21
    include         shift and go to state 22
    const           shift and go to state 24
    print           shift and go to state 26
    echo            shift and go to state 27
    while           shift and go to state 28
    if              shift and go to state 29
    function        shift and go to state 30
    ID              shift and go to state 25
    class           shift and go to state 31
    new             shift and go to state 32
    CLOSE_TAG       shift and go to state 33
    VARIABLE        shift and go to state 34

    declaration                    shift and go to state 35
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    obj_declaration                shift and go to state 18
    create_obj_declaration         shift and go to state 19
    footer_declaration             shift and go to state 20
    var_declaration2               shift and go to state 23

state 160

    (69) else_part -> elseif LPAREN expression RPAREN . LBLOCK declaration_list RBLOCK else_part

    LBLOCK          shift and go to state 162


state 161

    (70) else_part -> else LBLOCK declaration_list RBLOCK .

    COMMENT         reduce using rule 70 (else_part -> else LBLOCK declaration_list RBLOCK .)
    COMMENT_HASHTAG reduce using rule 70 (else_part -> else LBLOCK declaration_list RBLOCK .)
    COMMENT_MULTI   reduce using rule 70 (else_part -> else LBLOCK declaration_list RBLOCK .)
    empty           reduce using rule 70 (else_part -> else LBLOCK declaration_list RBLOCK .)
    include         reduce using rule 70 (else_part -> else LBLOCK declaration_list RBLOCK .)
    const           reduce using rule 70 (else_part -> else LBLOCK declaration_list RBLOCK .)
    print           reduce using rule 70 (else_part -> else LBLOCK declaration_list RBLOCK .)
    echo            reduce using rule 70 (else_part -> else LBLOCK declaration_list RBLOCK .)
    while           reduce using rule 70 (else_part -> else LBLOCK declaration_list RBLOCK .)
    if              reduce using rule 70 (else_part -> else LBLOCK declaration_list RBLOCK .)
    function        reduce using rule 70 (else_part -> else LBLOCK declaration_list RBLOCK .)
    ID              reduce using rule 70 (else_part -> else LBLOCK declaration_list RBLOCK .)
    class           reduce using rule 70 (else_part -> else LBLOCK declaration_list RBLOCK .)
    new             reduce using rule 70 (else_part -> else LBLOCK declaration_list RBLOCK .)
    CLOSE_TAG       reduce using rule 70 (else_part -> else LBLOCK declaration_list RBLOCK .)
    VARIABLE        reduce using rule 70 (else_part -> else LBLOCK declaration_list RBLOCK .)
    $end            reduce using rule 70 (else_part -> else LBLOCK declaration_list RBLOCK .)
    RBLOCK          reduce using rule 70 (else_part -> else LBLOCK declaration_list RBLOCK .)


state 162

    (69) else_part -> elseif LPAREN expression RPAREN LBLOCK . declaration_list RBLOCK else_part
    (4) declaration_list -> . declaration
    (5) declaration_list -> . declaration_list declaration
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . obj_declaration
    (19) declaration -> . create_obj_declaration
    (20) declaration -> . footer_declaration
    (21) declaration -> . empty
    (24) header_declaration -> . include CADENA SEMICOLON
    (34) var_declaration -> . var_declaration2 SEMICOLON
    (25) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (26) print_declaration -> . print var_declaration2 SEMICOLON
    (27) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (28) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (29) print_declaration -> . print data_type SEMICOLON
    (30) echo_declaration -> . echo var_declaration2 SEMICOLON
    (31) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (32) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (33) echo_declaration -> . echo data_type SEMICOLON
    (44) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (68) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (73) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration RBLOCK
    (74) fun_call -> . ID LPAREN params RPAREN
    (75) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (76) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (35) var_declaration2 -> . VARIABLE assignment_tail

    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 21
    include         shift and go to state 22
    const           shift and go to state 24
    print           shift and go to state 26
    echo            shift and go to state 27
    while           shift and go to state 28
    if              shift and go to state 29
    function        shift and go to state 30
    ID              shift and go to state 25
    class           shift and go to state 31
    new             shift and go to state 32
    CLOSE_TAG       shift and go to state 33
    VARIABLE        shift and go to state 34

    declaration_list               shift and go to state 163
    declaration                    shift and go to state 5
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    obj_declaration                shift and go to state 18
    create_obj_declaration         shift and go to state 19
    footer_declaration             shift and go to state 20
    var_declaration2               shift and go to state 23

state 163

    (69) else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list . RBLOCK else_part
    (5) declaration_list -> declaration_list . declaration
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . obj_declaration
    (19) declaration -> . create_obj_declaration
    (20) declaration -> . footer_declaration
    (21) declaration -> . empty
    (24) header_declaration -> . include CADENA SEMICOLON
    (34) var_declaration -> . var_declaration2 SEMICOLON
    (25) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (26) print_declaration -> . print var_declaration2 SEMICOLON
    (27) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (28) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (29) print_declaration -> . print data_type SEMICOLON
    (30) echo_declaration -> . echo var_declaration2 SEMICOLON
    (31) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (32) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (33) echo_declaration -> . echo data_type SEMICOLON
    (44) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (68) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (73) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration RBLOCK
    (74) fun_call -> . ID LPAREN params RPAREN
    (75) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (76) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (35) var_declaration2 -> . VARIABLE assignment_tail

    RBLOCK          shift and go to state 164
    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 21
    include         shift and go to state 22
    const           shift and go to state 24
    print           shift and go to state 26
    echo            shift and go to state 27
    while           shift and go to state 28
    if              shift and go to state 29
    function        shift and go to state 30
    ID              shift and go to state 25
    class           shift and go to state 31
    new             shift and go to state 32
    CLOSE_TAG       shift and go to state 33
    VARIABLE        shift and go to state 34

    declaration                    shift and go to state 35
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    obj_declaration                shift and go to state 18
    create_obj_declaration         shift and go to state 19
    footer_declaration             shift and go to state 20
    var_declaration2               shift and go to state 23

state 164

    (69) else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK . else_part
    (69) else_part -> . elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (70) else_part -> . else LBLOCK declaration_list RBLOCK
    (71) else_part -> . endif
    (72) else_part -> . empty

    elseif          shift and go to state 151
    else            shift and go to state 152
    endif           shift and go to state 153
    empty           shift and go to state 154

    else_part                      shift and go to state 165

state 165

    (69) else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .

    COMMENT         reduce using rule 69 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    COMMENT_HASHTAG reduce using rule 69 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    COMMENT_MULTI   reduce using rule 69 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    empty           reduce using rule 69 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    include         reduce using rule 69 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    const           reduce using rule 69 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    print           reduce using rule 69 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    echo            reduce using rule 69 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    while           reduce using rule 69 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    if              reduce using rule 69 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    function        reduce using rule 69 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    ID              reduce using rule 69 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    class           reduce using rule 69 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    new             reduce using rule 69 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    CLOSE_TAG       reduce using rule 69 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    VARIABLE        reduce using rule 69 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    $end            reduce using rule 69 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    RBLOCK          reduce using rule 69 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMMA in state 86 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 87 resolved as shift
WARNING: reduce/reduce conflict in state 123 resolved using rule (data_type -> NUMBER)
WARNING: rejected rule (factor -> NUMBER) in state 123
