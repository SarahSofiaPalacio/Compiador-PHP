Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BACKSLASH
    COMILLASDOBLES
    COMILLASIMPLE
    HASHTAG
    INVALID_NUMBER_SEQUENCE
    INVALID_VARIABLE
    QUESTIONMARK
    abstract
    callable
    catch
    ceil
    clone
    continue
    declare
    endclare
    eval
    extends
    final
    finally
    global
    goto
    implements
    include_once
    instanceof
    insteadof
    interface
    match
    namespace
    objectoperator
    php
    private
    protected
    public
    readonly
    require
    require_once
    static
    throw
    trait
    try
    use
    var

Grammar

Rule 0     S' -> program
Rule 1     program -> header declaration_list
Rule 2     header -> OPEN_TAG
Rule 3     footer_declaration -> CLOSE_TAG
Rule 4     declaration_list -> declaration
Rule 5     declaration_list -> declaration_list declaration
Rule 6     declaration -> COMMENT
Rule 7     declaration -> COMMENT_HASHTAG
Rule 8     declaration -> COMMENT_MULTI
Rule 9     declaration -> header_declaration
Rule 10    declaration -> var_declaration
Rule 11    declaration -> constant_declaration
Rule 12    declaration -> print_declaration
Rule 13    declaration -> echo_declaration
Rule 14    declaration -> iteration_stmt
Rule 15    declaration -> if_statement
Rule 16    declaration -> fun_declaration
Rule 17    declaration -> fun_call
Rule 18    declaration -> return_statement
Rule 19    declaration -> obj_declaration
Rule 20    declaration -> create_obj_declaration
Rule 21    declaration -> footer_declaration
Rule 22    declaration -> for_loop
Rule 23    declaration -> foreach_loop
Rule 24    declaration -> switch_statement
Rule 25    declaration -> exit_statement
Rule 26    declaration -> empty
Rule 27    data_type -> NUMBER
Rule 28    data_type -> CADENA
Rule 29    header_declaration -> include CADENA SEMICOLON
Rule 30    constant_declaration -> const ID EQUAL data_type SEMICOLON
Rule 31    print_declaration -> print var_declaration2 SEMICOLON
Rule 32    print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON
Rule 33    print_declaration -> print LPAREN data_type RPAREN SEMICOLON
Rule 34    print_declaration -> print data_type SEMICOLON
Rule 35    echo_declaration -> echo var_declaration2 SEMICOLON
Rule 36    echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON
Rule 37    echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON
Rule 38    echo_declaration -> echo data_type SEMICOLON
Rule 39    var_declaration -> var_declaration2 SEMICOLON
Rule 40    var_declaration2 -> VARIABLE
Rule 41    var_declaration2 -> VARIABLE EQUAL NUMBER
Rule 42    var_declaration2 -> VARIABLE EQUAL VARIABLE
Rule 43    var_declaration2 -> VARIABLE EQUAL CADENA
Rule 44    var_declaration2 -> VARIABLE EQUAL Built_In_Declaration
Rule 45    var_declaration2 -> VARIABLE EQUAL expression
Rule 46    var_declaration2 -> VARIABLE assignation VARIABLE
Rule 47    var_declaration2 -> VARIABLE assignation NUMBER
Rule 48    var_declaration2 -> Built_In_Declaration
Rule 49    var_declaration2 -> Concatenar_Cadenas_declaration
Rule 50    var_declaration2 -> VARIABLE EQUAL ID LPAREN params RPAREN
Rule 51    var_declaration2 -> VARIABLE assignment_tail
Rule 52    var_declaration2 -> VARIABLE EQUAL assignment_tail
Rule 53    assignment_tail -> COMMA var_declaration2
Rule 54    assignment_tail -> LBRACKET params RBRACKET
Rule 55    assignment_tail -> LBLOCK params RBLOCK
Rule 56    assignment_tail -> VARIABLE LBRACKET expression COMMA params
Rule 57    assignment_tail -> VARIABLE LBRACKET params RBRACKET
Rule 58    assignment_tail -> VARIABLE LBLOCK params RBLOCK
Rule 59    iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK
Rule 60    iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON
Rule 61    iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON
Rule 62    iteration_stmt -> do COLON declaration endwhile SEMICOLON
Rule 63    expression -> additive_expression
Rule 64    expression -> additive_expression logical_op additive_expression
Rule 65    expression -> additive_expression comp_op additive_expression
Rule 66    expression -> additive_expression comp_op additive_expression logical_op additive_expression comp_op additive_expression
Rule 67    expression -> additive_expression bits_op additive_expression
Rule 68    additive_expression -> term
Rule 69    additive_expression -> term math_op term
Rule 70    term -> MINUS term
Rule 71    term -> factor
Rule 72    term -> factor increment_decrement_op
Rule 73    term -> increment_decrement_op factor
Rule 74    factor -> NUMBER
Rule 75    factor -> VARIABLE
Rule 76    factor -> LPAREN expression RPAREN
Rule 77    increment_decrement_op -> PLUSPLUS
Rule 78    increment_decrement_op -> MINUSMINUS
Rule 79    math_op -> PLUS
Rule 80    math_op -> MINUS
Rule 81    math_op -> TIMES
Rule 82    math_op -> DIVIDE
Rule 83    math_op -> MULEQUAL
Rule 84    math_op -> PLUSEQUAL
Rule 85    math_op -> MINUSEQUAL
Rule 86    math_op -> MOD
Rule 87    comp_op -> LESS
Rule 88    comp_op -> LESSEQUAL
Rule 89    comp_op -> GREATER
Rule 90    comp_op -> GREATEREQUAL
Rule 91    comp_op -> DEQUAL
Rule 92    comp_op -> DISTINT
Rule 93    comp_op -> DIVEQUAL
Rule 94    comp_op -> ISEQUAL
Rule 95    comp_op -> ISIDENTICAL
Rule 96    comp_op -> ISNOTIDENTICAL
Rule 97    logical_op -> BOOL_OR
Rule 98    logical_op -> BOOL_AND
Rule 99    logical_op -> NOT
Rule 100   logical_op -> or
Rule 101   logical_op -> and
Rule 102   logical_op -> xor
Rule 103   if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
Rule 104   else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
Rule 105   else_part -> else LBLOCK declaration_list RBLOCK
Rule 106   else_part -> endif
Rule 107   else_part -> empty_function
Rule 108   fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK
Rule 109   fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK
Rule 110   fun_call -> ID LPAREN params RPAREN
Rule 111   return_statement -> return expression SEMICOLON
Rule 112   return_statement -> return params SEMICOLON
Rule 113   return_statement -> return SEMICOLON
Rule 114   obj_declaration -> class ID LBLOCK declaration RBLOCK
Rule 115   create_obj_declaration -> new ID LPAREN params RPAREN
Rule 116   params -> single_param
Rule 117   params -> params COMMA single_param
Rule 118   single_param -> var_declaration2
Rule 119   single_param -> data_type
Rule 120   single_param -> empty_function
Rule 121   for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK
Rule 122   for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON
Rule 123   for_init -> var_declaration2 SEMICOLON
Rule 124   for_expr -> expression SEMICOLON
Rule 125   for_update -> expression
Rule 126   exit_statement -> exit LPAREN expression RPAREN SEMICOLON
Rule 127   foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK
Rule 128   foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON
Rule 129   switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK
Rule 130   switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON
Rule 131   case_blocks -> case_blocks case_block
Rule 132   case_blocks -> case_block
Rule 133   case_blocks -> empty_function
Rule 134   case_block -> case expression COLON statement_list
Rule 135   case_block -> case expression COLON statement_list break SEMICOLON
Rule 136   default_block -> default COLON statement_list
Rule 137   default_block -> empty_function
Rule 138   statement_list -> declaration
Rule 139   statement_list -> statement_list declaration
Rule 140   statement_list -> empty_function
Rule 141   Built_In_Declaration -> array LPAREN params RPAREN
Rule 142   Built_In_Declaration -> pow LPAREN params RPAREN
Rule 143   Built_In_Declaration -> POW LPAREN params RPAREN
Rule 144   Built_In_Declaration -> abs LPAREN params RPAREN
Rule 145   Built_In_Declaration -> cos LPAREN params RPAREN
Rule 146   Built_In_Declaration -> deg2rad LPAREN params RPAREN
Rule 147   Built_In_Declaration -> rad2deg LPAREN params RPAREN
Rule 148   Built_In_Declaration -> die LPAREN params RPAREN
Rule 149   Built_In_Declaration -> exp LPAREN params RPAREN
Rule 150   Built_In_Declaration -> floor LPAREN params RPAREN
Rule 151   Built_In_Declaration -> isset LPAREN params RPAREN
Rule 152   Built_In_Declaration -> list LPAREN params RPAREN
Rule 153   Built_In_Declaration -> log LPAREN params RPAREN
Rule 154   Built_In_Declaration -> log10 LPAREN params RPAREN
Rule 155   Built_In_Declaration -> max LPAREN params RPAREN
Rule 156   Built_In_Declaration -> min LPAREN params RPAREN
Rule 157   Built_In_Declaration -> rand LPAREN params RPAREN
Rule 158   Built_In_Declaration -> round LPAREN params RPAREN
Rule 159   Built_In_Declaration -> sin LPAREN params RPAREN
Rule 160   Built_In_Declaration -> sqrt LPAREN params RPAREN
Rule 161   Built_In_Declaration -> unset LPAREN params RPAREN
Rule 162   Concatenar_Cadenas_declaration -> VARIABLE DOT VARIABLE
Rule 163   Concatenar_Cadenas_declaration -> CADENA DOT CADENA
Rule 164   Concatenar_Cadenas_declaration -> CADENA DOT VARIABLE
Rule 165   Concatenar_Cadenas_declaration -> VARIABLE DOT CADENA
Rule 166   bits_op -> AMPERSANT
Rule 167   bits_op -> SR
Rule 168   bits_op -> SL
Rule 169   assignation -> ASSIGN
Rule 170   assignation -> SREQUAL
Rule 171   assignation -> SLEQUAL
Rule 172   assignation -> XOREQUAL
Rule 173   assignation -> ANDEQUAL
Rule 174   empty_function -> <empty>

Terminals, with rules where they appear

AMPERSANT            : 166
ANDEQUAL             : 173
ASSIGN               : 169
BACKSLASH            : 
BOOL_AND             : 98
BOOL_OR              : 97
CADENA               : 28 29 43 163 163 164 165
CLOSE_TAG            : 3
COLON                : 60 62 122 128 130 134 135 136
COMILLASDOBLES       : 
COMILLASIMPLE        : 
COMMA                : 53 56 117
COMMENT              : 6
COMMENT_HASHTAG      : 7
COMMENT_MULTI        : 8
DEQUAL               : 91
DISTINT              : 92
DIVEQUAL             : 93
DIVIDE               : 82
DOT                  : 162 163 164 165
EQUAL                : 30 41 42 43 44 45 50 52
GREATER              : 89
GREATEREQUAL         : 90
HASHTAG              : 
ID                   : 30 50 108 109 110 114 115
INVALID_NUMBER_SEQUENCE : 
INVALID_VARIABLE     : 
ISEQUAL              : 94
ISIDENTICAL          : 95
ISNOTIDENTICAL       : 96
LBLOCK               : 55 58 59 61 103 104 105 108 109 114 121 127 129
LBRACKET             : 54 56 57
LESS                 : 87
LESSEQUAL            : 88
LPAREN               : 32 33 36 37 50 59 60 61 76 103 104 108 109 110 115 121 122 126 127 128 129 130 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161
MINUS                : 70 80
MINUSEQUAL           : 85
MINUSMINUS           : 78
MOD                  : 86
MULEQUAL             : 83
NOT                  : 99
NUMBER               : 27 41 47 74
OPEN_TAG             : 2
PLUS                 : 79
PLUSEQUAL            : 84
PLUSPLUS             : 77
POW                  : 143
QUESTIONMARK         : 
RBLOCK               : 55 58 59 61 103 104 105 108 109 114 121 127 129
RBRACKET             : 54 57
RPAREN               : 32 33 36 37 50 59 60 61 76 103 104 108 109 110 115 121 122 126 127 128 129 130 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161
SEMICOLON            : 29 30 31 32 33 34 35 36 37 38 39 60 61 62 111 112 113 122 123 124 126 128 130 135
SL                   : 168
SLEQUAL              : 171
SR                   : 167
SREQUAL              : 170
TIMES                : 81
VARIABLE             : 40 41 42 42 43 44 45 46 46 47 50 51 52 56 57 58 75 162 162 164 165
XOREQUAL             : 172
abs                  : 144
abstract             : 
and                  : 101
array                : 141
as                   : 127 128
break                : 135
callable             : 
case                 : 134 135
catch                : 
ceil                 : 
class                : 114
clone                : 
const                : 30
continue             : 
cos                  : 145
declare              : 
default              : 136
deg2rad              : 146
die                  : 148
do                   : 61 62
echo                 : 35 36 37 38
else                 : 105
elseif               : 104
empty                : 26
endclare             : 
endfor               : 122
endforeach           : 128
endif                : 106
endswitch            : 130
endwhile             : 60 62
error                : 
eval                 : 
exit                 : 126
exp                  : 149
extends              : 
final                : 
finally              : 
floor                : 150
for                  : 121 122
foreach              : 127 128
function             : 108 109
global               : 
goto                 : 
if                   : 103
implements           : 
include              : 29
include_once         : 
instanceof           : 
insteadof            : 
interface            : 
isset                : 151
list                 : 152
log                  : 153
log10                : 154
match                : 
max                  : 155
min                  : 156
namespace            : 
new                  : 115
objectoperator       : 
or                   : 100
php                  : 
pow                  : 142
print                : 31 32 33 34
private              : 
protected            : 
public               : 
rad2deg              : 147
rand                 : 157
readonly             : 
require              : 
require_once         : 
return               : 111 112 113
round                : 158
sin                  : 159
sqrt                 : 160
static               : 
switch               : 129 130
throw                : 
trait                : 
try                  : 
unset                : 161
use                  : 
var                  : 
while                : 59 60 61
xor                  : 102

Nonterminals, with rules where they appear

Built_In_Declaration : 44 48
Concatenar_Cadenas_declaration : 49
additive_expression  : 63 64 64 65 65 66 66 66 66 67 67
assignation          : 46 47
assignment_tail      : 51 52
bits_op              : 67
case_block           : 131 132
case_blocks          : 129 130 131
comp_op              : 65 66 66
constant_declaration : 11
create_obj_declaration : 20
data_type            : 30 33 34 37 38 119
declaration          : 4 5 59 60 61 62 114 138 139
declaration_list     : 1 5 103 104 105 108 109 121 122 127 128
default_block        : 129 130
echo_declaration     : 13
else_part            : 103 104
empty_function       : 107 120 133 137 140
exit_statement       : 25
expression           : 45 56 59 60 61 76 103 104 111 124 125 126 127 127 128 128 129 130 134 135
factor               : 71 72 73
footer_declaration   : 21
for_expr             : 121 122
for_init             : 121 122
for_loop             : 22
for_update           : 121 122
foreach_loop         : 23
fun_call             : 17
fun_declaration      : 16
header               : 1
header_declaration   : 9
if_statement         : 15
increment_decrement_op : 72 73
iteration_stmt       : 14
logical_op           : 64 66
math_op              : 69
obj_declaration      : 19
params               : 50 54 55 56 57 58 108 109 110 112 115 117 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161
print_declaration    : 12
program              : 0
return_statement     : 18 109
single_param         : 116 117
statement_list       : 134 135 136 139
switch_statement     : 24
term                 : 68 69 69 70
var_declaration      : 10
var_declaration2     : 31 32 35 36 39 53 118 123

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . header declaration_list
    (2) header -> . OPEN_TAG

    OPEN_TAG        shift and go to state 3

    program                        shift and go to state 1
    header                         shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> header . declaration_list
    (4) declaration_list -> . declaration
    (5) declaration_list -> . declaration_list declaration
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . return_statement
    (19) declaration -> . obj_declaration
    (20) declaration -> . create_obj_declaration
    (21) declaration -> . footer_declaration
    (22) declaration -> . for_loop
    (23) declaration -> . foreach_loop
    (24) declaration -> . switch_statement
    (25) declaration -> . exit_statement
    (26) declaration -> . empty
    (29) header_declaration -> . include CADENA SEMICOLON
    (39) var_declaration -> . var_declaration2 SEMICOLON
    (30) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (31) print_declaration -> . print var_declaration2 SEMICOLON
    (32) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (33) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (34) print_declaration -> . print data_type SEMICOLON
    (35) echo_declaration -> . echo var_declaration2 SEMICOLON
    (36) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (37) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (38) echo_declaration -> . echo data_type SEMICOLON
    (59) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (60) iteration_stmt -> . while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON
    (61) iteration_stmt -> . do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON
    (62) iteration_stmt -> . do COLON declaration endwhile SEMICOLON
    (103) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (108) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK
    (109) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK
    (110) fun_call -> . ID LPAREN params RPAREN
    (111) return_statement -> . return expression SEMICOLON
    (112) return_statement -> . return params SEMICOLON
    (113) return_statement -> . return SEMICOLON
    (114) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (115) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (121) for_loop -> . for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK
    (122) for_loop -> . for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON
    (127) foreach_loop -> . foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK
    (128) foreach_loop -> . foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON
    (129) switch_statement -> . switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK
    (130) switch_statement -> . switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON
    (126) exit_statement -> . exit LPAREN expression RPAREN SEMICOLON
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 26
    include         shift and go to state 27
    const           shift and go to state 30
    print           shift and go to state 32
    echo            shift and go to state 33
    while           shift and go to state 34
    do              shift and go to state 35
    if              shift and go to state 36
    function        shift and go to state 37
    ID              shift and go to state 31
    return          shift and go to state 38
    class           shift and go to state 39
    new             shift and go to state 40
    CLOSE_TAG       shift and go to state 41
    for             shift and go to state 42
    foreach         shift and go to state 43
    switch          shift and go to state 44
    exit            shift and go to state 45
    VARIABLE        shift and go to state 46
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69
    CADENA          shift and go to state 28

    declaration_list               shift and go to state 4
    declaration                    shift and go to state 5
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    return_statement               shift and go to state 18
    obj_declaration                shift and go to state 19
    create_obj_declaration         shift and go to state 20
    footer_declaration             shift and go to state 21
    for_loop                       shift and go to state 22
    foreach_loop                   shift and go to state 23
    switch_statement               shift and go to state 24
    exit_statement                 shift and go to state 25
    var_declaration2               shift and go to state 29
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 3

    (2) header -> OPEN_TAG .

    COMMENT         reduce using rule 2 (header -> OPEN_TAG .)
    COMMENT_HASHTAG reduce using rule 2 (header -> OPEN_TAG .)
    COMMENT_MULTI   reduce using rule 2 (header -> OPEN_TAG .)
    empty           reduce using rule 2 (header -> OPEN_TAG .)
    include         reduce using rule 2 (header -> OPEN_TAG .)
    const           reduce using rule 2 (header -> OPEN_TAG .)
    print           reduce using rule 2 (header -> OPEN_TAG .)
    echo            reduce using rule 2 (header -> OPEN_TAG .)
    while           reduce using rule 2 (header -> OPEN_TAG .)
    do              reduce using rule 2 (header -> OPEN_TAG .)
    if              reduce using rule 2 (header -> OPEN_TAG .)
    function        reduce using rule 2 (header -> OPEN_TAG .)
    ID              reduce using rule 2 (header -> OPEN_TAG .)
    return          reduce using rule 2 (header -> OPEN_TAG .)
    class           reduce using rule 2 (header -> OPEN_TAG .)
    new             reduce using rule 2 (header -> OPEN_TAG .)
    CLOSE_TAG       reduce using rule 2 (header -> OPEN_TAG .)
    for             reduce using rule 2 (header -> OPEN_TAG .)
    foreach         reduce using rule 2 (header -> OPEN_TAG .)
    switch          reduce using rule 2 (header -> OPEN_TAG .)
    exit            reduce using rule 2 (header -> OPEN_TAG .)
    VARIABLE        reduce using rule 2 (header -> OPEN_TAG .)
    array           reduce using rule 2 (header -> OPEN_TAG .)
    pow             reduce using rule 2 (header -> OPEN_TAG .)
    POW             reduce using rule 2 (header -> OPEN_TAG .)
    abs             reduce using rule 2 (header -> OPEN_TAG .)
    cos             reduce using rule 2 (header -> OPEN_TAG .)
    deg2rad         reduce using rule 2 (header -> OPEN_TAG .)
    rad2deg         reduce using rule 2 (header -> OPEN_TAG .)
    die             reduce using rule 2 (header -> OPEN_TAG .)
    exp             reduce using rule 2 (header -> OPEN_TAG .)
    floor           reduce using rule 2 (header -> OPEN_TAG .)
    isset           reduce using rule 2 (header -> OPEN_TAG .)
    list            reduce using rule 2 (header -> OPEN_TAG .)
    log             reduce using rule 2 (header -> OPEN_TAG .)
    log10           reduce using rule 2 (header -> OPEN_TAG .)
    max             reduce using rule 2 (header -> OPEN_TAG .)
    min             reduce using rule 2 (header -> OPEN_TAG .)
    rand            reduce using rule 2 (header -> OPEN_TAG .)
    round           reduce using rule 2 (header -> OPEN_TAG .)
    sin             reduce using rule 2 (header -> OPEN_TAG .)
    sqrt            reduce using rule 2 (header -> OPEN_TAG .)
    unset           reduce using rule 2 (header -> OPEN_TAG .)
    CADENA          reduce using rule 2 (header -> OPEN_TAG .)


state 4

    (1) program -> header declaration_list .
    (5) declaration_list -> declaration_list . declaration
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . return_statement
    (19) declaration -> . obj_declaration
    (20) declaration -> . create_obj_declaration
    (21) declaration -> . footer_declaration
    (22) declaration -> . for_loop
    (23) declaration -> . foreach_loop
    (24) declaration -> . switch_statement
    (25) declaration -> . exit_statement
    (26) declaration -> . empty
    (29) header_declaration -> . include CADENA SEMICOLON
    (39) var_declaration -> . var_declaration2 SEMICOLON
    (30) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (31) print_declaration -> . print var_declaration2 SEMICOLON
    (32) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (33) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (34) print_declaration -> . print data_type SEMICOLON
    (35) echo_declaration -> . echo var_declaration2 SEMICOLON
    (36) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (37) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (38) echo_declaration -> . echo data_type SEMICOLON
    (59) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (60) iteration_stmt -> . while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON
    (61) iteration_stmt -> . do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON
    (62) iteration_stmt -> . do COLON declaration endwhile SEMICOLON
    (103) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (108) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK
    (109) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK
    (110) fun_call -> . ID LPAREN params RPAREN
    (111) return_statement -> . return expression SEMICOLON
    (112) return_statement -> . return params SEMICOLON
    (113) return_statement -> . return SEMICOLON
    (114) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (115) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (121) for_loop -> . for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK
    (122) for_loop -> . for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON
    (127) foreach_loop -> . foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK
    (128) foreach_loop -> . foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON
    (129) switch_statement -> . switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK
    (130) switch_statement -> . switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON
    (126) exit_statement -> . exit LPAREN expression RPAREN SEMICOLON
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    $end            reduce using rule 1 (program -> header declaration_list .)
    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 26
    include         shift and go to state 27
    const           shift and go to state 30
    print           shift and go to state 32
    echo            shift and go to state 33
    while           shift and go to state 34
    do              shift and go to state 35
    if              shift and go to state 36
    function        shift and go to state 37
    ID              shift and go to state 31
    return          shift and go to state 38
    class           shift and go to state 39
    new             shift and go to state 40
    CLOSE_TAG       shift and go to state 41
    for             shift and go to state 42
    foreach         shift and go to state 43
    switch          shift and go to state 44
    exit            shift and go to state 45
    VARIABLE        shift and go to state 46
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69
    CADENA          shift and go to state 28

    declaration                    shift and go to state 70
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    return_statement               shift and go to state 18
    obj_declaration                shift and go to state 19
    create_obj_declaration         shift and go to state 20
    footer_declaration             shift and go to state 21
    for_loop                       shift and go to state 22
    foreach_loop                   shift and go to state 23
    switch_statement               shift and go to state 24
    exit_statement                 shift and go to state 25
    var_declaration2               shift and go to state 29
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 5

    (4) declaration_list -> declaration .

    COMMENT         reduce using rule 4 (declaration_list -> declaration .)
    COMMENT_HASHTAG reduce using rule 4 (declaration_list -> declaration .)
    COMMENT_MULTI   reduce using rule 4 (declaration_list -> declaration .)
    empty           reduce using rule 4 (declaration_list -> declaration .)
    include         reduce using rule 4 (declaration_list -> declaration .)
    const           reduce using rule 4 (declaration_list -> declaration .)
    print           reduce using rule 4 (declaration_list -> declaration .)
    echo            reduce using rule 4 (declaration_list -> declaration .)
    while           reduce using rule 4 (declaration_list -> declaration .)
    do              reduce using rule 4 (declaration_list -> declaration .)
    if              reduce using rule 4 (declaration_list -> declaration .)
    function        reduce using rule 4 (declaration_list -> declaration .)
    ID              reduce using rule 4 (declaration_list -> declaration .)
    return          reduce using rule 4 (declaration_list -> declaration .)
    class           reduce using rule 4 (declaration_list -> declaration .)
    new             reduce using rule 4 (declaration_list -> declaration .)
    CLOSE_TAG       reduce using rule 4 (declaration_list -> declaration .)
    for             reduce using rule 4 (declaration_list -> declaration .)
    foreach         reduce using rule 4 (declaration_list -> declaration .)
    switch          reduce using rule 4 (declaration_list -> declaration .)
    exit            reduce using rule 4 (declaration_list -> declaration .)
    VARIABLE        reduce using rule 4 (declaration_list -> declaration .)
    array           reduce using rule 4 (declaration_list -> declaration .)
    pow             reduce using rule 4 (declaration_list -> declaration .)
    POW             reduce using rule 4 (declaration_list -> declaration .)
    abs             reduce using rule 4 (declaration_list -> declaration .)
    cos             reduce using rule 4 (declaration_list -> declaration .)
    deg2rad         reduce using rule 4 (declaration_list -> declaration .)
    rad2deg         reduce using rule 4 (declaration_list -> declaration .)
    die             reduce using rule 4 (declaration_list -> declaration .)
    exp             reduce using rule 4 (declaration_list -> declaration .)
    floor           reduce using rule 4 (declaration_list -> declaration .)
    isset           reduce using rule 4 (declaration_list -> declaration .)
    list            reduce using rule 4 (declaration_list -> declaration .)
    log             reduce using rule 4 (declaration_list -> declaration .)
    log10           reduce using rule 4 (declaration_list -> declaration .)
    max             reduce using rule 4 (declaration_list -> declaration .)
    min             reduce using rule 4 (declaration_list -> declaration .)
    rand            reduce using rule 4 (declaration_list -> declaration .)
    round           reduce using rule 4 (declaration_list -> declaration .)
    sin             reduce using rule 4 (declaration_list -> declaration .)
    sqrt            reduce using rule 4 (declaration_list -> declaration .)
    unset           reduce using rule 4 (declaration_list -> declaration .)
    CADENA          reduce using rule 4 (declaration_list -> declaration .)
    $end            reduce using rule 4 (declaration_list -> declaration .)
    RBLOCK          reduce using rule 4 (declaration_list -> declaration .)
    endfor          reduce using rule 4 (declaration_list -> declaration .)
    endforeach      reduce using rule 4 (declaration_list -> declaration .)


state 6

    (6) declaration -> COMMENT .

    COMMENT         reduce using rule 6 (declaration -> COMMENT .)
    COMMENT_HASHTAG reduce using rule 6 (declaration -> COMMENT .)
    COMMENT_MULTI   reduce using rule 6 (declaration -> COMMENT .)
    empty           reduce using rule 6 (declaration -> COMMENT .)
    include         reduce using rule 6 (declaration -> COMMENT .)
    const           reduce using rule 6 (declaration -> COMMENT .)
    print           reduce using rule 6 (declaration -> COMMENT .)
    echo            reduce using rule 6 (declaration -> COMMENT .)
    while           reduce using rule 6 (declaration -> COMMENT .)
    do              reduce using rule 6 (declaration -> COMMENT .)
    if              reduce using rule 6 (declaration -> COMMENT .)
    function        reduce using rule 6 (declaration -> COMMENT .)
    ID              reduce using rule 6 (declaration -> COMMENT .)
    return          reduce using rule 6 (declaration -> COMMENT .)
    class           reduce using rule 6 (declaration -> COMMENT .)
    new             reduce using rule 6 (declaration -> COMMENT .)
    CLOSE_TAG       reduce using rule 6 (declaration -> COMMENT .)
    for             reduce using rule 6 (declaration -> COMMENT .)
    foreach         reduce using rule 6 (declaration -> COMMENT .)
    switch          reduce using rule 6 (declaration -> COMMENT .)
    exit            reduce using rule 6 (declaration -> COMMENT .)
    VARIABLE        reduce using rule 6 (declaration -> COMMENT .)
    array           reduce using rule 6 (declaration -> COMMENT .)
    pow             reduce using rule 6 (declaration -> COMMENT .)
    POW             reduce using rule 6 (declaration -> COMMENT .)
    abs             reduce using rule 6 (declaration -> COMMENT .)
    cos             reduce using rule 6 (declaration -> COMMENT .)
    deg2rad         reduce using rule 6 (declaration -> COMMENT .)
    rad2deg         reduce using rule 6 (declaration -> COMMENT .)
    die             reduce using rule 6 (declaration -> COMMENT .)
    exp             reduce using rule 6 (declaration -> COMMENT .)
    floor           reduce using rule 6 (declaration -> COMMENT .)
    isset           reduce using rule 6 (declaration -> COMMENT .)
    list            reduce using rule 6 (declaration -> COMMENT .)
    log             reduce using rule 6 (declaration -> COMMENT .)
    log10           reduce using rule 6 (declaration -> COMMENT .)
    max             reduce using rule 6 (declaration -> COMMENT .)
    min             reduce using rule 6 (declaration -> COMMENT .)
    rand            reduce using rule 6 (declaration -> COMMENT .)
    round           reduce using rule 6 (declaration -> COMMENT .)
    sin             reduce using rule 6 (declaration -> COMMENT .)
    sqrt            reduce using rule 6 (declaration -> COMMENT .)
    unset           reduce using rule 6 (declaration -> COMMENT .)
    CADENA          reduce using rule 6 (declaration -> COMMENT .)
    $end            reduce using rule 6 (declaration -> COMMENT .)
    RBLOCK          reduce using rule 6 (declaration -> COMMENT .)
    endwhile        reduce using rule 6 (declaration -> COMMENT .)
    endfor          reduce using rule 6 (declaration -> COMMENT .)
    endforeach      reduce using rule 6 (declaration -> COMMENT .)
    endswitch       reduce using rule 6 (declaration -> COMMENT .)
    break           reduce using rule 6 (declaration -> COMMENT .)
    default         reduce using rule 6 (declaration -> COMMENT .)
    case            reduce using rule 6 (declaration -> COMMENT .)


state 7

    (7) declaration -> COMMENT_HASHTAG .

    COMMENT         reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    COMMENT_HASHTAG reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    COMMENT_MULTI   reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    empty           reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    include         reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    const           reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    print           reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    echo            reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    while           reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    do              reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    if              reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    function        reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    ID              reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    return          reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    class           reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    new             reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    CLOSE_TAG       reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    for             reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    foreach         reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    switch          reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    exit            reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    VARIABLE        reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    array           reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    pow             reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    POW             reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    abs             reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    cos             reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    deg2rad         reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    rad2deg         reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    die             reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    exp             reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    floor           reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    isset           reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    list            reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    log             reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    log10           reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    max             reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    min             reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    rand            reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    round           reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    sin             reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    sqrt            reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    unset           reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    CADENA          reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    $end            reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    RBLOCK          reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    endwhile        reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    endfor          reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    endforeach      reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    endswitch       reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    break           reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    default         reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    case            reduce using rule 7 (declaration -> COMMENT_HASHTAG .)


state 8

    (8) declaration -> COMMENT_MULTI .

    COMMENT         reduce using rule 8 (declaration -> COMMENT_MULTI .)
    COMMENT_HASHTAG reduce using rule 8 (declaration -> COMMENT_MULTI .)
    COMMENT_MULTI   reduce using rule 8 (declaration -> COMMENT_MULTI .)
    empty           reduce using rule 8 (declaration -> COMMENT_MULTI .)
    include         reduce using rule 8 (declaration -> COMMENT_MULTI .)
    const           reduce using rule 8 (declaration -> COMMENT_MULTI .)
    print           reduce using rule 8 (declaration -> COMMENT_MULTI .)
    echo            reduce using rule 8 (declaration -> COMMENT_MULTI .)
    while           reduce using rule 8 (declaration -> COMMENT_MULTI .)
    do              reduce using rule 8 (declaration -> COMMENT_MULTI .)
    if              reduce using rule 8 (declaration -> COMMENT_MULTI .)
    function        reduce using rule 8 (declaration -> COMMENT_MULTI .)
    ID              reduce using rule 8 (declaration -> COMMENT_MULTI .)
    return          reduce using rule 8 (declaration -> COMMENT_MULTI .)
    class           reduce using rule 8 (declaration -> COMMENT_MULTI .)
    new             reduce using rule 8 (declaration -> COMMENT_MULTI .)
    CLOSE_TAG       reduce using rule 8 (declaration -> COMMENT_MULTI .)
    for             reduce using rule 8 (declaration -> COMMENT_MULTI .)
    foreach         reduce using rule 8 (declaration -> COMMENT_MULTI .)
    switch          reduce using rule 8 (declaration -> COMMENT_MULTI .)
    exit            reduce using rule 8 (declaration -> COMMENT_MULTI .)
    VARIABLE        reduce using rule 8 (declaration -> COMMENT_MULTI .)
    array           reduce using rule 8 (declaration -> COMMENT_MULTI .)
    pow             reduce using rule 8 (declaration -> COMMENT_MULTI .)
    POW             reduce using rule 8 (declaration -> COMMENT_MULTI .)
    abs             reduce using rule 8 (declaration -> COMMENT_MULTI .)
    cos             reduce using rule 8 (declaration -> COMMENT_MULTI .)
    deg2rad         reduce using rule 8 (declaration -> COMMENT_MULTI .)
    rad2deg         reduce using rule 8 (declaration -> COMMENT_MULTI .)
    die             reduce using rule 8 (declaration -> COMMENT_MULTI .)
    exp             reduce using rule 8 (declaration -> COMMENT_MULTI .)
    floor           reduce using rule 8 (declaration -> COMMENT_MULTI .)
    isset           reduce using rule 8 (declaration -> COMMENT_MULTI .)
    list            reduce using rule 8 (declaration -> COMMENT_MULTI .)
    log             reduce using rule 8 (declaration -> COMMENT_MULTI .)
    log10           reduce using rule 8 (declaration -> COMMENT_MULTI .)
    max             reduce using rule 8 (declaration -> COMMENT_MULTI .)
    min             reduce using rule 8 (declaration -> COMMENT_MULTI .)
    rand            reduce using rule 8 (declaration -> COMMENT_MULTI .)
    round           reduce using rule 8 (declaration -> COMMENT_MULTI .)
    sin             reduce using rule 8 (declaration -> COMMENT_MULTI .)
    sqrt            reduce using rule 8 (declaration -> COMMENT_MULTI .)
    unset           reduce using rule 8 (declaration -> COMMENT_MULTI .)
    CADENA          reduce using rule 8 (declaration -> COMMENT_MULTI .)
    $end            reduce using rule 8 (declaration -> COMMENT_MULTI .)
    RBLOCK          reduce using rule 8 (declaration -> COMMENT_MULTI .)
    endwhile        reduce using rule 8 (declaration -> COMMENT_MULTI .)
    endfor          reduce using rule 8 (declaration -> COMMENT_MULTI .)
    endforeach      reduce using rule 8 (declaration -> COMMENT_MULTI .)
    endswitch       reduce using rule 8 (declaration -> COMMENT_MULTI .)
    break           reduce using rule 8 (declaration -> COMMENT_MULTI .)
    default         reduce using rule 8 (declaration -> COMMENT_MULTI .)
    case            reduce using rule 8 (declaration -> COMMENT_MULTI .)


state 9

    (9) declaration -> header_declaration .

    COMMENT         reduce using rule 9 (declaration -> header_declaration .)
    COMMENT_HASHTAG reduce using rule 9 (declaration -> header_declaration .)
    COMMENT_MULTI   reduce using rule 9 (declaration -> header_declaration .)
    empty           reduce using rule 9 (declaration -> header_declaration .)
    include         reduce using rule 9 (declaration -> header_declaration .)
    const           reduce using rule 9 (declaration -> header_declaration .)
    print           reduce using rule 9 (declaration -> header_declaration .)
    echo            reduce using rule 9 (declaration -> header_declaration .)
    while           reduce using rule 9 (declaration -> header_declaration .)
    do              reduce using rule 9 (declaration -> header_declaration .)
    if              reduce using rule 9 (declaration -> header_declaration .)
    function        reduce using rule 9 (declaration -> header_declaration .)
    ID              reduce using rule 9 (declaration -> header_declaration .)
    return          reduce using rule 9 (declaration -> header_declaration .)
    class           reduce using rule 9 (declaration -> header_declaration .)
    new             reduce using rule 9 (declaration -> header_declaration .)
    CLOSE_TAG       reduce using rule 9 (declaration -> header_declaration .)
    for             reduce using rule 9 (declaration -> header_declaration .)
    foreach         reduce using rule 9 (declaration -> header_declaration .)
    switch          reduce using rule 9 (declaration -> header_declaration .)
    exit            reduce using rule 9 (declaration -> header_declaration .)
    VARIABLE        reduce using rule 9 (declaration -> header_declaration .)
    array           reduce using rule 9 (declaration -> header_declaration .)
    pow             reduce using rule 9 (declaration -> header_declaration .)
    POW             reduce using rule 9 (declaration -> header_declaration .)
    abs             reduce using rule 9 (declaration -> header_declaration .)
    cos             reduce using rule 9 (declaration -> header_declaration .)
    deg2rad         reduce using rule 9 (declaration -> header_declaration .)
    rad2deg         reduce using rule 9 (declaration -> header_declaration .)
    die             reduce using rule 9 (declaration -> header_declaration .)
    exp             reduce using rule 9 (declaration -> header_declaration .)
    floor           reduce using rule 9 (declaration -> header_declaration .)
    isset           reduce using rule 9 (declaration -> header_declaration .)
    list            reduce using rule 9 (declaration -> header_declaration .)
    log             reduce using rule 9 (declaration -> header_declaration .)
    log10           reduce using rule 9 (declaration -> header_declaration .)
    max             reduce using rule 9 (declaration -> header_declaration .)
    min             reduce using rule 9 (declaration -> header_declaration .)
    rand            reduce using rule 9 (declaration -> header_declaration .)
    round           reduce using rule 9 (declaration -> header_declaration .)
    sin             reduce using rule 9 (declaration -> header_declaration .)
    sqrt            reduce using rule 9 (declaration -> header_declaration .)
    unset           reduce using rule 9 (declaration -> header_declaration .)
    CADENA          reduce using rule 9 (declaration -> header_declaration .)
    $end            reduce using rule 9 (declaration -> header_declaration .)
    RBLOCK          reduce using rule 9 (declaration -> header_declaration .)
    endwhile        reduce using rule 9 (declaration -> header_declaration .)
    endfor          reduce using rule 9 (declaration -> header_declaration .)
    endforeach      reduce using rule 9 (declaration -> header_declaration .)
    endswitch       reduce using rule 9 (declaration -> header_declaration .)
    break           reduce using rule 9 (declaration -> header_declaration .)
    default         reduce using rule 9 (declaration -> header_declaration .)
    case            reduce using rule 9 (declaration -> header_declaration .)


state 10

    (10) declaration -> var_declaration .

    COMMENT         reduce using rule 10 (declaration -> var_declaration .)
    COMMENT_HASHTAG reduce using rule 10 (declaration -> var_declaration .)
    COMMENT_MULTI   reduce using rule 10 (declaration -> var_declaration .)
    empty           reduce using rule 10 (declaration -> var_declaration .)
    include         reduce using rule 10 (declaration -> var_declaration .)
    const           reduce using rule 10 (declaration -> var_declaration .)
    print           reduce using rule 10 (declaration -> var_declaration .)
    echo            reduce using rule 10 (declaration -> var_declaration .)
    while           reduce using rule 10 (declaration -> var_declaration .)
    do              reduce using rule 10 (declaration -> var_declaration .)
    if              reduce using rule 10 (declaration -> var_declaration .)
    function        reduce using rule 10 (declaration -> var_declaration .)
    ID              reduce using rule 10 (declaration -> var_declaration .)
    return          reduce using rule 10 (declaration -> var_declaration .)
    class           reduce using rule 10 (declaration -> var_declaration .)
    new             reduce using rule 10 (declaration -> var_declaration .)
    CLOSE_TAG       reduce using rule 10 (declaration -> var_declaration .)
    for             reduce using rule 10 (declaration -> var_declaration .)
    foreach         reduce using rule 10 (declaration -> var_declaration .)
    switch          reduce using rule 10 (declaration -> var_declaration .)
    exit            reduce using rule 10 (declaration -> var_declaration .)
    VARIABLE        reduce using rule 10 (declaration -> var_declaration .)
    array           reduce using rule 10 (declaration -> var_declaration .)
    pow             reduce using rule 10 (declaration -> var_declaration .)
    POW             reduce using rule 10 (declaration -> var_declaration .)
    abs             reduce using rule 10 (declaration -> var_declaration .)
    cos             reduce using rule 10 (declaration -> var_declaration .)
    deg2rad         reduce using rule 10 (declaration -> var_declaration .)
    rad2deg         reduce using rule 10 (declaration -> var_declaration .)
    die             reduce using rule 10 (declaration -> var_declaration .)
    exp             reduce using rule 10 (declaration -> var_declaration .)
    floor           reduce using rule 10 (declaration -> var_declaration .)
    isset           reduce using rule 10 (declaration -> var_declaration .)
    list            reduce using rule 10 (declaration -> var_declaration .)
    log             reduce using rule 10 (declaration -> var_declaration .)
    log10           reduce using rule 10 (declaration -> var_declaration .)
    max             reduce using rule 10 (declaration -> var_declaration .)
    min             reduce using rule 10 (declaration -> var_declaration .)
    rand            reduce using rule 10 (declaration -> var_declaration .)
    round           reduce using rule 10 (declaration -> var_declaration .)
    sin             reduce using rule 10 (declaration -> var_declaration .)
    sqrt            reduce using rule 10 (declaration -> var_declaration .)
    unset           reduce using rule 10 (declaration -> var_declaration .)
    CADENA          reduce using rule 10 (declaration -> var_declaration .)
    $end            reduce using rule 10 (declaration -> var_declaration .)
    RBLOCK          reduce using rule 10 (declaration -> var_declaration .)
    endwhile        reduce using rule 10 (declaration -> var_declaration .)
    endfor          reduce using rule 10 (declaration -> var_declaration .)
    endforeach      reduce using rule 10 (declaration -> var_declaration .)
    endswitch       reduce using rule 10 (declaration -> var_declaration .)
    break           reduce using rule 10 (declaration -> var_declaration .)
    default         reduce using rule 10 (declaration -> var_declaration .)
    case            reduce using rule 10 (declaration -> var_declaration .)


state 11

    (11) declaration -> constant_declaration .

    COMMENT         reduce using rule 11 (declaration -> constant_declaration .)
    COMMENT_HASHTAG reduce using rule 11 (declaration -> constant_declaration .)
    COMMENT_MULTI   reduce using rule 11 (declaration -> constant_declaration .)
    empty           reduce using rule 11 (declaration -> constant_declaration .)
    include         reduce using rule 11 (declaration -> constant_declaration .)
    const           reduce using rule 11 (declaration -> constant_declaration .)
    print           reduce using rule 11 (declaration -> constant_declaration .)
    echo            reduce using rule 11 (declaration -> constant_declaration .)
    while           reduce using rule 11 (declaration -> constant_declaration .)
    do              reduce using rule 11 (declaration -> constant_declaration .)
    if              reduce using rule 11 (declaration -> constant_declaration .)
    function        reduce using rule 11 (declaration -> constant_declaration .)
    ID              reduce using rule 11 (declaration -> constant_declaration .)
    return          reduce using rule 11 (declaration -> constant_declaration .)
    class           reduce using rule 11 (declaration -> constant_declaration .)
    new             reduce using rule 11 (declaration -> constant_declaration .)
    CLOSE_TAG       reduce using rule 11 (declaration -> constant_declaration .)
    for             reduce using rule 11 (declaration -> constant_declaration .)
    foreach         reduce using rule 11 (declaration -> constant_declaration .)
    switch          reduce using rule 11 (declaration -> constant_declaration .)
    exit            reduce using rule 11 (declaration -> constant_declaration .)
    VARIABLE        reduce using rule 11 (declaration -> constant_declaration .)
    array           reduce using rule 11 (declaration -> constant_declaration .)
    pow             reduce using rule 11 (declaration -> constant_declaration .)
    POW             reduce using rule 11 (declaration -> constant_declaration .)
    abs             reduce using rule 11 (declaration -> constant_declaration .)
    cos             reduce using rule 11 (declaration -> constant_declaration .)
    deg2rad         reduce using rule 11 (declaration -> constant_declaration .)
    rad2deg         reduce using rule 11 (declaration -> constant_declaration .)
    die             reduce using rule 11 (declaration -> constant_declaration .)
    exp             reduce using rule 11 (declaration -> constant_declaration .)
    floor           reduce using rule 11 (declaration -> constant_declaration .)
    isset           reduce using rule 11 (declaration -> constant_declaration .)
    list            reduce using rule 11 (declaration -> constant_declaration .)
    log             reduce using rule 11 (declaration -> constant_declaration .)
    log10           reduce using rule 11 (declaration -> constant_declaration .)
    max             reduce using rule 11 (declaration -> constant_declaration .)
    min             reduce using rule 11 (declaration -> constant_declaration .)
    rand            reduce using rule 11 (declaration -> constant_declaration .)
    round           reduce using rule 11 (declaration -> constant_declaration .)
    sin             reduce using rule 11 (declaration -> constant_declaration .)
    sqrt            reduce using rule 11 (declaration -> constant_declaration .)
    unset           reduce using rule 11 (declaration -> constant_declaration .)
    CADENA          reduce using rule 11 (declaration -> constant_declaration .)
    $end            reduce using rule 11 (declaration -> constant_declaration .)
    RBLOCK          reduce using rule 11 (declaration -> constant_declaration .)
    endwhile        reduce using rule 11 (declaration -> constant_declaration .)
    endfor          reduce using rule 11 (declaration -> constant_declaration .)
    endforeach      reduce using rule 11 (declaration -> constant_declaration .)
    endswitch       reduce using rule 11 (declaration -> constant_declaration .)
    break           reduce using rule 11 (declaration -> constant_declaration .)
    default         reduce using rule 11 (declaration -> constant_declaration .)
    case            reduce using rule 11 (declaration -> constant_declaration .)


state 12

    (12) declaration -> print_declaration .

    COMMENT         reduce using rule 12 (declaration -> print_declaration .)
    COMMENT_HASHTAG reduce using rule 12 (declaration -> print_declaration .)
    COMMENT_MULTI   reduce using rule 12 (declaration -> print_declaration .)
    empty           reduce using rule 12 (declaration -> print_declaration .)
    include         reduce using rule 12 (declaration -> print_declaration .)
    const           reduce using rule 12 (declaration -> print_declaration .)
    print           reduce using rule 12 (declaration -> print_declaration .)
    echo            reduce using rule 12 (declaration -> print_declaration .)
    while           reduce using rule 12 (declaration -> print_declaration .)
    do              reduce using rule 12 (declaration -> print_declaration .)
    if              reduce using rule 12 (declaration -> print_declaration .)
    function        reduce using rule 12 (declaration -> print_declaration .)
    ID              reduce using rule 12 (declaration -> print_declaration .)
    return          reduce using rule 12 (declaration -> print_declaration .)
    class           reduce using rule 12 (declaration -> print_declaration .)
    new             reduce using rule 12 (declaration -> print_declaration .)
    CLOSE_TAG       reduce using rule 12 (declaration -> print_declaration .)
    for             reduce using rule 12 (declaration -> print_declaration .)
    foreach         reduce using rule 12 (declaration -> print_declaration .)
    switch          reduce using rule 12 (declaration -> print_declaration .)
    exit            reduce using rule 12 (declaration -> print_declaration .)
    VARIABLE        reduce using rule 12 (declaration -> print_declaration .)
    array           reduce using rule 12 (declaration -> print_declaration .)
    pow             reduce using rule 12 (declaration -> print_declaration .)
    POW             reduce using rule 12 (declaration -> print_declaration .)
    abs             reduce using rule 12 (declaration -> print_declaration .)
    cos             reduce using rule 12 (declaration -> print_declaration .)
    deg2rad         reduce using rule 12 (declaration -> print_declaration .)
    rad2deg         reduce using rule 12 (declaration -> print_declaration .)
    die             reduce using rule 12 (declaration -> print_declaration .)
    exp             reduce using rule 12 (declaration -> print_declaration .)
    floor           reduce using rule 12 (declaration -> print_declaration .)
    isset           reduce using rule 12 (declaration -> print_declaration .)
    list            reduce using rule 12 (declaration -> print_declaration .)
    log             reduce using rule 12 (declaration -> print_declaration .)
    log10           reduce using rule 12 (declaration -> print_declaration .)
    max             reduce using rule 12 (declaration -> print_declaration .)
    min             reduce using rule 12 (declaration -> print_declaration .)
    rand            reduce using rule 12 (declaration -> print_declaration .)
    round           reduce using rule 12 (declaration -> print_declaration .)
    sin             reduce using rule 12 (declaration -> print_declaration .)
    sqrt            reduce using rule 12 (declaration -> print_declaration .)
    unset           reduce using rule 12 (declaration -> print_declaration .)
    CADENA          reduce using rule 12 (declaration -> print_declaration .)
    $end            reduce using rule 12 (declaration -> print_declaration .)
    RBLOCK          reduce using rule 12 (declaration -> print_declaration .)
    endwhile        reduce using rule 12 (declaration -> print_declaration .)
    endfor          reduce using rule 12 (declaration -> print_declaration .)
    endforeach      reduce using rule 12 (declaration -> print_declaration .)
    endswitch       reduce using rule 12 (declaration -> print_declaration .)
    break           reduce using rule 12 (declaration -> print_declaration .)
    default         reduce using rule 12 (declaration -> print_declaration .)
    case            reduce using rule 12 (declaration -> print_declaration .)


state 13

    (13) declaration -> echo_declaration .

    COMMENT         reduce using rule 13 (declaration -> echo_declaration .)
    COMMENT_HASHTAG reduce using rule 13 (declaration -> echo_declaration .)
    COMMENT_MULTI   reduce using rule 13 (declaration -> echo_declaration .)
    empty           reduce using rule 13 (declaration -> echo_declaration .)
    include         reduce using rule 13 (declaration -> echo_declaration .)
    const           reduce using rule 13 (declaration -> echo_declaration .)
    print           reduce using rule 13 (declaration -> echo_declaration .)
    echo            reduce using rule 13 (declaration -> echo_declaration .)
    while           reduce using rule 13 (declaration -> echo_declaration .)
    do              reduce using rule 13 (declaration -> echo_declaration .)
    if              reduce using rule 13 (declaration -> echo_declaration .)
    function        reduce using rule 13 (declaration -> echo_declaration .)
    ID              reduce using rule 13 (declaration -> echo_declaration .)
    return          reduce using rule 13 (declaration -> echo_declaration .)
    class           reduce using rule 13 (declaration -> echo_declaration .)
    new             reduce using rule 13 (declaration -> echo_declaration .)
    CLOSE_TAG       reduce using rule 13 (declaration -> echo_declaration .)
    for             reduce using rule 13 (declaration -> echo_declaration .)
    foreach         reduce using rule 13 (declaration -> echo_declaration .)
    switch          reduce using rule 13 (declaration -> echo_declaration .)
    exit            reduce using rule 13 (declaration -> echo_declaration .)
    VARIABLE        reduce using rule 13 (declaration -> echo_declaration .)
    array           reduce using rule 13 (declaration -> echo_declaration .)
    pow             reduce using rule 13 (declaration -> echo_declaration .)
    POW             reduce using rule 13 (declaration -> echo_declaration .)
    abs             reduce using rule 13 (declaration -> echo_declaration .)
    cos             reduce using rule 13 (declaration -> echo_declaration .)
    deg2rad         reduce using rule 13 (declaration -> echo_declaration .)
    rad2deg         reduce using rule 13 (declaration -> echo_declaration .)
    die             reduce using rule 13 (declaration -> echo_declaration .)
    exp             reduce using rule 13 (declaration -> echo_declaration .)
    floor           reduce using rule 13 (declaration -> echo_declaration .)
    isset           reduce using rule 13 (declaration -> echo_declaration .)
    list            reduce using rule 13 (declaration -> echo_declaration .)
    log             reduce using rule 13 (declaration -> echo_declaration .)
    log10           reduce using rule 13 (declaration -> echo_declaration .)
    max             reduce using rule 13 (declaration -> echo_declaration .)
    min             reduce using rule 13 (declaration -> echo_declaration .)
    rand            reduce using rule 13 (declaration -> echo_declaration .)
    round           reduce using rule 13 (declaration -> echo_declaration .)
    sin             reduce using rule 13 (declaration -> echo_declaration .)
    sqrt            reduce using rule 13 (declaration -> echo_declaration .)
    unset           reduce using rule 13 (declaration -> echo_declaration .)
    CADENA          reduce using rule 13 (declaration -> echo_declaration .)
    $end            reduce using rule 13 (declaration -> echo_declaration .)
    RBLOCK          reduce using rule 13 (declaration -> echo_declaration .)
    endwhile        reduce using rule 13 (declaration -> echo_declaration .)
    endfor          reduce using rule 13 (declaration -> echo_declaration .)
    endforeach      reduce using rule 13 (declaration -> echo_declaration .)
    endswitch       reduce using rule 13 (declaration -> echo_declaration .)
    break           reduce using rule 13 (declaration -> echo_declaration .)
    default         reduce using rule 13 (declaration -> echo_declaration .)
    case            reduce using rule 13 (declaration -> echo_declaration .)


state 14

    (14) declaration -> iteration_stmt .

    COMMENT         reduce using rule 14 (declaration -> iteration_stmt .)
    COMMENT_HASHTAG reduce using rule 14 (declaration -> iteration_stmt .)
    COMMENT_MULTI   reduce using rule 14 (declaration -> iteration_stmt .)
    empty           reduce using rule 14 (declaration -> iteration_stmt .)
    include         reduce using rule 14 (declaration -> iteration_stmt .)
    const           reduce using rule 14 (declaration -> iteration_stmt .)
    print           reduce using rule 14 (declaration -> iteration_stmt .)
    echo            reduce using rule 14 (declaration -> iteration_stmt .)
    while           reduce using rule 14 (declaration -> iteration_stmt .)
    do              reduce using rule 14 (declaration -> iteration_stmt .)
    if              reduce using rule 14 (declaration -> iteration_stmt .)
    function        reduce using rule 14 (declaration -> iteration_stmt .)
    ID              reduce using rule 14 (declaration -> iteration_stmt .)
    return          reduce using rule 14 (declaration -> iteration_stmt .)
    class           reduce using rule 14 (declaration -> iteration_stmt .)
    new             reduce using rule 14 (declaration -> iteration_stmt .)
    CLOSE_TAG       reduce using rule 14 (declaration -> iteration_stmt .)
    for             reduce using rule 14 (declaration -> iteration_stmt .)
    foreach         reduce using rule 14 (declaration -> iteration_stmt .)
    switch          reduce using rule 14 (declaration -> iteration_stmt .)
    exit            reduce using rule 14 (declaration -> iteration_stmt .)
    VARIABLE        reduce using rule 14 (declaration -> iteration_stmt .)
    array           reduce using rule 14 (declaration -> iteration_stmt .)
    pow             reduce using rule 14 (declaration -> iteration_stmt .)
    POW             reduce using rule 14 (declaration -> iteration_stmt .)
    abs             reduce using rule 14 (declaration -> iteration_stmt .)
    cos             reduce using rule 14 (declaration -> iteration_stmt .)
    deg2rad         reduce using rule 14 (declaration -> iteration_stmt .)
    rad2deg         reduce using rule 14 (declaration -> iteration_stmt .)
    die             reduce using rule 14 (declaration -> iteration_stmt .)
    exp             reduce using rule 14 (declaration -> iteration_stmt .)
    floor           reduce using rule 14 (declaration -> iteration_stmt .)
    isset           reduce using rule 14 (declaration -> iteration_stmt .)
    list            reduce using rule 14 (declaration -> iteration_stmt .)
    log             reduce using rule 14 (declaration -> iteration_stmt .)
    log10           reduce using rule 14 (declaration -> iteration_stmt .)
    max             reduce using rule 14 (declaration -> iteration_stmt .)
    min             reduce using rule 14 (declaration -> iteration_stmt .)
    rand            reduce using rule 14 (declaration -> iteration_stmt .)
    round           reduce using rule 14 (declaration -> iteration_stmt .)
    sin             reduce using rule 14 (declaration -> iteration_stmt .)
    sqrt            reduce using rule 14 (declaration -> iteration_stmt .)
    unset           reduce using rule 14 (declaration -> iteration_stmt .)
    CADENA          reduce using rule 14 (declaration -> iteration_stmt .)
    $end            reduce using rule 14 (declaration -> iteration_stmt .)
    RBLOCK          reduce using rule 14 (declaration -> iteration_stmt .)
    endwhile        reduce using rule 14 (declaration -> iteration_stmt .)
    endfor          reduce using rule 14 (declaration -> iteration_stmt .)
    endforeach      reduce using rule 14 (declaration -> iteration_stmt .)
    endswitch       reduce using rule 14 (declaration -> iteration_stmt .)
    break           reduce using rule 14 (declaration -> iteration_stmt .)
    default         reduce using rule 14 (declaration -> iteration_stmt .)
    case            reduce using rule 14 (declaration -> iteration_stmt .)


state 15

    (15) declaration -> if_statement .

    COMMENT         reduce using rule 15 (declaration -> if_statement .)
    COMMENT_HASHTAG reduce using rule 15 (declaration -> if_statement .)
    COMMENT_MULTI   reduce using rule 15 (declaration -> if_statement .)
    empty           reduce using rule 15 (declaration -> if_statement .)
    include         reduce using rule 15 (declaration -> if_statement .)
    const           reduce using rule 15 (declaration -> if_statement .)
    print           reduce using rule 15 (declaration -> if_statement .)
    echo            reduce using rule 15 (declaration -> if_statement .)
    while           reduce using rule 15 (declaration -> if_statement .)
    do              reduce using rule 15 (declaration -> if_statement .)
    if              reduce using rule 15 (declaration -> if_statement .)
    function        reduce using rule 15 (declaration -> if_statement .)
    ID              reduce using rule 15 (declaration -> if_statement .)
    return          reduce using rule 15 (declaration -> if_statement .)
    class           reduce using rule 15 (declaration -> if_statement .)
    new             reduce using rule 15 (declaration -> if_statement .)
    CLOSE_TAG       reduce using rule 15 (declaration -> if_statement .)
    for             reduce using rule 15 (declaration -> if_statement .)
    foreach         reduce using rule 15 (declaration -> if_statement .)
    switch          reduce using rule 15 (declaration -> if_statement .)
    exit            reduce using rule 15 (declaration -> if_statement .)
    VARIABLE        reduce using rule 15 (declaration -> if_statement .)
    array           reduce using rule 15 (declaration -> if_statement .)
    pow             reduce using rule 15 (declaration -> if_statement .)
    POW             reduce using rule 15 (declaration -> if_statement .)
    abs             reduce using rule 15 (declaration -> if_statement .)
    cos             reduce using rule 15 (declaration -> if_statement .)
    deg2rad         reduce using rule 15 (declaration -> if_statement .)
    rad2deg         reduce using rule 15 (declaration -> if_statement .)
    die             reduce using rule 15 (declaration -> if_statement .)
    exp             reduce using rule 15 (declaration -> if_statement .)
    floor           reduce using rule 15 (declaration -> if_statement .)
    isset           reduce using rule 15 (declaration -> if_statement .)
    list            reduce using rule 15 (declaration -> if_statement .)
    log             reduce using rule 15 (declaration -> if_statement .)
    log10           reduce using rule 15 (declaration -> if_statement .)
    max             reduce using rule 15 (declaration -> if_statement .)
    min             reduce using rule 15 (declaration -> if_statement .)
    rand            reduce using rule 15 (declaration -> if_statement .)
    round           reduce using rule 15 (declaration -> if_statement .)
    sin             reduce using rule 15 (declaration -> if_statement .)
    sqrt            reduce using rule 15 (declaration -> if_statement .)
    unset           reduce using rule 15 (declaration -> if_statement .)
    CADENA          reduce using rule 15 (declaration -> if_statement .)
    $end            reduce using rule 15 (declaration -> if_statement .)
    RBLOCK          reduce using rule 15 (declaration -> if_statement .)
    endwhile        reduce using rule 15 (declaration -> if_statement .)
    endfor          reduce using rule 15 (declaration -> if_statement .)
    endforeach      reduce using rule 15 (declaration -> if_statement .)
    endswitch       reduce using rule 15 (declaration -> if_statement .)
    break           reduce using rule 15 (declaration -> if_statement .)
    default         reduce using rule 15 (declaration -> if_statement .)
    case            reduce using rule 15 (declaration -> if_statement .)


state 16

    (16) declaration -> fun_declaration .

    COMMENT         reduce using rule 16 (declaration -> fun_declaration .)
    COMMENT_HASHTAG reduce using rule 16 (declaration -> fun_declaration .)
    COMMENT_MULTI   reduce using rule 16 (declaration -> fun_declaration .)
    empty           reduce using rule 16 (declaration -> fun_declaration .)
    include         reduce using rule 16 (declaration -> fun_declaration .)
    const           reduce using rule 16 (declaration -> fun_declaration .)
    print           reduce using rule 16 (declaration -> fun_declaration .)
    echo            reduce using rule 16 (declaration -> fun_declaration .)
    while           reduce using rule 16 (declaration -> fun_declaration .)
    do              reduce using rule 16 (declaration -> fun_declaration .)
    if              reduce using rule 16 (declaration -> fun_declaration .)
    function        reduce using rule 16 (declaration -> fun_declaration .)
    ID              reduce using rule 16 (declaration -> fun_declaration .)
    return          reduce using rule 16 (declaration -> fun_declaration .)
    class           reduce using rule 16 (declaration -> fun_declaration .)
    new             reduce using rule 16 (declaration -> fun_declaration .)
    CLOSE_TAG       reduce using rule 16 (declaration -> fun_declaration .)
    for             reduce using rule 16 (declaration -> fun_declaration .)
    foreach         reduce using rule 16 (declaration -> fun_declaration .)
    switch          reduce using rule 16 (declaration -> fun_declaration .)
    exit            reduce using rule 16 (declaration -> fun_declaration .)
    VARIABLE        reduce using rule 16 (declaration -> fun_declaration .)
    array           reduce using rule 16 (declaration -> fun_declaration .)
    pow             reduce using rule 16 (declaration -> fun_declaration .)
    POW             reduce using rule 16 (declaration -> fun_declaration .)
    abs             reduce using rule 16 (declaration -> fun_declaration .)
    cos             reduce using rule 16 (declaration -> fun_declaration .)
    deg2rad         reduce using rule 16 (declaration -> fun_declaration .)
    rad2deg         reduce using rule 16 (declaration -> fun_declaration .)
    die             reduce using rule 16 (declaration -> fun_declaration .)
    exp             reduce using rule 16 (declaration -> fun_declaration .)
    floor           reduce using rule 16 (declaration -> fun_declaration .)
    isset           reduce using rule 16 (declaration -> fun_declaration .)
    list            reduce using rule 16 (declaration -> fun_declaration .)
    log             reduce using rule 16 (declaration -> fun_declaration .)
    log10           reduce using rule 16 (declaration -> fun_declaration .)
    max             reduce using rule 16 (declaration -> fun_declaration .)
    min             reduce using rule 16 (declaration -> fun_declaration .)
    rand            reduce using rule 16 (declaration -> fun_declaration .)
    round           reduce using rule 16 (declaration -> fun_declaration .)
    sin             reduce using rule 16 (declaration -> fun_declaration .)
    sqrt            reduce using rule 16 (declaration -> fun_declaration .)
    unset           reduce using rule 16 (declaration -> fun_declaration .)
    CADENA          reduce using rule 16 (declaration -> fun_declaration .)
    $end            reduce using rule 16 (declaration -> fun_declaration .)
    RBLOCK          reduce using rule 16 (declaration -> fun_declaration .)
    endwhile        reduce using rule 16 (declaration -> fun_declaration .)
    endfor          reduce using rule 16 (declaration -> fun_declaration .)
    endforeach      reduce using rule 16 (declaration -> fun_declaration .)
    endswitch       reduce using rule 16 (declaration -> fun_declaration .)
    break           reduce using rule 16 (declaration -> fun_declaration .)
    default         reduce using rule 16 (declaration -> fun_declaration .)
    case            reduce using rule 16 (declaration -> fun_declaration .)


state 17

    (17) declaration -> fun_call .

    COMMENT         reduce using rule 17 (declaration -> fun_call .)
    COMMENT_HASHTAG reduce using rule 17 (declaration -> fun_call .)
    COMMENT_MULTI   reduce using rule 17 (declaration -> fun_call .)
    empty           reduce using rule 17 (declaration -> fun_call .)
    include         reduce using rule 17 (declaration -> fun_call .)
    const           reduce using rule 17 (declaration -> fun_call .)
    print           reduce using rule 17 (declaration -> fun_call .)
    echo            reduce using rule 17 (declaration -> fun_call .)
    while           reduce using rule 17 (declaration -> fun_call .)
    do              reduce using rule 17 (declaration -> fun_call .)
    if              reduce using rule 17 (declaration -> fun_call .)
    function        reduce using rule 17 (declaration -> fun_call .)
    ID              reduce using rule 17 (declaration -> fun_call .)
    return          reduce using rule 17 (declaration -> fun_call .)
    class           reduce using rule 17 (declaration -> fun_call .)
    new             reduce using rule 17 (declaration -> fun_call .)
    CLOSE_TAG       reduce using rule 17 (declaration -> fun_call .)
    for             reduce using rule 17 (declaration -> fun_call .)
    foreach         reduce using rule 17 (declaration -> fun_call .)
    switch          reduce using rule 17 (declaration -> fun_call .)
    exit            reduce using rule 17 (declaration -> fun_call .)
    VARIABLE        reduce using rule 17 (declaration -> fun_call .)
    array           reduce using rule 17 (declaration -> fun_call .)
    pow             reduce using rule 17 (declaration -> fun_call .)
    POW             reduce using rule 17 (declaration -> fun_call .)
    abs             reduce using rule 17 (declaration -> fun_call .)
    cos             reduce using rule 17 (declaration -> fun_call .)
    deg2rad         reduce using rule 17 (declaration -> fun_call .)
    rad2deg         reduce using rule 17 (declaration -> fun_call .)
    die             reduce using rule 17 (declaration -> fun_call .)
    exp             reduce using rule 17 (declaration -> fun_call .)
    floor           reduce using rule 17 (declaration -> fun_call .)
    isset           reduce using rule 17 (declaration -> fun_call .)
    list            reduce using rule 17 (declaration -> fun_call .)
    log             reduce using rule 17 (declaration -> fun_call .)
    log10           reduce using rule 17 (declaration -> fun_call .)
    max             reduce using rule 17 (declaration -> fun_call .)
    min             reduce using rule 17 (declaration -> fun_call .)
    rand            reduce using rule 17 (declaration -> fun_call .)
    round           reduce using rule 17 (declaration -> fun_call .)
    sin             reduce using rule 17 (declaration -> fun_call .)
    sqrt            reduce using rule 17 (declaration -> fun_call .)
    unset           reduce using rule 17 (declaration -> fun_call .)
    CADENA          reduce using rule 17 (declaration -> fun_call .)
    $end            reduce using rule 17 (declaration -> fun_call .)
    RBLOCK          reduce using rule 17 (declaration -> fun_call .)
    endwhile        reduce using rule 17 (declaration -> fun_call .)
    endfor          reduce using rule 17 (declaration -> fun_call .)
    endforeach      reduce using rule 17 (declaration -> fun_call .)
    endswitch       reduce using rule 17 (declaration -> fun_call .)
    break           reduce using rule 17 (declaration -> fun_call .)
    default         reduce using rule 17 (declaration -> fun_call .)
    case            reduce using rule 17 (declaration -> fun_call .)


state 18

    (18) declaration -> return_statement .

    COMMENT         reduce using rule 18 (declaration -> return_statement .)
    COMMENT_HASHTAG reduce using rule 18 (declaration -> return_statement .)
    COMMENT_MULTI   reduce using rule 18 (declaration -> return_statement .)
    empty           reduce using rule 18 (declaration -> return_statement .)
    include         reduce using rule 18 (declaration -> return_statement .)
    const           reduce using rule 18 (declaration -> return_statement .)
    print           reduce using rule 18 (declaration -> return_statement .)
    echo            reduce using rule 18 (declaration -> return_statement .)
    while           reduce using rule 18 (declaration -> return_statement .)
    do              reduce using rule 18 (declaration -> return_statement .)
    if              reduce using rule 18 (declaration -> return_statement .)
    function        reduce using rule 18 (declaration -> return_statement .)
    ID              reduce using rule 18 (declaration -> return_statement .)
    return          reduce using rule 18 (declaration -> return_statement .)
    class           reduce using rule 18 (declaration -> return_statement .)
    new             reduce using rule 18 (declaration -> return_statement .)
    CLOSE_TAG       reduce using rule 18 (declaration -> return_statement .)
    for             reduce using rule 18 (declaration -> return_statement .)
    foreach         reduce using rule 18 (declaration -> return_statement .)
    switch          reduce using rule 18 (declaration -> return_statement .)
    exit            reduce using rule 18 (declaration -> return_statement .)
    VARIABLE        reduce using rule 18 (declaration -> return_statement .)
    array           reduce using rule 18 (declaration -> return_statement .)
    pow             reduce using rule 18 (declaration -> return_statement .)
    POW             reduce using rule 18 (declaration -> return_statement .)
    abs             reduce using rule 18 (declaration -> return_statement .)
    cos             reduce using rule 18 (declaration -> return_statement .)
    deg2rad         reduce using rule 18 (declaration -> return_statement .)
    rad2deg         reduce using rule 18 (declaration -> return_statement .)
    die             reduce using rule 18 (declaration -> return_statement .)
    exp             reduce using rule 18 (declaration -> return_statement .)
    floor           reduce using rule 18 (declaration -> return_statement .)
    isset           reduce using rule 18 (declaration -> return_statement .)
    list            reduce using rule 18 (declaration -> return_statement .)
    log             reduce using rule 18 (declaration -> return_statement .)
    log10           reduce using rule 18 (declaration -> return_statement .)
    max             reduce using rule 18 (declaration -> return_statement .)
    min             reduce using rule 18 (declaration -> return_statement .)
    rand            reduce using rule 18 (declaration -> return_statement .)
    round           reduce using rule 18 (declaration -> return_statement .)
    sin             reduce using rule 18 (declaration -> return_statement .)
    sqrt            reduce using rule 18 (declaration -> return_statement .)
    unset           reduce using rule 18 (declaration -> return_statement .)
    CADENA          reduce using rule 18 (declaration -> return_statement .)
    $end            reduce using rule 18 (declaration -> return_statement .)
    RBLOCK          reduce using rule 18 (declaration -> return_statement .)
    endwhile        reduce using rule 18 (declaration -> return_statement .)
    endfor          reduce using rule 18 (declaration -> return_statement .)
    endforeach      reduce using rule 18 (declaration -> return_statement .)
    endswitch       reduce using rule 18 (declaration -> return_statement .)
    break           reduce using rule 18 (declaration -> return_statement .)
    default         reduce using rule 18 (declaration -> return_statement .)
    case            reduce using rule 18 (declaration -> return_statement .)


state 19

    (19) declaration -> obj_declaration .

    COMMENT         reduce using rule 19 (declaration -> obj_declaration .)
    COMMENT_HASHTAG reduce using rule 19 (declaration -> obj_declaration .)
    COMMENT_MULTI   reduce using rule 19 (declaration -> obj_declaration .)
    empty           reduce using rule 19 (declaration -> obj_declaration .)
    include         reduce using rule 19 (declaration -> obj_declaration .)
    const           reduce using rule 19 (declaration -> obj_declaration .)
    print           reduce using rule 19 (declaration -> obj_declaration .)
    echo            reduce using rule 19 (declaration -> obj_declaration .)
    while           reduce using rule 19 (declaration -> obj_declaration .)
    do              reduce using rule 19 (declaration -> obj_declaration .)
    if              reduce using rule 19 (declaration -> obj_declaration .)
    function        reduce using rule 19 (declaration -> obj_declaration .)
    ID              reduce using rule 19 (declaration -> obj_declaration .)
    return          reduce using rule 19 (declaration -> obj_declaration .)
    class           reduce using rule 19 (declaration -> obj_declaration .)
    new             reduce using rule 19 (declaration -> obj_declaration .)
    CLOSE_TAG       reduce using rule 19 (declaration -> obj_declaration .)
    for             reduce using rule 19 (declaration -> obj_declaration .)
    foreach         reduce using rule 19 (declaration -> obj_declaration .)
    switch          reduce using rule 19 (declaration -> obj_declaration .)
    exit            reduce using rule 19 (declaration -> obj_declaration .)
    VARIABLE        reduce using rule 19 (declaration -> obj_declaration .)
    array           reduce using rule 19 (declaration -> obj_declaration .)
    pow             reduce using rule 19 (declaration -> obj_declaration .)
    POW             reduce using rule 19 (declaration -> obj_declaration .)
    abs             reduce using rule 19 (declaration -> obj_declaration .)
    cos             reduce using rule 19 (declaration -> obj_declaration .)
    deg2rad         reduce using rule 19 (declaration -> obj_declaration .)
    rad2deg         reduce using rule 19 (declaration -> obj_declaration .)
    die             reduce using rule 19 (declaration -> obj_declaration .)
    exp             reduce using rule 19 (declaration -> obj_declaration .)
    floor           reduce using rule 19 (declaration -> obj_declaration .)
    isset           reduce using rule 19 (declaration -> obj_declaration .)
    list            reduce using rule 19 (declaration -> obj_declaration .)
    log             reduce using rule 19 (declaration -> obj_declaration .)
    log10           reduce using rule 19 (declaration -> obj_declaration .)
    max             reduce using rule 19 (declaration -> obj_declaration .)
    min             reduce using rule 19 (declaration -> obj_declaration .)
    rand            reduce using rule 19 (declaration -> obj_declaration .)
    round           reduce using rule 19 (declaration -> obj_declaration .)
    sin             reduce using rule 19 (declaration -> obj_declaration .)
    sqrt            reduce using rule 19 (declaration -> obj_declaration .)
    unset           reduce using rule 19 (declaration -> obj_declaration .)
    CADENA          reduce using rule 19 (declaration -> obj_declaration .)
    $end            reduce using rule 19 (declaration -> obj_declaration .)
    RBLOCK          reduce using rule 19 (declaration -> obj_declaration .)
    endwhile        reduce using rule 19 (declaration -> obj_declaration .)
    endfor          reduce using rule 19 (declaration -> obj_declaration .)
    endforeach      reduce using rule 19 (declaration -> obj_declaration .)
    endswitch       reduce using rule 19 (declaration -> obj_declaration .)
    break           reduce using rule 19 (declaration -> obj_declaration .)
    default         reduce using rule 19 (declaration -> obj_declaration .)
    case            reduce using rule 19 (declaration -> obj_declaration .)


state 20

    (20) declaration -> create_obj_declaration .

    COMMENT         reduce using rule 20 (declaration -> create_obj_declaration .)
    COMMENT_HASHTAG reduce using rule 20 (declaration -> create_obj_declaration .)
    COMMENT_MULTI   reduce using rule 20 (declaration -> create_obj_declaration .)
    empty           reduce using rule 20 (declaration -> create_obj_declaration .)
    include         reduce using rule 20 (declaration -> create_obj_declaration .)
    const           reduce using rule 20 (declaration -> create_obj_declaration .)
    print           reduce using rule 20 (declaration -> create_obj_declaration .)
    echo            reduce using rule 20 (declaration -> create_obj_declaration .)
    while           reduce using rule 20 (declaration -> create_obj_declaration .)
    do              reduce using rule 20 (declaration -> create_obj_declaration .)
    if              reduce using rule 20 (declaration -> create_obj_declaration .)
    function        reduce using rule 20 (declaration -> create_obj_declaration .)
    ID              reduce using rule 20 (declaration -> create_obj_declaration .)
    return          reduce using rule 20 (declaration -> create_obj_declaration .)
    class           reduce using rule 20 (declaration -> create_obj_declaration .)
    new             reduce using rule 20 (declaration -> create_obj_declaration .)
    CLOSE_TAG       reduce using rule 20 (declaration -> create_obj_declaration .)
    for             reduce using rule 20 (declaration -> create_obj_declaration .)
    foreach         reduce using rule 20 (declaration -> create_obj_declaration .)
    switch          reduce using rule 20 (declaration -> create_obj_declaration .)
    exit            reduce using rule 20 (declaration -> create_obj_declaration .)
    VARIABLE        reduce using rule 20 (declaration -> create_obj_declaration .)
    array           reduce using rule 20 (declaration -> create_obj_declaration .)
    pow             reduce using rule 20 (declaration -> create_obj_declaration .)
    POW             reduce using rule 20 (declaration -> create_obj_declaration .)
    abs             reduce using rule 20 (declaration -> create_obj_declaration .)
    cos             reduce using rule 20 (declaration -> create_obj_declaration .)
    deg2rad         reduce using rule 20 (declaration -> create_obj_declaration .)
    rad2deg         reduce using rule 20 (declaration -> create_obj_declaration .)
    die             reduce using rule 20 (declaration -> create_obj_declaration .)
    exp             reduce using rule 20 (declaration -> create_obj_declaration .)
    floor           reduce using rule 20 (declaration -> create_obj_declaration .)
    isset           reduce using rule 20 (declaration -> create_obj_declaration .)
    list            reduce using rule 20 (declaration -> create_obj_declaration .)
    log             reduce using rule 20 (declaration -> create_obj_declaration .)
    log10           reduce using rule 20 (declaration -> create_obj_declaration .)
    max             reduce using rule 20 (declaration -> create_obj_declaration .)
    min             reduce using rule 20 (declaration -> create_obj_declaration .)
    rand            reduce using rule 20 (declaration -> create_obj_declaration .)
    round           reduce using rule 20 (declaration -> create_obj_declaration .)
    sin             reduce using rule 20 (declaration -> create_obj_declaration .)
    sqrt            reduce using rule 20 (declaration -> create_obj_declaration .)
    unset           reduce using rule 20 (declaration -> create_obj_declaration .)
    CADENA          reduce using rule 20 (declaration -> create_obj_declaration .)
    $end            reduce using rule 20 (declaration -> create_obj_declaration .)
    RBLOCK          reduce using rule 20 (declaration -> create_obj_declaration .)
    endwhile        reduce using rule 20 (declaration -> create_obj_declaration .)
    endfor          reduce using rule 20 (declaration -> create_obj_declaration .)
    endforeach      reduce using rule 20 (declaration -> create_obj_declaration .)
    endswitch       reduce using rule 20 (declaration -> create_obj_declaration .)
    break           reduce using rule 20 (declaration -> create_obj_declaration .)
    default         reduce using rule 20 (declaration -> create_obj_declaration .)
    case            reduce using rule 20 (declaration -> create_obj_declaration .)


state 21

    (21) declaration -> footer_declaration .

    COMMENT         reduce using rule 21 (declaration -> footer_declaration .)
    COMMENT_HASHTAG reduce using rule 21 (declaration -> footer_declaration .)
    COMMENT_MULTI   reduce using rule 21 (declaration -> footer_declaration .)
    empty           reduce using rule 21 (declaration -> footer_declaration .)
    include         reduce using rule 21 (declaration -> footer_declaration .)
    const           reduce using rule 21 (declaration -> footer_declaration .)
    print           reduce using rule 21 (declaration -> footer_declaration .)
    echo            reduce using rule 21 (declaration -> footer_declaration .)
    while           reduce using rule 21 (declaration -> footer_declaration .)
    do              reduce using rule 21 (declaration -> footer_declaration .)
    if              reduce using rule 21 (declaration -> footer_declaration .)
    function        reduce using rule 21 (declaration -> footer_declaration .)
    ID              reduce using rule 21 (declaration -> footer_declaration .)
    return          reduce using rule 21 (declaration -> footer_declaration .)
    class           reduce using rule 21 (declaration -> footer_declaration .)
    new             reduce using rule 21 (declaration -> footer_declaration .)
    CLOSE_TAG       reduce using rule 21 (declaration -> footer_declaration .)
    for             reduce using rule 21 (declaration -> footer_declaration .)
    foreach         reduce using rule 21 (declaration -> footer_declaration .)
    switch          reduce using rule 21 (declaration -> footer_declaration .)
    exit            reduce using rule 21 (declaration -> footer_declaration .)
    VARIABLE        reduce using rule 21 (declaration -> footer_declaration .)
    array           reduce using rule 21 (declaration -> footer_declaration .)
    pow             reduce using rule 21 (declaration -> footer_declaration .)
    POW             reduce using rule 21 (declaration -> footer_declaration .)
    abs             reduce using rule 21 (declaration -> footer_declaration .)
    cos             reduce using rule 21 (declaration -> footer_declaration .)
    deg2rad         reduce using rule 21 (declaration -> footer_declaration .)
    rad2deg         reduce using rule 21 (declaration -> footer_declaration .)
    die             reduce using rule 21 (declaration -> footer_declaration .)
    exp             reduce using rule 21 (declaration -> footer_declaration .)
    floor           reduce using rule 21 (declaration -> footer_declaration .)
    isset           reduce using rule 21 (declaration -> footer_declaration .)
    list            reduce using rule 21 (declaration -> footer_declaration .)
    log             reduce using rule 21 (declaration -> footer_declaration .)
    log10           reduce using rule 21 (declaration -> footer_declaration .)
    max             reduce using rule 21 (declaration -> footer_declaration .)
    min             reduce using rule 21 (declaration -> footer_declaration .)
    rand            reduce using rule 21 (declaration -> footer_declaration .)
    round           reduce using rule 21 (declaration -> footer_declaration .)
    sin             reduce using rule 21 (declaration -> footer_declaration .)
    sqrt            reduce using rule 21 (declaration -> footer_declaration .)
    unset           reduce using rule 21 (declaration -> footer_declaration .)
    CADENA          reduce using rule 21 (declaration -> footer_declaration .)
    $end            reduce using rule 21 (declaration -> footer_declaration .)
    RBLOCK          reduce using rule 21 (declaration -> footer_declaration .)
    endwhile        reduce using rule 21 (declaration -> footer_declaration .)
    endfor          reduce using rule 21 (declaration -> footer_declaration .)
    endforeach      reduce using rule 21 (declaration -> footer_declaration .)
    endswitch       reduce using rule 21 (declaration -> footer_declaration .)
    break           reduce using rule 21 (declaration -> footer_declaration .)
    default         reduce using rule 21 (declaration -> footer_declaration .)
    case            reduce using rule 21 (declaration -> footer_declaration .)


state 22

    (22) declaration -> for_loop .

    COMMENT         reduce using rule 22 (declaration -> for_loop .)
    COMMENT_HASHTAG reduce using rule 22 (declaration -> for_loop .)
    COMMENT_MULTI   reduce using rule 22 (declaration -> for_loop .)
    empty           reduce using rule 22 (declaration -> for_loop .)
    include         reduce using rule 22 (declaration -> for_loop .)
    const           reduce using rule 22 (declaration -> for_loop .)
    print           reduce using rule 22 (declaration -> for_loop .)
    echo            reduce using rule 22 (declaration -> for_loop .)
    while           reduce using rule 22 (declaration -> for_loop .)
    do              reduce using rule 22 (declaration -> for_loop .)
    if              reduce using rule 22 (declaration -> for_loop .)
    function        reduce using rule 22 (declaration -> for_loop .)
    ID              reduce using rule 22 (declaration -> for_loop .)
    return          reduce using rule 22 (declaration -> for_loop .)
    class           reduce using rule 22 (declaration -> for_loop .)
    new             reduce using rule 22 (declaration -> for_loop .)
    CLOSE_TAG       reduce using rule 22 (declaration -> for_loop .)
    for             reduce using rule 22 (declaration -> for_loop .)
    foreach         reduce using rule 22 (declaration -> for_loop .)
    switch          reduce using rule 22 (declaration -> for_loop .)
    exit            reduce using rule 22 (declaration -> for_loop .)
    VARIABLE        reduce using rule 22 (declaration -> for_loop .)
    array           reduce using rule 22 (declaration -> for_loop .)
    pow             reduce using rule 22 (declaration -> for_loop .)
    POW             reduce using rule 22 (declaration -> for_loop .)
    abs             reduce using rule 22 (declaration -> for_loop .)
    cos             reduce using rule 22 (declaration -> for_loop .)
    deg2rad         reduce using rule 22 (declaration -> for_loop .)
    rad2deg         reduce using rule 22 (declaration -> for_loop .)
    die             reduce using rule 22 (declaration -> for_loop .)
    exp             reduce using rule 22 (declaration -> for_loop .)
    floor           reduce using rule 22 (declaration -> for_loop .)
    isset           reduce using rule 22 (declaration -> for_loop .)
    list            reduce using rule 22 (declaration -> for_loop .)
    log             reduce using rule 22 (declaration -> for_loop .)
    log10           reduce using rule 22 (declaration -> for_loop .)
    max             reduce using rule 22 (declaration -> for_loop .)
    min             reduce using rule 22 (declaration -> for_loop .)
    rand            reduce using rule 22 (declaration -> for_loop .)
    round           reduce using rule 22 (declaration -> for_loop .)
    sin             reduce using rule 22 (declaration -> for_loop .)
    sqrt            reduce using rule 22 (declaration -> for_loop .)
    unset           reduce using rule 22 (declaration -> for_loop .)
    CADENA          reduce using rule 22 (declaration -> for_loop .)
    $end            reduce using rule 22 (declaration -> for_loop .)
    RBLOCK          reduce using rule 22 (declaration -> for_loop .)
    endwhile        reduce using rule 22 (declaration -> for_loop .)
    endfor          reduce using rule 22 (declaration -> for_loop .)
    endforeach      reduce using rule 22 (declaration -> for_loop .)
    endswitch       reduce using rule 22 (declaration -> for_loop .)
    break           reduce using rule 22 (declaration -> for_loop .)
    default         reduce using rule 22 (declaration -> for_loop .)
    case            reduce using rule 22 (declaration -> for_loop .)


state 23

    (23) declaration -> foreach_loop .

    COMMENT         reduce using rule 23 (declaration -> foreach_loop .)
    COMMENT_HASHTAG reduce using rule 23 (declaration -> foreach_loop .)
    COMMENT_MULTI   reduce using rule 23 (declaration -> foreach_loop .)
    empty           reduce using rule 23 (declaration -> foreach_loop .)
    include         reduce using rule 23 (declaration -> foreach_loop .)
    const           reduce using rule 23 (declaration -> foreach_loop .)
    print           reduce using rule 23 (declaration -> foreach_loop .)
    echo            reduce using rule 23 (declaration -> foreach_loop .)
    while           reduce using rule 23 (declaration -> foreach_loop .)
    do              reduce using rule 23 (declaration -> foreach_loop .)
    if              reduce using rule 23 (declaration -> foreach_loop .)
    function        reduce using rule 23 (declaration -> foreach_loop .)
    ID              reduce using rule 23 (declaration -> foreach_loop .)
    return          reduce using rule 23 (declaration -> foreach_loop .)
    class           reduce using rule 23 (declaration -> foreach_loop .)
    new             reduce using rule 23 (declaration -> foreach_loop .)
    CLOSE_TAG       reduce using rule 23 (declaration -> foreach_loop .)
    for             reduce using rule 23 (declaration -> foreach_loop .)
    foreach         reduce using rule 23 (declaration -> foreach_loop .)
    switch          reduce using rule 23 (declaration -> foreach_loop .)
    exit            reduce using rule 23 (declaration -> foreach_loop .)
    VARIABLE        reduce using rule 23 (declaration -> foreach_loop .)
    array           reduce using rule 23 (declaration -> foreach_loop .)
    pow             reduce using rule 23 (declaration -> foreach_loop .)
    POW             reduce using rule 23 (declaration -> foreach_loop .)
    abs             reduce using rule 23 (declaration -> foreach_loop .)
    cos             reduce using rule 23 (declaration -> foreach_loop .)
    deg2rad         reduce using rule 23 (declaration -> foreach_loop .)
    rad2deg         reduce using rule 23 (declaration -> foreach_loop .)
    die             reduce using rule 23 (declaration -> foreach_loop .)
    exp             reduce using rule 23 (declaration -> foreach_loop .)
    floor           reduce using rule 23 (declaration -> foreach_loop .)
    isset           reduce using rule 23 (declaration -> foreach_loop .)
    list            reduce using rule 23 (declaration -> foreach_loop .)
    log             reduce using rule 23 (declaration -> foreach_loop .)
    log10           reduce using rule 23 (declaration -> foreach_loop .)
    max             reduce using rule 23 (declaration -> foreach_loop .)
    min             reduce using rule 23 (declaration -> foreach_loop .)
    rand            reduce using rule 23 (declaration -> foreach_loop .)
    round           reduce using rule 23 (declaration -> foreach_loop .)
    sin             reduce using rule 23 (declaration -> foreach_loop .)
    sqrt            reduce using rule 23 (declaration -> foreach_loop .)
    unset           reduce using rule 23 (declaration -> foreach_loop .)
    CADENA          reduce using rule 23 (declaration -> foreach_loop .)
    $end            reduce using rule 23 (declaration -> foreach_loop .)
    RBLOCK          reduce using rule 23 (declaration -> foreach_loop .)
    endwhile        reduce using rule 23 (declaration -> foreach_loop .)
    endfor          reduce using rule 23 (declaration -> foreach_loop .)
    endforeach      reduce using rule 23 (declaration -> foreach_loop .)
    endswitch       reduce using rule 23 (declaration -> foreach_loop .)
    break           reduce using rule 23 (declaration -> foreach_loop .)
    default         reduce using rule 23 (declaration -> foreach_loop .)
    case            reduce using rule 23 (declaration -> foreach_loop .)


state 24

    (24) declaration -> switch_statement .

    COMMENT         reduce using rule 24 (declaration -> switch_statement .)
    COMMENT_HASHTAG reduce using rule 24 (declaration -> switch_statement .)
    COMMENT_MULTI   reduce using rule 24 (declaration -> switch_statement .)
    empty           reduce using rule 24 (declaration -> switch_statement .)
    include         reduce using rule 24 (declaration -> switch_statement .)
    const           reduce using rule 24 (declaration -> switch_statement .)
    print           reduce using rule 24 (declaration -> switch_statement .)
    echo            reduce using rule 24 (declaration -> switch_statement .)
    while           reduce using rule 24 (declaration -> switch_statement .)
    do              reduce using rule 24 (declaration -> switch_statement .)
    if              reduce using rule 24 (declaration -> switch_statement .)
    function        reduce using rule 24 (declaration -> switch_statement .)
    ID              reduce using rule 24 (declaration -> switch_statement .)
    return          reduce using rule 24 (declaration -> switch_statement .)
    class           reduce using rule 24 (declaration -> switch_statement .)
    new             reduce using rule 24 (declaration -> switch_statement .)
    CLOSE_TAG       reduce using rule 24 (declaration -> switch_statement .)
    for             reduce using rule 24 (declaration -> switch_statement .)
    foreach         reduce using rule 24 (declaration -> switch_statement .)
    switch          reduce using rule 24 (declaration -> switch_statement .)
    exit            reduce using rule 24 (declaration -> switch_statement .)
    VARIABLE        reduce using rule 24 (declaration -> switch_statement .)
    array           reduce using rule 24 (declaration -> switch_statement .)
    pow             reduce using rule 24 (declaration -> switch_statement .)
    POW             reduce using rule 24 (declaration -> switch_statement .)
    abs             reduce using rule 24 (declaration -> switch_statement .)
    cos             reduce using rule 24 (declaration -> switch_statement .)
    deg2rad         reduce using rule 24 (declaration -> switch_statement .)
    rad2deg         reduce using rule 24 (declaration -> switch_statement .)
    die             reduce using rule 24 (declaration -> switch_statement .)
    exp             reduce using rule 24 (declaration -> switch_statement .)
    floor           reduce using rule 24 (declaration -> switch_statement .)
    isset           reduce using rule 24 (declaration -> switch_statement .)
    list            reduce using rule 24 (declaration -> switch_statement .)
    log             reduce using rule 24 (declaration -> switch_statement .)
    log10           reduce using rule 24 (declaration -> switch_statement .)
    max             reduce using rule 24 (declaration -> switch_statement .)
    min             reduce using rule 24 (declaration -> switch_statement .)
    rand            reduce using rule 24 (declaration -> switch_statement .)
    round           reduce using rule 24 (declaration -> switch_statement .)
    sin             reduce using rule 24 (declaration -> switch_statement .)
    sqrt            reduce using rule 24 (declaration -> switch_statement .)
    unset           reduce using rule 24 (declaration -> switch_statement .)
    CADENA          reduce using rule 24 (declaration -> switch_statement .)
    $end            reduce using rule 24 (declaration -> switch_statement .)
    RBLOCK          reduce using rule 24 (declaration -> switch_statement .)
    endwhile        reduce using rule 24 (declaration -> switch_statement .)
    endfor          reduce using rule 24 (declaration -> switch_statement .)
    endforeach      reduce using rule 24 (declaration -> switch_statement .)
    endswitch       reduce using rule 24 (declaration -> switch_statement .)
    break           reduce using rule 24 (declaration -> switch_statement .)
    default         reduce using rule 24 (declaration -> switch_statement .)
    case            reduce using rule 24 (declaration -> switch_statement .)


state 25

    (25) declaration -> exit_statement .

    COMMENT         reduce using rule 25 (declaration -> exit_statement .)
    COMMENT_HASHTAG reduce using rule 25 (declaration -> exit_statement .)
    COMMENT_MULTI   reduce using rule 25 (declaration -> exit_statement .)
    empty           reduce using rule 25 (declaration -> exit_statement .)
    include         reduce using rule 25 (declaration -> exit_statement .)
    const           reduce using rule 25 (declaration -> exit_statement .)
    print           reduce using rule 25 (declaration -> exit_statement .)
    echo            reduce using rule 25 (declaration -> exit_statement .)
    while           reduce using rule 25 (declaration -> exit_statement .)
    do              reduce using rule 25 (declaration -> exit_statement .)
    if              reduce using rule 25 (declaration -> exit_statement .)
    function        reduce using rule 25 (declaration -> exit_statement .)
    ID              reduce using rule 25 (declaration -> exit_statement .)
    return          reduce using rule 25 (declaration -> exit_statement .)
    class           reduce using rule 25 (declaration -> exit_statement .)
    new             reduce using rule 25 (declaration -> exit_statement .)
    CLOSE_TAG       reduce using rule 25 (declaration -> exit_statement .)
    for             reduce using rule 25 (declaration -> exit_statement .)
    foreach         reduce using rule 25 (declaration -> exit_statement .)
    switch          reduce using rule 25 (declaration -> exit_statement .)
    exit            reduce using rule 25 (declaration -> exit_statement .)
    VARIABLE        reduce using rule 25 (declaration -> exit_statement .)
    array           reduce using rule 25 (declaration -> exit_statement .)
    pow             reduce using rule 25 (declaration -> exit_statement .)
    POW             reduce using rule 25 (declaration -> exit_statement .)
    abs             reduce using rule 25 (declaration -> exit_statement .)
    cos             reduce using rule 25 (declaration -> exit_statement .)
    deg2rad         reduce using rule 25 (declaration -> exit_statement .)
    rad2deg         reduce using rule 25 (declaration -> exit_statement .)
    die             reduce using rule 25 (declaration -> exit_statement .)
    exp             reduce using rule 25 (declaration -> exit_statement .)
    floor           reduce using rule 25 (declaration -> exit_statement .)
    isset           reduce using rule 25 (declaration -> exit_statement .)
    list            reduce using rule 25 (declaration -> exit_statement .)
    log             reduce using rule 25 (declaration -> exit_statement .)
    log10           reduce using rule 25 (declaration -> exit_statement .)
    max             reduce using rule 25 (declaration -> exit_statement .)
    min             reduce using rule 25 (declaration -> exit_statement .)
    rand            reduce using rule 25 (declaration -> exit_statement .)
    round           reduce using rule 25 (declaration -> exit_statement .)
    sin             reduce using rule 25 (declaration -> exit_statement .)
    sqrt            reduce using rule 25 (declaration -> exit_statement .)
    unset           reduce using rule 25 (declaration -> exit_statement .)
    CADENA          reduce using rule 25 (declaration -> exit_statement .)
    $end            reduce using rule 25 (declaration -> exit_statement .)
    RBLOCK          reduce using rule 25 (declaration -> exit_statement .)
    endwhile        reduce using rule 25 (declaration -> exit_statement .)
    endfor          reduce using rule 25 (declaration -> exit_statement .)
    endforeach      reduce using rule 25 (declaration -> exit_statement .)
    endswitch       reduce using rule 25 (declaration -> exit_statement .)
    break           reduce using rule 25 (declaration -> exit_statement .)
    default         reduce using rule 25 (declaration -> exit_statement .)
    case            reduce using rule 25 (declaration -> exit_statement .)


state 26

    (26) declaration -> empty .

    COMMENT         reduce using rule 26 (declaration -> empty .)
    COMMENT_HASHTAG reduce using rule 26 (declaration -> empty .)
    COMMENT_MULTI   reduce using rule 26 (declaration -> empty .)
    empty           reduce using rule 26 (declaration -> empty .)
    include         reduce using rule 26 (declaration -> empty .)
    const           reduce using rule 26 (declaration -> empty .)
    print           reduce using rule 26 (declaration -> empty .)
    echo            reduce using rule 26 (declaration -> empty .)
    while           reduce using rule 26 (declaration -> empty .)
    do              reduce using rule 26 (declaration -> empty .)
    if              reduce using rule 26 (declaration -> empty .)
    function        reduce using rule 26 (declaration -> empty .)
    ID              reduce using rule 26 (declaration -> empty .)
    return          reduce using rule 26 (declaration -> empty .)
    class           reduce using rule 26 (declaration -> empty .)
    new             reduce using rule 26 (declaration -> empty .)
    CLOSE_TAG       reduce using rule 26 (declaration -> empty .)
    for             reduce using rule 26 (declaration -> empty .)
    foreach         reduce using rule 26 (declaration -> empty .)
    switch          reduce using rule 26 (declaration -> empty .)
    exit            reduce using rule 26 (declaration -> empty .)
    VARIABLE        reduce using rule 26 (declaration -> empty .)
    array           reduce using rule 26 (declaration -> empty .)
    pow             reduce using rule 26 (declaration -> empty .)
    POW             reduce using rule 26 (declaration -> empty .)
    abs             reduce using rule 26 (declaration -> empty .)
    cos             reduce using rule 26 (declaration -> empty .)
    deg2rad         reduce using rule 26 (declaration -> empty .)
    rad2deg         reduce using rule 26 (declaration -> empty .)
    die             reduce using rule 26 (declaration -> empty .)
    exp             reduce using rule 26 (declaration -> empty .)
    floor           reduce using rule 26 (declaration -> empty .)
    isset           reduce using rule 26 (declaration -> empty .)
    list            reduce using rule 26 (declaration -> empty .)
    log             reduce using rule 26 (declaration -> empty .)
    log10           reduce using rule 26 (declaration -> empty .)
    max             reduce using rule 26 (declaration -> empty .)
    min             reduce using rule 26 (declaration -> empty .)
    rand            reduce using rule 26 (declaration -> empty .)
    round           reduce using rule 26 (declaration -> empty .)
    sin             reduce using rule 26 (declaration -> empty .)
    sqrt            reduce using rule 26 (declaration -> empty .)
    unset           reduce using rule 26 (declaration -> empty .)
    CADENA          reduce using rule 26 (declaration -> empty .)
    $end            reduce using rule 26 (declaration -> empty .)
    RBLOCK          reduce using rule 26 (declaration -> empty .)
    endwhile        reduce using rule 26 (declaration -> empty .)
    endfor          reduce using rule 26 (declaration -> empty .)
    endforeach      reduce using rule 26 (declaration -> empty .)
    endswitch       reduce using rule 26 (declaration -> empty .)
    break           reduce using rule 26 (declaration -> empty .)
    default         reduce using rule 26 (declaration -> empty .)
    case            reduce using rule 26 (declaration -> empty .)


state 27

    (29) header_declaration -> include . CADENA SEMICOLON

    CADENA          shift and go to state 71


state 28

    (163) Concatenar_Cadenas_declaration -> CADENA . DOT CADENA
    (164) Concatenar_Cadenas_declaration -> CADENA . DOT VARIABLE

    DOT             shift and go to state 72


state 29

    (39) var_declaration -> var_declaration2 . SEMICOLON

    SEMICOLON       shift and go to state 73


state 30

    (30) constant_declaration -> const . ID EQUAL data_type SEMICOLON

    ID              shift and go to state 74


state 31

    (110) fun_call -> ID . LPAREN params RPAREN

    LPAREN          shift and go to state 75


state 32

    (31) print_declaration -> print . var_declaration2 SEMICOLON
    (32) print_declaration -> print . LPAREN var_declaration2 RPAREN SEMICOLON
    (33) print_declaration -> print . LPAREN data_type RPAREN SEMICOLON
    (34) print_declaration -> print . data_type SEMICOLON
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (27) data_type -> . NUMBER
    (28) data_type -> . CADENA
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    LPAREN          shift and go to state 77
    VARIABLE        shift and go to state 46
    NUMBER          shift and go to state 79
    CADENA          shift and go to state 80
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69

    var_declaration2               shift and go to state 76
    data_type                      shift and go to state 78
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 33

    (35) echo_declaration -> echo . var_declaration2 SEMICOLON
    (36) echo_declaration -> echo . LPAREN var_declaration2 RPAREN SEMICOLON
    (37) echo_declaration -> echo . LPAREN data_type RPAREN SEMICOLON
    (38) echo_declaration -> echo . data_type SEMICOLON
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (27) data_type -> . NUMBER
    (28) data_type -> . CADENA
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    LPAREN          shift and go to state 82
    VARIABLE        shift and go to state 46
    NUMBER          shift and go to state 79
    CADENA          shift and go to state 80
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69

    var_declaration2               shift and go to state 81
    data_type                      shift and go to state 83
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 34

    (59) iteration_stmt -> while . LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (60) iteration_stmt -> while . LPAREN expression RPAREN COLON declaration endwhile SEMICOLON

    LPAREN          shift and go to state 84


state 35

    (61) iteration_stmt -> do . LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON
    (62) iteration_stmt -> do . COLON declaration endwhile SEMICOLON

    LBLOCK          shift and go to state 85
    COLON           shift and go to state 86


state 36

    (103) if_statement -> if . LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part

    LPAREN          shift and go to state 87


state 37

    (108) fun_declaration -> function . ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK
    (109) fun_declaration -> function . ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK

    ID              shift and go to state 88


state 38

    (111) return_statement -> return . expression SEMICOLON
    (112) return_statement -> return . params SEMICOLON
    (113) return_statement -> return . SEMICOLON
    (63) expression -> . additive_expression
    (64) expression -> . additive_expression logical_op additive_expression
    (65) expression -> . additive_expression comp_op additive_expression
    (66) expression -> . additive_expression comp_op additive_expression logical_op additive_expression comp_op additive_expression
    (67) expression -> . additive_expression bits_op additive_expression
    (116) params -> . single_param
    (117) params -> . params COMMA single_param
    (68) additive_expression -> . term
    (69) additive_expression -> . term math_op term
    (118) single_param -> . var_declaration2
    (119) single_param -> . data_type
    (120) single_param -> . empty_function
    (70) term -> . MINUS term
    (71) term -> . factor
    (72) term -> . factor increment_decrement_op
    (73) term -> . increment_decrement_op factor
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (27) data_type -> . NUMBER
    (28) data_type -> . CADENA
    (174) empty_function -> .
    (74) factor -> . NUMBER
    (75) factor -> . VARIABLE
    (76) factor -> . LPAREN expression RPAREN
    (77) increment_decrement_op -> . PLUSPLUS
    (78) increment_decrement_op -> . MINUSMINUS
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 90
    MINUS           shift and go to state 98
    VARIABLE        shift and go to state 101
    NUMBER          shift and go to state 102
    CADENA          shift and go to state 80
    COMMA           reduce using rule 174 (empty_function -> .)
    LPAREN          shift and go to state 103
    PLUSPLUS        shift and go to state 104
    MINUSMINUS      shift and go to state 105
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69

  ! SEMICOLON       [ reduce using rule 174 (empty_function -> .) ]

    expression                     shift and go to state 89
    params                         shift and go to state 91
    additive_expression            shift and go to state 92
    single_param                   shift and go to state 93
    term                           shift and go to state 94
    var_declaration2               shift and go to state 95
    data_type                      shift and go to state 96
    empty_function                 shift and go to state 97
    factor                         shift and go to state 99
    increment_decrement_op         shift and go to state 100
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 39

    (114) obj_declaration -> class . ID LBLOCK declaration RBLOCK

    ID              shift and go to state 106


state 40

    (115) create_obj_declaration -> new . ID LPAREN params RPAREN

    ID              shift and go to state 107


state 41

    (3) footer_declaration -> CLOSE_TAG .

    COMMENT         reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    COMMENT_HASHTAG reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    COMMENT_MULTI   reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    empty           reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    include         reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    const           reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    print           reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    echo            reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    while           reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    do              reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    if              reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    function        reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    ID              reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    return          reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    class           reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    new             reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    CLOSE_TAG       reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    for             reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    foreach         reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    switch          reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    exit            reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    VARIABLE        reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    array           reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    pow             reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    POW             reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    abs             reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    cos             reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    deg2rad         reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    rad2deg         reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    die             reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    exp             reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    floor           reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    isset           reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    list            reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    log             reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    log10           reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    max             reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    min             reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    rand            reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    round           reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    sin             reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    sqrt            reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    unset           reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    CADENA          reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    $end            reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    RBLOCK          reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    endwhile        reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    endfor          reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    endforeach      reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    endswitch       reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    break           reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    default         reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    case            reduce using rule 3 (footer_declaration -> CLOSE_TAG .)


state 42

    (121) for_loop -> for . LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK
    (122) for_loop -> for . LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON

    LPAREN          shift and go to state 108


state 43

    (127) foreach_loop -> foreach . LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK
    (128) foreach_loop -> foreach . LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON

    LPAREN          shift and go to state 109


state 44

    (129) switch_statement -> switch . LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK
    (130) switch_statement -> switch . LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON

    LPAREN          shift and go to state 110


state 45

    (126) exit_statement -> exit . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 111


state 46

    (40) var_declaration2 -> VARIABLE .
    (41) var_declaration2 -> VARIABLE . EQUAL NUMBER
    (42) var_declaration2 -> VARIABLE . EQUAL VARIABLE
    (43) var_declaration2 -> VARIABLE . EQUAL CADENA
    (44) var_declaration2 -> VARIABLE . EQUAL Built_In_Declaration
    (45) var_declaration2 -> VARIABLE . EQUAL expression
    (46) var_declaration2 -> VARIABLE . assignation VARIABLE
    (47) var_declaration2 -> VARIABLE . assignation NUMBER
    (50) var_declaration2 -> VARIABLE . EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> VARIABLE . assignment_tail
    (52) var_declaration2 -> VARIABLE . EQUAL assignment_tail
    (162) Concatenar_Cadenas_declaration -> VARIABLE . DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> VARIABLE . DOT CADENA
    (169) assignation -> . ASSIGN
    (170) assignation -> . SREQUAL
    (171) assignation -> . SLEQUAL
    (172) assignation -> . XOREQUAL
    (173) assignation -> . ANDEQUAL
    (53) assignment_tail -> . COMMA var_declaration2
    (54) assignment_tail -> . LBRACKET params RBRACKET
    (55) assignment_tail -> . LBLOCK params RBLOCK
    (56) assignment_tail -> . VARIABLE LBRACKET expression COMMA params
    (57) assignment_tail -> . VARIABLE LBRACKET params RBRACKET
    (58) assignment_tail -> . VARIABLE LBLOCK params RBLOCK

  ! shift/reduce conflict for COMMA resolved as shift
    SEMICOLON       reduce using rule 40 (var_declaration2 -> VARIABLE .)
    RPAREN          reduce using rule 40 (var_declaration2 -> VARIABLE .)
    RBRACKET        reduce using rule 40 (var_declaration2 -> VARIABLE .)
    RBLOCK          reduce using rule 40 (var_declaration2 -> VARIABLE .)
    EQUAL           shift and go to state 113
    DOT             shift and go to state 116
    ASSIGN          shift and go to state 117
    SREQUAL         shift and go to state 118
    SLEQUAL         shift and go to state 119
    XOREQUAL        shift and go to state 120
    ANDEQUAL        shift and go to state 121
    COMMA           shift and go to state 122
    LBRACKET        shift and go to state 123
    LBLOCK          shift and go to state 124
    VARIABLE        shift and go to state 112

  ! COMMA           [ reduce using rule 40 (var_declaration2 -> VARIABLE .) ]

    assignation                    shift and go to state 114
    assignment_tail                shift and go to state 115

state 47

    (48) var_declaration2 -> Built_In_Declaration .

    SEMICOLON       reduce using rule 48 (var_declaration2 -> Built_In_Declaration .)
    COMMA           reduce using rule 48 (var_declaration2 -> Built_In_Declaration .)
    RPAREN          reduce using rule 48 (var_declaration2 -> Built_In_Declaration .)
    RBRACKET        reduce using rule 48 (var_declaration2 -> Built_In_Declaration .)
    RBLOCK          reduce using rule 48 (var_declaration2 -> Built_In_Declaration .)


state 48

    (49) var_declaration2 -> Concatenar_Cadenas_declaration .

    SEMICOLON       reduce using rule 49 (var_declaration2 -> Concatenar_Cadenas_declaration .)
    COMMA           reduce using rule 49 (var_declaration2 -> Concatenar_Cadenas_declaration .)
    RPAREN          reduce using rule 49 (var_declaration2 -> Concatenar_Cadenas_declaration .)
    RBRACKET        reduce using rule 49 (var_declaration2 -> Concatenar_Cadenas_declaration .)
    RBLOCK          reduce using rule 49 (var_declaration2 -> Concatenar_Cadenas_declaration .)


state 49

    (141) Built_In_Declaration -> array . LPAREN params RPAREN

    LPAREN          shift and go to state 125


state 50

    (142) Built_In_Declaration -> pow . LPAREN params RPAREN

    LPAREN          shift and go to state 126


state 51

    (143) Built_In_Declaration -> POW . LPAREN params RPAREN

    LPAREN          shift and go to state 127


state 52

    (144) Built_In_Declaration -> abs . LPAREN params RPAREN

    LPAREN          shift and go to state 128


state 53

    (145) Built_In_Declaration -> cos . LPAREN params RPAREN

    LPAREN          shift and go to state 129


state 54

    (146) Built_In_Declaration -> deg2rad . LPAREN params RPAREN

    LPAREN          shift and go to state 130


state 55

    (147) Built_In_Declaration -> rad2deg . LPAREN params RPAREN

    LPAREN          shift and go to state 131


state 56

    (148) Built_In_Declaration -> die . LPAREN params RPAREN

    LPAREN          shift and go to state 132


state 57

    (149) Built_In_Declaration -> exp . LPAREN params RPAREN

    LPAREN          shift and go to state 133


state 58

    (150) Built_In_Declaration -> floor . LPAREN params RPAREN

    LPAREN          shift and go to state 134


state 59

    (151) Built_In_Declaration -> isset . LPAREN params RPAREN

    LPAREN          shift and go to state 135


state 60

    (152) Built_In_Declaration -> list . LPAREN params RPAREN

    LPAREN          shift and go to state 136


state 61

    (153) Built_In_Declaration -> log . LPAREN params RPAREN

    LPAREN          shift and go to state 137


state 62

    (154) Built_In_Declaration -> log10 . LPAREN params RPAREN

    LPAREN          shift and go to state 138


state 63

    (155) Built_In_Declaration -> max . LPAREN params RPAREN

    LPAREN          shift and go to state 139


state 64

    (156) Built_In_Declaration -> min . LPAREN params RPAREN

    LPAREN          shift and go to state 140


state 65

    (157) Built_In_Declaration -> rand . LPAREN params RPAREN

    LPAREN          shift and go to state 141


state 66

    (158) Built_In_Declaration -> round . LPAREN params RPAREN

    LPAREN          shift and go to state 142


state 67

    (159) Built_In_Declaration -> sin . LPAREN params RPAREN

    LPAREN          shift and go to state 143


state 68

    (160) Built_In_Declaration -> sqrt . LPAREN params RPAREN

    LPAREN          shift and go to state 144


state 69

    (161) Built_In_Declaration -> unset . LPAREN params RPAREN

    LPAREN          shift and go to state 145


state 70

    (5) declaration_list -> declaration_list declaration .

    COMMENT         reduce using rule 5 (declaration_list -> declaration_list declaration .)
    COMMENT_HASHTAG reduce using rule 5 (declaration_list -> declaration_list declaration .)
    COMMENT_MULTI   reduce using rule 5 (declaration_list -> declaration_list declaration .)
    empty           reduce using rule 5 (declaration_list -> declaration_list declaration .)
    include         reduce using rule 5 (declaration_list -> declaration_list declaration .)
    const           reduce using rule 5 (declaration_list -> declaration_list declaration .)
    print           reduce using rule 5 (declaration_list -> declaration_list declaration .)
    echo            reduce using rule 5 (declaration_list -> declaration_list declaration .)
    while           reduce using rule 5 (declaration_list -> declaration_list declaration .)
    do              reduce using rule 5 (declaration_list -> declaration_list declaration .)
    if              reduce using rule 5 (declaration_list -> declaration_list declaration .)
    function        reduce using rule 5 (declaration_list -> declaration_list declaration .)
    ID              reduce using rule 5 (declaration_list -> declaration_list declaration .)
    return          reduce using rule 5 (declaration_list -> declaration_list declaration .)
    class           reduce using rule 5 (declaration_list -> declaration_list declaration .)
    new             reduce using rule 5 (declaration_list -> declaration_list declaration .)
    CLOSE_TAG       reduce using rule 5 (declaration_list -> declaration_list declaration .)
    for             reduce using rule 5 (declaration_list -> declaration_list declaration .)
    foreach         reduce using rule 5 (declaration_list -> declaration_list declaration .)
    switch          reduce using rule 5 (declaration_list -> declaration_list declaration .)
    exit            reduce using rule 5 (declaration_list -> declaration_list declaration .)
    VARIABLE        reduce using rule 5 (declaration_list -> declaration_list declaration .)
    array           reduce using rule 5 (declaration_list -> declaration_list declaration .)
    pow             reduce using rule 5 (declaration_list -> declaration_list declaration .)
    POW             reduce using rule 5 (declaration_list -> declaration_list declaration .)
    abs             reduce using rule 5 (declaration_list -> declaration_list declaration .)
    cos             reduce using rule 5 (declaration_list -> declaration_list declaration .)
    deg2rad         reduce using rule 5 (declaration_list -> declaration_list declaration .)
    rad2deg         reduce using rule 5 (declaration_list -> declaration_list declaration .)
    die             reduce using rule 5 (declaration_list -> declaration_list declaration .)
    exp             reduce using rule 5 (declaration_list -> declaration_list declaration .)
    floor           reduce using rule 5 (declaration_list -> declaration_list declaration .)
    isset           reduce using rule 5 (declaration_list -> declaration_list declaration .)
    list            reduce using rule 5 (declaration_list -> declaration_list declaration .)
    log             reduce using rule 5 (declaration_list -> declaration_list declaration .)
    log10           reduce using rule 5 (declaration_list -> declaration_list declaration .)
    max             reduce using rule 5 (declaration_list -> declaration_list declaration .)
    min             reduce using rule 5 (declaration_list -> declaration_list declaration .)
    rand            reduce using rule 5 (declaration_list -> declaration_list declaration .)
    round           reduce using rule 5 (declaration_list -> declaration_list declaration .)
    sin             reduce using rule 5 (declaration_list -> declaration_list declaration .)
    sqrt            reduce using rule 5 (declaration_list -> declaration_list declaration .)
    unset           reduce using rule 5 (declaration_list -> declaration_list declaration .)
    CADENA          reduce using rule 5 (declaration_list -> declaration_list declaration .)
    $end            reduce using rule 5 (declaration_list -> declaration_list declaration .)
    RBLOCK          reduce using rule 5 (declaration_list -> declaration_list declaration .)
    endfor          reduce using rule 5 (declaration_list -> declaration_list declaration .)
    endforeach      reduce using rule 5 (declaration_list -> declaration_list declaration .)


state 71

    (29) header_declaration -> include CADENA . SEMICOLON

    SEMICOLON       shift and go to state 146


state 72

    (163) Concatenar_Cadenas_declaration -> CADENA DOT . CADENA
    (164) Concatenar_Cadenas_declaration -> CADENA DOT . VARIABLE

    CADENA          shift and go to state 147
    VARIABLE        shift and go to state 148


state 73

    (39) var_declaration -> var_declaration2 SEMICOLON .

    COMMENT         reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)
    COMMENT_HASHTAG reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)
    COMMENT_MULTI   reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)
    empty           reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)
    include         reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)
    const           reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)
    print           reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)
    echo            reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)
    while           reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)
    do              reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)
    if              reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)
    function        reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)
    ID              reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)
    return          reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)
    class           reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)
    new             reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)
    CLOSE_TAG       reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)
    for             reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)
    foreach         reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)
    switch          reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)
    exit            reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)
    VARIABLE        reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)
    array           reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)
    pow             reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)
    POW             reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)
    abs             reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)
    cos             reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)
    deg2rad         reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)
    rad2deg         reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)
    die             reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)
    exp             reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)
    floor           reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)
    isset           reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)
    list            reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)
    log             reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)
    log10           reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)
    max             reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)
    min             reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)
    rand            reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)
    round           reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)
    sin             reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)
    sqrt            reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)
    unset           reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)
    CADENA          reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)
    $end            reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)
    RBLOCK          reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)
    endwhile        reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)
    endfor          reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)
    endforeach      reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)
    endswitch       reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)
    break           reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)
    default         reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)
    case            reduce using rule 39 (var_declaration -> var_declaration2 SEMICOLON .)


state 74

    (30) constant_declaration -> const ID . EQUAL data_type SEMICOLON

    EQUAL           shift and go to state 149


state 75

    (110) fun_call -> ID LPAREN . params RPAREN
    (116) params -> . single_param
    (117) params -> . params COMMA single_param
    (118) single_param -> . var_declaration2
    (119) single_param -> . data_type
    (120) single_param -> . empty_function
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (27) data_type -> . NUMBER
    (28) data_type -> . CADENA
    (174) empty_function -> .
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 46
    NUMBER          shift and go to state 79
    CADENA          shift and go to state 80
    RPAREN          reduce using rule 174 (empty_function -> .)
    COMMA           reduce using rule 174 (empty_function -> .)
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69

    params                         shift and go to state 150
    single_param                   shift and go to state 93
    var_declaration2               shift and go to state 95
    data_type                      shift and go to state 96
    empty_function                 shift and go to state 97
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 76

    (31) print_declaration -> print var_declaration2 . SEMICOLON

    SEMICOLON       shift and go to state 151


state 77

    (32) print_declaration -> print LPAREN . var_declaration2 RPAREN SEMICOLON
    (33) print_declaration -> print LPAREN . data_type RPAREN SEMICOLON
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (27) data_type -> . NUMBER
    (28) data_type -> . CADENA
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 46
    NUMBER          shift and go to state 79
    CADENA          shift and go to state 80
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69

    var_declaration2               shift and go to state 152
    data_type                      shift and go to state 153
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 78

    (34) print_declaration -> print data_type . SEMICOLON

    SEMICOLON       shift and go to state 154


state 79

    (27) data_type -> NUMBER .

    SEMICOLON       reduce using rule 27 (data_type -> NUMBER .)
    RPAREN          reduce using rule 27 (data_type -> NUMBER .)
    COMMA           reduce using rule 27 (data_type -> NUMBER .)
    RBRACKET        reduce using rule 27 (data_type -> NUMBER .)
    RBLOCK          reduce using rule 27 (data_type -> NUMBER .)


state 80

    (28) data_type -> CADENA .
    (163) Concatenar_Cadenas_declaration -> CADENA . DOT CADENA
    (164) Concatenar_Cadenas_declaration -> CADENA . DOT VARIABLE

    SEMICOLON       reduce using rule 28 (data_type -> CADENA .)
    COMMA           reduce using rule 28 (data_type -> CADENA .)
    RPAREN          reduce using rule 28 (data_type -> CADENA .)
    RBRACKET        reduce using rule 28 (data_type -> CADENA .)
    RBLOCK          reduce using rule 28 (data_type -> CADENA .)
    DOT             shift and go to state 72


state 81

    (35) echo_declaration -> echo var_declaration2 . SEMICOLON

    SEMICOLON       shift and go to state 155


state 82

    (36) echo_declaration -> echo LPAREN . var_declaration2 RPAREN SEMICOLON
    (37) echo_declaration -> echo LPAREN . data_type RPAREN SEMICOLON
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (27) data_type -> . NUMBER
    (28) data_type -> . CADENA
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 46
    NUMBER          shift and go to state 79
    CADENA          shift and go to state 80
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69

    var_declaration2               shift and go to state 156
    data_type                      shift and go to state 157
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 83

    (38) echo_declaration -> echo data_type . SEMICOLON

    SEMICOLON       shift and go to state 158


state 84

    (59) iteration_stmt -> while LPAREN . expression RPAREN LBLOCK declaration RBLOCK
    (60) iteration_stmt -> while LPAREN . expression RPAREN COLON declaration endwhile SEMICOLON
    (63) expression -> . additive_expression
    (64) expression -> . additive_expression logical_op additive_expression
    (65) expression -> . additive_expression comp_op additive_expression
    (66) expression -> . additive_expression comp_op additive_expression logical_op additive_expression comp_op additive_expression
    (67) expression -> . additive_expression bits_op additive_expression
    (68) additive_expression -> . term
    (69) additive_expression -> . term math_op term
    (70) term -> . MINUS term
    (71) term -> . factor
    (72) term -> . factor increment_decrement_op
    (73) term -> . increment_decrement_op factor
    (74) factor -> . NUMBER
    (75) factor -> . VARIABLE
    (76) factor -> . LPAREN expression RPAREN
    (77) increment_decrement_op -> . PLUSPLUS
    (78) increment_decrement_op -> . MINUSMINUS

    MINUS           shift and go to state 98
    NUMBER          shift and go to state 160
    VARIABLE        shift and go to state 161
    LPAREN          shift and go to state 103
    PLUSPLUS        shift and go to state 104
    MINUSMINUS      shift and go to state 105

    expression                     shift and go to state 159
    additive_expression            shift and go to state 92
    term                           shift and go to state 94
    factor                         shift and go to state 99
    increment_decrement_op         shift and go to state 100

state 85

    (61) iteration_stmt -> do LBLOCK . declaration RBLOCK while LPAREN expression RPAREN SEMICOLON
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . return_statement
    (19) declaration -> . obj_declaration
    (20) declaration -> . create_obj_declaration
    (21) declaration -> . footer_declaration
    (22) declaration -> . for_loop
    (23) declaration -> . foreach_loop
    (24) declaration -> . switch_statement
    (25) declaration -> . exit_statement
    (26) declaration -> . empty
    (29) header_declaration -> . include CADENA SEMICOLON
    (39) var_declaration -> . var_declaration2 SEMICOLON
    (30) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (31) print_declaration -> . print var_declaration2 SEMICOLON
    (32) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (33) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (34) print_declaration -> . print data_type SEMICOLON
    (35) echo_declaration -> . echo var_declaration2 SEMICOLON
    (36) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (37) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (38) echo_declaration -> . echo data_type SEMICOLON
    (59) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (60) iteration_stmt -> . while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON
    (61) iteration_stmt -> . do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON
    (62) iteration_stmt -> . do COLON declaration endwhile SEMICOLON
    (103) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (108) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK
    (109) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK
    (110) fun_call -> . ID LPAREN params RPAREN
    (111) return_statement -> . return expression SEMICOLON
    (112) return_statement -> . return params SEMICOLON
    (113) return_statement -> . return SEMICOLON
    (114) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (115) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (121) for_loop -> . for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK
    (122) for_loop -> . for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON
    (127) foreach_loop -> . foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK
    (128) foreach_loop -> . foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON
    (129) switch_statement -> . switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK
    (130) switch_statement -> . switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON
    (126) exit_statement -> . exit LPAREN expression RPAREN SEMICOLON
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 26
    include         shift and go to state 27
    const           shift and go to state 30
    print           shift and go to state 32
    echo            shift and go to state 33
    while           shift and go to state 34
    do              shift and go to state 35
    if              shift and go to state 36
    function        shift and go to state 37
    ID              shift and go to state 31
    return          shift and go to state 38
    class           shift and go to state 39
    new             shift and go to state 40
    CLOSE_TAG       shift and go to state 41
    for             shift and go to state 42
    foreach         shift and go to state 43
    switch          shift and go to state 44
    exit            shift and go to state 45
    VARIABLE        shift and go to state 46
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69
    CADENA          shift and go to state 28

    declaration                    shift and go to state 162
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    return_statement               shift and go to state 18
    obj_declaration                shift and go to state 19
    create_obj_declaration         shift and go to state 20
    footer_declaration             shift and go to state 21
    for_loop                       shift and go to state 22
    foreach_loop                   shift and go to state 23
    switch_statement               shift and go to state 24
    exit_statement                 shift and go to state 25
    var_declaration2               shift and go to state 29
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 86

    (62) iteration_stmt -> do COLON . declaration endwhile SEMICOLON
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . return_statement
    (19) declaration -> . obj_declaration
    (20) declaration -> . create_obj_declaration
    (21) declaration -> . footer_declaration
    (22) declaration -> . for_loop
    (23) declaration -> . foreach_loop
    (24) declaration -> . switch_statement
    (25) declaration -> . exit_statement
    (26) declaration -> . empty
    (29) header_declaration -> . include CADENA SEMICOLON
    (39) var_declaration -> . var_declaration2 SEMICOLON
    (30) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (31) print_declaration -> . print var_declaration2 SEMICOLON
    (32) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (33) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (34) print_declaration -> . print data_type SEMICOLON
    (35) echo_declaration -> . echo var_declaration2 SEMICOLON
    (36) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (37) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (38) echo_declaration -> . echo data_type SEMICOLON
    (59) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (60) iteration_stmt -> . while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON
    (61) iteration_stmt -> . do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON
    (62) iteration_stmt -> . do COLON declaration endwhile SEMICOLON
    (103) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (108) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK
    (109) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK
    (110) fun_call -> . ID LPAREN params RPAREN
    (111) return_statement -> . return expression SEMICOLON
    (112) return_statement -> . return params SEMICOLON
    (113) return_statement -> . return SEMICOLON
    (114) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (115) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (121) for_loop -> . for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK
    (122) for_loop -> . for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON
    (127) foreach_loop -> . foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK
    (128) foreach_loop -> . foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON
    (129) switch_statement -> . switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK
    (130) switch_statement -> . switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON
    (126) exit_statement -> . exit LPAREN expression RPAREN SEMICOLON
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 26
    include         shift and go to state 27
    const           shift and go to state 30
    print           shift and go to state 32
    echo            shift and go to state 33
    while           shift and go to state 34
    do              shift and go to state 35
    if              shift and go to state 36
    function        shift and go to state 37
    ID              shift and go to state 31
    return          shift and go to state 38
    class           shift and go to state 39
    new             shift and go to state 40
    CLOSE_TAG       shift and go to state 41
    for             shift and go to state 42
    foreach         shift and go to state 43
    switch          shift and go to state 44
    exit            shift and go to state 45
    VARIABLE        shift and go to state 46
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69
    CADENA          shift and go to state 28

    declaration                    shift and go to state 163
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    return_statement               shift and go to state 18
    obj_declaration                shift and go to state 19
    create_obj_declaration         shift and go to state 20
    footer_declaration             shift and go to state 21
    for_loop                       shift and go to state 22
    foreach_loop                   shift and go to state 23
    switch_statement               shift and go to state 24
    exit_statement                 shift and go to state 25
    var_declaration2               shift and go to state 29
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 87

    (103) if_statement -> if LPAREN . expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (63) expression -> . additive_expression
    (64) expression -> . additive_expression logical_op additive_expression
    (65) expression -> . additive_expression comp_op additive_expression
    (66) expression -> . additive_expression comp_op additive_expression logical_op additive_expression comp_op additive_expression
    (67) expression -> . additive_expression bits_op additive_expression
    (68) additive_expression -> . term
    (69) additive_expression -> . term math_op term
    (70) term -> . MINUS term
    (71) term -> . factor
    (72) term -> . factor increment_decrement_op
    (73) term -> . increment_decrement_op factor
    (74) factor -> . NUMBER
    (75) factor -> . VARIABLE
    (76) factor -> . LPAREN expression RPAREN
    (77) increment_decrement_op -> . PLUSPLUS
    (78) increment_decrement_op -> . MINUSMINUS

    MINUS           shift and go to state 98
    NUMBER          shift and go to state 160
    VARIABLE        shift and go to state 161
    LPAREN          shift and go to state 103
    PLUSPLUS        shift and go to state 104
    MINUSMINUS      shift and go to state 105

    expression                     shift and go to state 164
    additive_expression            shift and go to state 92
    term                           shift and go to state 94
    factor                         shift and go to state 99
    increment_decrement_op         shift and go to state 100

state 88

    (108) fun_declaration -> function ID . LPAREN params RPAREN LBLOCK declaration_list RBLOCK
    (109) fun_declaration -> function ID . LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK

    LPAREN          shift and go to state 165


state 89

    (111) return_statement -> return expression . SEMICOLON

    SEMICOLON       shift and go to state 166


state 90

    (113) return_statement -> return SEMICOLON .

    COMMENT         reduce using rule 113 (return_statement -> return SEMICOLON .)
    COMMENT_HASHTAG reduce using rule 113 (return_statement -> return SEMICOLON .)
    COMMENT_MULTI   reduce using rule 113 (return_statement -> return SEMICOLON .)
    empty           reduce using rule 113 (return_statement -> return SEMICOLON .)
    include         reduce using rule 113 (return_statement -> return SEMICOLON .)
    const           reduce using rule 113 (return_statement -> return SEMICOLON .)
    print           reduce using rule 113 (return_statement -> return SEMICOLON .)
    echo            reduce using rule 113 (return_statement -> return SEMICOLON .)
    while           reduce using rule 113 (return_statement -> return SEMICOLON .)
    do              reduce using rule 113 (return_statement -> return SEMICOLON .)
    if              reduce using rule 113 (return_statement -> return SEMICOLON .)
    function        reduce using rule 113 (return_statement -> return SEMICOLON .)
    ID              reduce using rule 113 (return_statement -> return SEMICOLON .)
    return          reduce using rule 113 (return_statement -> return SEMICOLON .)
    class           reduce using rule 113 (return_statement -> return SEMICOLON .)
    new             reduce using rule 113 (return_statement -> return SEMICOLON .)
    CLOSE_TAG       reduce using rule 113 (return_statement -> return SEMICOLON .)
    for             reduce using rule 113 (return_statement -> return SEMICOLON .)
    foreach         reduce using rule 113 (return_statement -> return SEMICOLON .)
    switch          reduce using rule 113 (return_statement -> return SEMICOLON .)
    exit            reduce using rule 113 (return_statement -> return SEMICOLON .)
    VARIABLE        reduce using rule 113 (return_statement -> return SEMICOLON .)
    array           reduce using rule 113 (return_statement -> return SEMICOLON .)
    pow             reduce using rule 113 (return_statement -> return SEMICOLON .)
    POW             reduce using rule 113 (return_statement -> return SEMICOLON .)
    abs             reduce using rule 113 (return_statement -> return SEMICOLON .)
    cos             reduce using rule 113 (return_statement -> return SEMICOLON .)
    deg2rad         reduce using rule 113 (return_statement -> return SEMICOLON .)
    rad2deg         reduce using rule 113 (return_statement -> return SEMICOLON .)
    die             reduce using rule 113 (return_statement -> return SEMICOLON .)
    exp             reduce using rule 113 (return_statement -> return SEMICOLON .)
    floor           reduce using rule 113 (return_statement -> return SEMICOLON .)
    isset           reduce using rule 113 (return_statement -> return SEMICOLON .)
    list            reduce using rule 113 (return_statement -> return SEMICOLON .)
    log             reduce using rule 113 (return_statement -> return SEMICOLON .)
    log10           reduce using rule 113 (return_statement -> return SEMICOLON .)
    max             reduce using rule 113 (return_statement -> return SEMICOLON .)
    min             reduce using rule 113 (return_statement -> return SEMICOLON .)
    rand            reduce using rule 113 (return_statement -> return SEMICOLON .)
    round           reduce using rule 113 (return_statement -> return SEMICOLON .)
    sin             reduce using rule 113 (return_statement -> return SEMICOLON .)
    sqrt            reduce using rule 113 (return_statement -> return SEMICOLON .)
    unset           reduce using rule 113 (return_statement -> return SEMICOLON .)
    CADENA          reduce using rule 113 (return_statement -> return SEMICOLON .)
    $end            reduce using rule 113 (return_statement -> return SEMICOLON .)
    RBLOCK          reduce using rule 113 (return_statement -> return SEMICOLON .)
    endwhile        reduce using rule 113 (return_statement -> return SEMICOLON .)
    endfor          reduce using rule 113 (return_statement -> return SEMICOLON .)
    endforeach      reduce using rule 113 (return_statement -> return SEMICOLON .)
    endswitch       reduce using rule 113 (return_statement -> return SEMICOLON .)
    break           reduce using rule 113 (return_statement -> return SEMICOLON .)
    default         reduce using rule 113 (return_statement -> return SEMICOLON .)
    case            reduce using rule 113 (return_statement -> return SEMICOLON .)


state 91

    (112) return_statement -> return params . SEMICOLON
    (117) params -> params . COMMA single_param

    SEMICOLON       shift and go to state 167
    COMMA           shift and go to state 168


state 92

    (63) expression -> additive_expression .
    (64) expression -> additive_expression . logical_op additive_expression
    (65) expression -> additive_expression . comp_op additive_expression
    (66) expression -> additive_expression . comp_op additive_expression logical_op additive_expression comp_op additive_expression
    (67) expression -> additive_expression . bits_op additive_expression
    (97) logical_op -> . BOOL_OR
    (98) logical_op -> . BOOL_AND
    (99) logical_op -> . NOT
    (100) logical_op -> . or
    (101) logical_op -> . and
    (102) logical_op -> . xor
    (87) comp_op -> . LESS
    (88) comp_op -> . LESSEQUAL
    (89) comp_op -> . GREATER
    (90) comp_op -> . GREATEREQUAL
    (91) comp_op -> . DEQUAL
    (92) comp_op -> . DISTINT
    (93) comp_op -> . DIVEQUAL
    (94) comp_op -> . ISEQUAL
    (95) comp_op -> . ISIDENTICAL
    (96) comp_op -> . ISNOTIDENTICAL
    (166) bits_op -> . AMPERSANT
    (167) bits_op -> . SR
    (168) bits_op -> . SL

    SEMICOLON       reduce using rule 63 (expression -> additive_expression .)
    RPAREN          reduce using rule 63 (expression -> additive_expression .)
    as              reduce using rule 63 (expression -> additive_expression .)
    COMMA           reduce using rule 63 (expression -> additive_expression .)
    RBRACKET        reduce using rule 63 (expression -> additive_expression .)
    RBLOCK          reduce using rule 63 (expression -> additive_expression .)
    COLON           reduce using rule 63 (expression -> additive_expression .)
    BOOL_OR         shift and go to state 172
    BOOL_AND        shift and go to state 173
    NOT             shift and go to state 174
    or              shift and go to state 175
    and             shift and go to state 176
    xor             shift and go to state 177
    LESS            shift and go to state 178
    LESSEQUAL       shift and go to state 179
    GREATER         shift and go to state 180
    GREATEREQUAL    shift and go to state 181
    DEQUAL          shift and go to state 182
    DISTINT         shift and go to state 183
    DIVEQUAL        shift and go to state 184
    ISEQUAL         shift and go to state 185
    ISIDENTICAL     shift and go to state 186
    ISNOTIDENTICAL  shift and go to state 187
    AMPERSANT       shift and go to state 188
    SR              shift and go to state 189
    SL              shift and go to state 190

    logical_op                     shift and go to state 169
    comp_op                        shift and go to state 170
    bits_op                        shift and go to state 171

state 93

    (116) params -> single_param .

    SEMICOLON       reduce using rule 116 (params -> single_param .)
    COMMA           reduce using rule 116 (params -> single_param .)
    RPAREN          reduce using rule 116 (params -> single_param .)
    RBRACKET        reduce using rule 116 (params -> single_param .)
    RBLOCK          reduce using rule 116 (params -> single_param .)


state 94

    (68) additive_expression -> term .
    (69) additive_expression -> term . math_op term
    (79) math_op -> . PLUS
    (80) math_op -> . MINUS
    (81) math_op -> . TIMES
    (82) math_op -> . DIVIDE
    (83) math_op -> . MULEQUAL
    (84) math_op -> . PLUSEQUAL
    (85) math_op -> . MINUSEQUAL
    (86) math_op -> . MOD

    BOOL_OR         reduce using rule 68 (additive_expression -> term .)
    BOOL_AND        reduce using rule 68 (additive_expression -> term .)
    NOT             reduce using rule 68 (additive_expression -> term .)
    or              reduce using rule 68 (additive_expression -> term .)
    and             reduce using rule 68 (additive_expression -> term .)
    xor             reduce using rule 68 (additive_expression -> term .)
    LESS            reduce using rule 68 (additive_expression -> term .)
    LESSEQUAL       reduce using rule 68 (additive_expression -> term .)
    GREATER         reduce using rule 68 (additive_expression -> term .)
    GREATEREQUAL    reduce using rule 68 (additive_expression -> term .)
    DEQUAL          reduce using rule 68 (additive_expression -> term .)
    DISTINT         reduce using rule 68 (additive_expression -> term .)
    DIVEQUAL        reduce using rule 68 (additive_expression -> term .)
    ISEQUAL         reduce using rule 68 (additive_expression -> term .)
    ISIDENTICAL     reduce using rule 68 (additive_expression -> term .)
    ISNOTIDENTICAL  reduce using rule 68 (additive_expression -> term .)
    AMPERSANT       reduce using rule 68 (additive_expression -> term .)
    SR              reduce using rule 68 (additive_expression -> term .)
    SL              reduce using rule 68 (additive_expression -> term .)
    SEMICOLON       reduce using rule 68 (additive_expression -> term .)
    RPAREN          reduce using rule 68 (additive_expression -> term .)
    as              reduce using rule 68 (additive_expression -> term .)
    COMMA           reduce using rule 68 (additive_expression -> term .)
    RBRACKET        reduce using rule 68 (additive_expression -> term .)
    RBLOCK          reduce using rule 68 (additive_expression -> term .)
    COLON           reduce using rule 68 (additive_expression -> term .)
    PLUS            shift and go to state 192
    MINUS           shift and go to state 193
    TIMES           shift and go to state 194
    DIVIDE          shift and go to state 195
    MULEQUAL        shift and go to state 196
    PLUSEQUAL       shift and go to state 197
    MINUSEQUAL      shift and go to state 198
    MOD             shift and go to state 199

    math_op                        shift and go to state 191

state 95

    (118) single_param -> var_declaration2 .

    SEMICOLON       reduce using rule 118 (single_param -> var_declaration2 .)
    COMMA           reduce using rule 118 (single_param -> var_declaration2 .)
    RPAREN          reduce using rule 118 (single_param -> var_declaration2 .)
    RBRACKET        reduce using rule 118 (single_param -> var_declaration2 .)
    RBLOCK          reduce using rule 118 (single_param -> var_declaration2 .)


state 96

    (119) single_param -> data_type .

    SEMICOLON       reduce using rule 119 (single_param -> data_type .)
    COMMA           reduce using rule 119 (single_param -> data_type .)
    RPAREN          reduce using rule 119 (single_param -> data_type .)
    RBRACKET        reduce using rule 119 (single_param -> data_type .)
    RBLOCK          reduce using rule 119 (single_param -> data_type .)


state 97

    (120) single_param -> empty_function .

    SEMICOLON       reduce using rule 120 (single_param -> empty_function .)
    COMMA           reduce using rule 120 (single_param -> empty_function .)
    RPAREN          reduce using rule 120 (single_param -> empty_function .)
    RBRACKET        reduce using rule 120 (single_param -> empty_function .)
    RBLOCK          reduce using rule 120 (single_param -> empty_function .)


state 98

    (70) term -> MINUS . term
    (70) term -> . MINUS term
    (71) term -> . factor
    (72) term -> . factor increment_decrement_op
    (73) term -> . increment_decrement_op factor
    (74) factor -> . NUMBER
    (75) factor -> . VARIABLE
    (76) factor -> . LPAREN expression RPAREN
    (77) increment_decrement_op -> . PLUSPLUS
    (78) increment_decrement_op -> . MINUSMINUS

    MINUS           shift and go to state 98
    NUMBER          shift and go to state 160
    VARIABLE        shift and go to state 161
    LPAREN          shift and go to state 103
    PLUSPLUS        shift and go to state 104
    MINUSMINUS      shift and go to state 105

    term                           shift and go to state 200
    factor                         shift and go to state 99
    increment_decrement_op         shift and go to state 100

state 99

    (71) term -> factor .
    (72) term -> factor . increment_decrement_op
    (77) increment_decrement_op -> . PLUSPLUS
    (78) increment_decrement_op -> . MINUSMINUS

    PLUS            reduce using rule 71 (term -> factor .)
    MINUS           reduce using rule 71 (term -> factor .)
    TIMES           reduce using rule 71 (term -> factor .)
    DIVIDE          reduce using rule 71 (term -> factor .)
    MULEQUAL        reduce using rule 71 (term -> factor .)
    PLUSEQUAL       reduce using rule 71 (term -> factor .)
    MINUSEQUAL      reduce using rule 71 (term -> factor .)
    MOD             reduce using rule 71 (term -> factor .)
    BOOL_OR         reduce using rule 71 (term -> factor .)
    BOOL_AND        reduce using rule 71 (term -> factor .)
    NOT             reduce using rule 71 (term -> factor .)
    or              reduce using rule 71 (term -> factor .)
    and             reduce using rule 71 (term -> factor .)
    xor             reduce using rule 71 (term -> factor .)
    LESS            reduce using rule 71 (term -> factor .)
    LESSEQUAL       reduce using rule 71 (term -> factor .)
    GREATER         reduce using rule 71 (term -> factor .)
    GREATEREQUAL    reduce using rule 71 (term -> factor .)
    DEQUAL          reduce using rule 71 (term -> factor .)
    DISTINT         reduce using rule 71 (term -> factor .)
    DIVEQUAL        reduce using rule 71 (term -> factor .)
    ISEQUAL         reduce using rule 71 (term -> factor .)
    ISIDENTICAL     reduce using rule 71 (term -> factor .)
    ISNOTIDENTICAL  reduce using rule 71 (term -> factor .)
    AMPERSANT       reduce using rule 71 (term -> factor .)
    SR              reduce using rule 71 (term -> factor .)
    SL              reduce using rule 71 (term -> factor .)
    SEMICOLON       reduce using rule 71 (term -> factor .)
    RPAREN          reduce using rule 71 (term -> factor .)
    as              reduce using rule 71 (term -> factor .)
    COMMA           reduce using rule 71 (term -> factor .)
    RBRACKET        reduce using rule 71 (term -> factor .)
    RBLOCK          reduce using rule 71 (term -> factor .)
    COLON           reduce using rule 71 (term -> factor .)
    PLUSPLUS        shift and go to state 104
    MINUSMINUS      shift and go to state 105

    increment_decrement_op         shift and go to state 201

state 100

    (73) term -> increment_decrement_op . factor
    (74) factor -> . NUMBER
    (75) factor -> . VARIABLE
    (76) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 160
    VARIABLE        shift and go to state 161
    LPAREN          shift and go to state 103

    factor                         shift and go to state 202

state 101

    (40) var_declaration2 -> VARIABLE .
    (41) var_declaration2 -> VARIABLE . EQUAL NUMBER
    (42) var_declaration2 -> VARIABLE . EQUAL VARIABLE
    (43) var_declaration2 -> VARIABLE . EQUAL CADENA
    (44) var_declaration2 -> VARIABLE . EQUAL Built_In_Declaration
    (45) var_declaration2 -> VARIABLE . EQUAL expression
    (46) var_declaration2 -> VARIABLE . assignation VARIABLE
    (47) var_declaration2 -> VARIABLE . assignation NUMBER
    (50) var_declaration2 -> VARIABLE . EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> VARIABLE . assignment_tail
    (52) var_declaration2 -> VARIABLE . EQUAL assignment_tail
    (75) factor -> VARIABLE .
    (162) Concatenar_Cadenas_declaration -> VARIABLE . DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> VARIABLE . DOT CADENA
    (169) assignation -> . ASSIGN
    (170) assignation -> . SREQUAL
    (171) assignation -> . SLEQUAL
    (172) assignation -> . XOREQUAL
    (173) assignation -> . ANDEQUAL
    (53) assignment_tail -> . COMMA var_declaration2
    (54) assignment_tail -> . LBRACKET params RBRACKET
    (55) assignment_tail -> . LBLOCK params RBLOCK
    (56) assignment_tail -> . VARIABLE LBRACKET expression COMMA params
    (57) assignment_tail -> . VARIABLE LBRACKET params RBRACKET
    (58) assignment_tail -> . VARIABLE LBLOCK params RBLOCK

  ! reduce/reduce conflict for SEMICOLON resolved using rule 40 (var_declaration2 -> VARIABLE .)
  ! reduce/reduce conflict for COMMA resolved using rule 40 (var_declaration2 -> VARIABLE .)
  ! shift/reduce conflict for COMMA resolved as shift
    SEMICOLON       reduce using rule 40 (var_declaration2 -> VARIABLE .)
    RBRACKET        reduce using rule 40 (var_declaration2 -> VARIABLE .)
    EQUAL           shift and go to state 113
    PLUSPLUS        reduce using rule 75 (factor -> VARIABLE .)
    MINUSMINUS      reduce using rule 75 (factor -> VARIABLE .)
    PLUS            reduce using rule 75 (factor -> VARIABLE .)
    MINUS           reduce using rule 75 (factor -> VARIABLE .)
    TIMES           reduce using rule 75 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 75 (factor -> VARIABLE .)
    MULEQUAL        reduce using rule 75 (factor -> VARIABLE .)
    PLUSEQUAL       reduce using rule 75 (factor -> VARIABLE .)
    MINUSEQUAL      reduce using rule 75 (factor -> VARIABLE .)
    MOD             reduce using rule 75 (factor -> VARIABLE .)
    BOOL_OR         reduce using rule 75 (factor -> VARIABLE .)
    BOOL_AND        reduce using rule 75 (factor -> VARIABLE .)
    NOT             reduce using rule 75 (factor -> VARIABLE .)
    or              reduce using rule 75 (factor -> VARIABLE .)
    and             reduce using rule 75 (factor -> VARIABLE .)
    xor             reduce using rule 75 (factor -> VARIABLE .)
    LESS            reduce using rule 75 (factor -> VARIABLE .)
    LESSEQUAL       reduce using rule 75 (factor -> VARIABLE .)
    GREATER         reduce using rule 75 (factor -> VARIABLE .)
    GREATEREQUAL    reduce using rule 75 (factor -> VARIABLE .)
    DEQUAL          reduce using rule 75 (factor -> VARIABLE .)
    DISTINT         reduce using rule 75 (factor -> VARIABLE .)
    DIVEQUAL        reduce using rule 75 (factor -> VARIABLE .)
    ISEQUAL         reduce using rule 75 (factor -> VARIABLE .)
    ISIDENTICAL     reduce using rule 75 (factor -> VARIABLE .)
    ISNOTIDENTICAL  reduce using rule 75 (factor -> VARIABLE .)
    AMPERSANT       reduce using rule 75 (factor -> VARIABLE .)
    SR              reduce using rule 75 (factor -> VARIABLE .)
    SL              reduce using rule 75 (factor -> VARIABLE .)
    DOT             shift and go to state 116
    ASSIGN          shift and go to state 117
    SREQUAL         shift and go to state 118
    SLEQUAL         shift and go to state 119
    XOREQUAL        shift and go to state 120
    ANDEQUAL        shift and go to state 121
    COMMA           shift and go to state 122
    LBRACKET        shift and go to state 123
    LBLOCK          shift and go to state 124
    VARIABLE        shift and go to state 112

  ! COMMA           [ reduce using rule 40 (var_declaration2 -> VARIABLE .) ]
  ! SEMICOLON       [ reduce using rule 75 (factor -> VARIABLE .) ]
  ! COMMA           [ reduce using rule 75 (factor -> VARIABLE .) ]

    assignation                    shift and go to state 114
    assignment_tail                shift and go to state 115

state 102

    (27) data_type -> NUMBER .
    (74) factor -> NUMBER .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 27 (data_type -> NUMBER .)
  ! reduce/reduce conflict for COMMA resolved using rule 27 (data_type -> NUMBER .)
    SEMICOLON       reduce using rule 27 (data_type -> NUMBER .)
    COMMA           reduce using rule 27 (data_type -> NUMBER .)
    RBRACKET        reduce using rule 27 (data_type -> NUMBER .)
    PLUSPLUS        reduce using rule 74 (factor -> NUMBER .)
    MINUSMINUS      reduce using rule 74 (factor -> NUMBER .)
    PLUS            reduce using rule 74 (factor -> NUMBER .)
    MINUS           reduce using rule 74 (factor -> NUMBER .)
    TIMES           reduce using rule 74 (factor -> NUMBER .)
    DIVIDE          reduce using rule 74 (factor -> NUMBER .)
    MULEQUAL        reduce using rule 74 (factor -> NUMBER .)
    PLUSEQUAL       reduce using rule 74 (factor -> NUMBER .)
    MINUSEQUAL      reduce using rule 74 (factor -> NUMBER .)
    MOD             reduce using rule 74 (factor -> NUMBER .)
    BOOL_OR         reduce using rule 74 (factor -> NUMBER .)
    BOOL_AND        reduce using rule 74 (factor -> NUMBER .)
    NOT             reduce using rule 74 (factor -> NUMBER .)
    or              reduce using rule 74 (factor -> NUMBER .)
    and             reduce using rule 74 (factor -> NUMBER .)
    xor             reduce using rule 74 (factor -> NUMBER .)
    LESS            reduce using rule 74 (factor -> NUMBER .)
    LESSEQUAL       reduce using rule 74 (factor -> NUMBER .)
    GREATER         reduce using rule 74 (factor -> NUMBER .)
    GREATEREQUAL    reduce using rule 74 (factor -> NUMBER .)
    DEQUAL          reduce using rule 74 (factor -> NUMBER .)
    DISTINT         reduce using rule 74 (factor -> NUMBER .)
    DIVEQUAL        reduce using rule 74 (factor -> NUMBER .)
    ISEQUAL         reduce using rule 74 (factor -> NUMBER .)
    ISIDENTICAL     reduce using rule 74 (factor -> NUMBER .)
    ISNOTIDENTICAL  reduce using rule 74 (factor -> NUMBER .)
    AMPERSANT       reduce using rule 74 (factor -> NUMBER .)
    SR              reduce using rule 74 (factor -> NUMBER .)
    SL              reduce using rule 74 (factor -> NUMBER .)

  ! SEMICOLON       [ reduce using rule 74 (factor -> NUMBER .) ]
  ! COMMA           [ reduce using rule 74 (factor -> NUMBER .) ]


state 103

    (76) factor -> LPAREN . expression RPAREN
    (63) expression -> . additive_expression
    (64) expression -> . additive_expression logical_op additive_expression
    (65) expression -> . additive_expression comp_op additive_expression
    (66) expression -> . additive_expression comp_op additive_expression logical_op additive_expression comp_op additive_expression
    (67) expression -> . additive_expression bits_op additive_expression
    (68) additive_expression -> . term
    (69) additive_expression -> . term math_op term
    (70) term -> . MINUS term
    (71) term -> . factor
    (72) term -> . factor increment_decrement_op
    (73) term -> . increment_decrement_op factor
    (74) factor -> . NUMBER
    (75) factor -> . VARIABLE
    (76) factor -> . LPAREN expression RPAREN
    (77) increment_decrement_op -> . PLUSPLUS
    (78) increment_decrement_op -> . MINUSMINUS

    MINUS           shift and go to state 98
    NUMBER          shift and go to state 160
    VARIABLE        shift and go to state 161
    LPAREN          shift and go to state 103
    PLUSPLUS        shift and go to state 104
    MINUSMINUS      shift and go to state 105

    expression                     shift and go to state 203
    additive_expression            shift and go to state 92
    term                           shift and go to state 94
    factor                         shift and go to state 99
    increment_decrement_op         shift and go to state 100

state 104

    (77) increment_decrement_op -> PLUSPLUS .

    NUMBER          reduce using rule 77 (increment_decrement_op -> PLUSPLUS .)
    VARIABLE        reduce using rule 77 (increment_decrement_op -> PLUSPLUS .)
    LPAREN          reduce using rule 77 (increment_decrement_op -> PLUSPLUS .)
    PLUS            reduce using rule 77 (increment_decrement_op -> PLUSPLUS .)
    MINUS           reduce using rule 77 (increment_decrement_op -> PLUSPLUS .)
    TIMES           reduce using rule 77 (increment_decrement_op -> PLUSPLUS .)
    DIVIDE          reduce using rule 77 (increment_decrement_op -> PLUSPLUS .)
    MULEQUAL        reduce using rule 77 (increment_decrement_op -> PLUSPLUS .)
    PLUSEQUAL       reduce using rule 77 (increment_decrement_op -> PLUSPLUS .)
    MINUSEQUAL      reduce using rule 77 (increment_decrement_op -> PLUSPLUS .)
    MOD             reduce using rule 77 (increment_decrement_op -> PLUSPLUS .)
    BOOL_OR         reduce using rule 77 (increment_decrement_op -> PLUSPLUS .)
    BOOL_AND        reduce using rule 77 (increment_decrement_op -> PLUSPLUS .)
    NOT             reduce using rule 77 (increment_decrement_op -> PLUSPLUS .)
    or              reduce using rule 77 (increment_decrement_op -> PLUSPLUS .)
    and             reduce using rule 77 (increment_decrement_op -> PLUSPLUS .)
    xor             reduce using rule 77 (increment_decrement_op -> PLUSPLUS .)
    LESS            reduce using rule 77 (increment_decrement_op -> PLUSPLUS .)
    LESSEQUAL       reduce using rule 77 (increment_decrement_op -> PLUSPLUS .)
    GREATER         reduce using rule 77 (increment_decrement_op -> PLUSPLUS .)
    GREATEREQUAL    reduce using rule 77 (increment_decrement_op -> PLUSPLUS .)
    DEQUAL          reduce using rule 77 (increment_decrement_op -> PLUSPLUS .)
    DISTINT         reduce using rule 77 (increment_decrement_op -> PLUSPLUS .)
    DIVEQUAL        reduce using rule 77 (increment_decrement_op -> PLUSPLUS .)
    ISEQUAL         reduce using rule 77 (increment_decrement_op -> PLUSPLUS .)
    ISIDENTICAL     reduce using rule 77 (increment_decrement_op -> PLUSPLUS .)
    ISNOTIDENTICAL  reduce using rule 77 (increment_decrement_op -> PLUSPLUS .)
    AMPERSANT       reduce using rule 77 (increment_decrement_op -> PLUSPLUS .)
    SR              reduce using rule 77 (increment_decrement_op -> PLUSPLUS .)
    SL              reduce using rule 77 (increment_decrement_op -> PLUSPLUS .)
    SEMICOLON       reduce using rule 77 (increment_decrement_op -> PLUSPLUS .)
    RPAREN          reduce using rule 77 (increment_decrement_op -> PLUSPLUS .)
    as              reduce using rule 77 (increment_decrement_op -> PLUSPLUS .)
    COMMA           reduce using rule 77 (increment_decrement_op -> PLUSPLUS .)
    RBRACKET        reduce using rule 77 (increment_decrement_op -> PLUSPLUS .)
    RBLOCK          reduce using rule 77 (increment_decrement_op -> PLUSPLUS .)
    COLON           reduce using rule 77 (increment_decrement_op -> PLUSPLUS .)


state 105

    (78) increment_decrement_op -> MINUSMINUS .

    NUMBER          reduce using rule 78 (increment_decrement_op -> MINUSMINUS .)
    VARIABLE        reduce using rule 78 (increment_decrement_op -> MINUSMINUS .)
    LPAREN          reduce using rule 78 (increment_decrement_op -> MINUSMINUS .)
    PLUS            reduce using rule 78 (increment_decrement_op -> MINUSMINUS .)
    MINUS           reduce using rule 78 (increment_decrement_op -> MINUSMINUS .)
    TIMES           reduce using rule 78 (increment_decrement_op -> MINUSMINUS .)
    DIVIDE          reduce using rule 78 (increment_decrement_op -> MINUSMINUS .)
    MULEQUAL        reduce using rule 78 (increment_decrement_op -> MINUSMINUS .)
    PLUSEQUAL       reduce using rule 78 (increment_decrement_op -> MINUSMINUS .)
    MINUSEQUAL      reduce using rule 78 (increment_decrement_op -> MINUSMINUS .)
    MOD             reduce using rule 78 (increment_decrement_op -> MINUSMINUS .)
    BOOL_OR         reduce using rule 78 (increment_decrement_op -> MINUSMINUS .)
    BOOL_AND        reduce using rule 78 (increment_decrement_op -> MINUSMINUS .)
    NOT             reduce using rule 78 (increment_decrement_op -> MINUSMINUS .)
    or              reduce using rule 78 (increment_decrement_op -> MINUSMINUS .)
    and             reduce using rule 78 (increment_decrement_op -> MINUSMINUS .)
    xor             reduce using rule 78 (increment_decrement_op -> MINUSMINUS .)
    LESS            reduce using rule 78 (increment_decrement_op -> MINUSMINUS .)
    LESSEQUAL       reduce using rule 78 (increment_decrement_op -> MINUSMINUS .)
    GREATER         reduce using rule 78 (increment_decrement_op -> MINUSMINUS .)
    GREATEREQUAL    reduce using rule 78 (increment_decrement_op -> MINUSMINUS .)
    DEQUAL          reduce using rule 78 (increment_decrement_op -> MINUSMINUS .)
    DISTINT         reduce using rule 78 (increment_decrement_op -> MINUSMINUS .)
    DIVEQUAL        reduce using rule 78 (increment_decrement_op -> MINUSMINUS .)
    ISEQUAL         reduce using rule 78 (increment_decrement_op -> MINUSMINUS .)
    ISIDENTICAL     reduce using rule 78 (increment_decrement_op -> MINUSMINUS .)
    ISNOTIDENTICAL  reduce using rule 78 (increment_decrement_op -> MINUSMINUS .)
    AMPERSANT       reduce using rule 78 (increment_decrement_op -> MINUSMINUS .)
    SR              reduce using rule 78 (increment_decrement_op -> MINUSMINUS .)
    SL              reduce using rule 78 (increment_decrement_op -> MINUSMINUS .)
    SEMICOLON       reduce using rule 78 (increment_decrement_op -> MINUSMINUS .)
    RPAREN          reduce using rule 78 (increment_decrement_op -> MINUSMINUS .)
    as              reduce using rule 78 (increment_decrement_op -> MINUSMINUS .)
    COMMA           reduce using rule 78 (increment_decrement_op -> MINUSMINUS .)
    RBRACKET        reduce using rule 78 (increment_decrement_op -> MINUSMINUS .)
    RBLOCK          reduce using rule 78 (increment_decrement_op -> MINUSMINUS .)
    COLON           reduce using rule 78 (increment_decrement_op -> MINUSMINUS .)


state 106

    (114) obj_declaration -> class ID . LBLOCK declaration RBLOCK

    LBLOCK          shift and go to state 204


state 107

    (115) create_obj_declaration -> new ID . LPAREN params RPAREN

    LPAREN          shift and go to state 205


state 108

    (121) for_loop -> for LPAREN . for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK
    (122) for_loop -> for LPAREN . for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON
    (123) for_init -> . var_declaration2 SEMICOLON
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 46
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69
    CADENA          shift and go to state 28

    for_init                       shift and go to state 206
    var_declaration2               shift and go to state 207
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 109

    (127) foreach_loop -> foreach LPAREN . expression as expression RPAREN LBLOCK declaration_list RBLOCK
    (128) foreach_loop -> foreach LPAREN . expression as expression RPAREN COLON declaration_list endforeach SEMICOLON
    (63) expression -> . additive_expression
    (64) expression -> . additive_expression logical_op additive_expression
    (65) expression -> . additive_expression comp_op additive_expression
    (66) expression -> . additive_expression comp_op additive_expression logical_op additive_expression comp_op additive_expression
    (67) expression -> . additive_expression bits_op additive_expression
    (68) additive_expression -> . term
    (69) additive_expression -> . term math_op term
    (70) term -> . MINUS term
    (71) term -> . factor
    (72) term -> . factor increment_decrement_op
    (73) term -> . increment_decrement_op factor
    (74) factor -> . NUMBER
    (75) factor -> . VARIABLE
    (76) factor -> . LPAREN expression RPAREN
    (77) increment_decrement_op -> . PLUSPLUS
    (78) increment_decrement_op -> . MINUSMINUS

    MINUS           shift and go to state 98
    NUMBER          shift and go to state 160
    VARIABLE        shift and go to state 161
    LPAREN          shift and go to state 103
    PLUSPLUS        shift and go to state 104
    MINUSMINUS      shift and go to state 105

    expression                     shift and go to state 208
    additive_expression            shift and go to state 92
    term                           shift and go to state 94
    factor                         shift and go to state 99
    increment_decrement_op         shift and go to state 100

state 110

    (129) switch_statement -> switch LPAREN . expression RPAREN LBLOCK case_blocks default_block RBLOCK
    (130) switch_statement -> switch LPAREN . expression RPAREN COLON case_blocks default_block endswitch SEMICOLON
    (63) expression -> . additive_expression
    (64) expression -> . additive_expression logical_op additive_expression
    (65) expression -> . additive_expression comp_op additive_expression
    (66) expression -> . additive_expression comp_op additive_expression logical_op additive_expression comp_op additive_expression
    (67) expression -> . additive_expression bits_op additive_expression
    (68) additive_expression -> . term
    (69) additive_expression -> . term math_op term
    (70) term -> . MINUS term
    (71) term -> . factor
    (72) term -> . factor increment_decrement_op
    (73) term -> . increment_decrement_op factor
    (74) factor -> . NUMBER
    (75) factor -> . VARIABLE
    (76) factor -> . LPAREN expression RPAREN
    (77) increment_decrement_op -> . PLUSPLUS
    (78) increment_decrement_op -> . MINUSMINUS

    MINUS           shift and go to state 98
    NUMBER          shift and go to state 160
    VARIABLE        shift and go to state 161
    LPAREN          shift and go to state 103
    PLUSPLUS        shift and go to state 104
    MINUSMINUS      shift and go to state 105

    expression                     shift and go to state 209
    additive_expression            shift and go to state 92
    term                           shift and go to state 94
    factor                         shift and go to state 99
    increment_decrement_op         shift and go to state 100

state 111

    (126) exit_statement -> exit LPAREN . expression RPAREN SEMICOLON
    (63) expression -> . additive_expression
    (64) expression -> . additive_expression logical_op additive_expression
    (65) expression -> . additive_expression comp_op additive_expression
    (66) expression -> . additive_expression comp_op additive_expression logical_op additive_expression comp_op additive_expression
    (67) expression -> . additive_expression bits_op additive_expression
    (68) additive_expression -> . term
    (69) additive_expression -> . term math_op term
    (70) term -> . MINUS term
    (71) term -> . factor
    (72) term -> . factor increment_decrement_op
    (73) term -> . increment_decrement_op factor
    (74) factor -> . NUMBER
    (75) factor -> . VARIABLE
    (76) factor -> . LPAREN expression RPAREN
    (77) increment_decrement_op -> . PLUSPLUS
    (78) increment_decrement_op -> . MINUSMINUS

    MINUS           shift and go to state 98
    NUMBER          shift and go to state 160
    VARIABLE        shift and go to state 161
    LPAREN          shift and go to state 103
    PLUSPLUS        shift and go to state 104
    MINUSMINUS      shift and go to state 105

    expression                     shift and go to state 210
    additive_expression            shift and go to state 92
    term                           shift and go to state 94
    factor                         shift and go to state 99
    increment_decrement_op         shift and go to state 100

state 112

    (56) assignment_tail -> VARIABLE . LBRACKET expression COMMA params
    (57) assignment_tail -> VARIABLE . LBRACKET params RBRACKET
    (58) assignment_tail -> VARIABLE . LBLOCK params RBLOCK

    LBRACKET        shift and go to state 211
    LBLOCK          shift and go to state 212


state 113

    (41) var_declaration2 -> VARIABLE EQUAL . NUMBER
    (42) var_declaration2 -> VARIABLE EQUAL . VARIABLE
    (43) var_declaration2 -> VARIABLE EQUAL . CADENA
    (44) var_declaration2 -> VARIABLE EQUAL . Built_In_Declaration
    (45) var_declaration2 -> VARIABLE EQUAL . expression
    (50) var_declaration2 -> VARIABLE EQUAL . ID LPAREN params RPAREN
    (52) var_declaration2 -> VARIABLE EQUAL . assignment_tail
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (63) expression -> . additive_expression
    (64) expression -> . additive_expression logical_op additive_expression
    (65) expression -> . additive_expression comp_op additive_expression
    (66) expression -> . additive_expression comp_op additive_expression logical_op additive_expression comp_op additive_expression
    (67) expression -> . additive_expression bits_op additive_expression
    (53) assignment_tail -> . COMMA var_declaration2
    (54) assignment_tail -> . LBRACKET params RBRACKET
    (55) assignment_tail -> . LBLOCK params RBLOCK
    (56) assignment_tail -> . VARIABLE LBRACKET expression COMMA params
    (57) assignment_tail -> . VARIABLE LBRACKET params RBRACKET
    (58) assignment_tail -> . VARIABLE LBLOCK params RBLOCK
    (68) additive_expression -> . term
    (69) additive_expression -> . term math_op term
    (70) term -> . MINUS term
    (71) term -> . factor
    (72) term -> . factor increment_decrement_op
    (73) term -> . increment_decrement_op factor
    (74) factor -> . NUMBER
    (75) factor -> . VARIABLE
    (76) factor -> . LPAREN expression RPAREN
    (77) increment_decrement_op -> . PLUSPLUS
    (78) increment_decrement_op -> . MINUSMINUS

    NUMBER          shift and go to state 214
    VARIABLE        shift and go to state 213
    CADENA          shift and go to state 215
    ID              shift and go to state 218
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69
    COMMA           shift and go to state 122
    LBRACKET        shift and go to state 123
    LBLOCK          shift and go to state 124
    MINUS           shift and go to state 98
    LPAREN          shift and go to state 103
    PLUSPLUS        shift and go to state 104
    MINUSMINUS      shift and go to state 105

    Built_In_Declaration           shift and go to state 216
    expression                     shift and go to state 217
    assignment_tail                shift and go to state 219
    additive_expression            shift and go to state 92
    term                           shift and go to state 94
    factor                         shift and go to state 99
    increment_decrement_op         shift and go to state 100

state 114

    (46) var_declaration2 -> VARIABLE assignation . VARIABLE
    (47) var_declaration2 -> VARIABLE assignation . NUMBER

    VARIABLE        shift and go to state 220
    NUMBER          shift and go to state 221


state 115

    (51) var_declaration2 -> VARIABLE assignment_tail .

    SEMICOLON       reduce using rule 51 (var_declaration2 -> VARIABLE assignment_tail .)
    COMMA           reduce using rule 51 (var_declaration2 -> VARIABLE assignment_tail .)
    RPAREN          reduce using rule 51 (var_declaration2 -> VARIABLE assignment_tail .)
    RBRACKET        reduce using rule 51 (var_declaration2 -> VARIABLE assignment_tail .)
    RBLOCK          reduce using rule 51 (var_declaration2 -> VARIABLE assignment_tail .)


state 116

    (162) Concatenar_Cadenas_declaration -> VARIABLE DOT . VARIABLE
    (165) Concatenar_Cadenas_declaration -> VARIABLE DOT . CADENA

    VARIABLE        shift and go to state 222
    CADENA          shift and go to state 223


state 117

    (169) assignation -> ASSIGN .

    VARIABLE        reduce using rule 169 (assignation -> ASSIGN .)
    NUMBER          reduce using rule 169 (assignation -> ASSIGN .)


state 118

    (170) assignation -> SREQUAL .

    VARIABLE        reduce using rule 170 (assignation -> SREQUAL .)
    NUMBER          reduce using rule 170 (assignation -> SREQUAL .)


state 119

    (171) assignation -> SLEQUAL .

    VARIABLE        reduce using rule 171 (assignation -> SLEQUAL .)
    NUMBER          reduce using rule 171 (assignation -> SLEQUAL .)


state 120

    (172) assignation -> XOREQUAL .

    VARIABLE        reduce using rule 172 (assignation -> XOREQUAL .)
    NUMBER          reduce using rule 172 (assignation -> XOREQUAL .)


state 121

    (173) assignation -> ANDEQUAL .

    VARIABLE        reduce using rule 173 (assignation -> ANDEQUAL .)
    NUMBER          reduce using rule 173 (assignation -> ANDEQUAL .)


state 122

    (53) assignment_tail -> COMMA . var_declaration2
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 46
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69
    CADENA          shift and go to state 28

    var_declaration2               shift and go to state 224
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 123

    (54) assignment_tail -> LBRACKET . params RBRACKET
    (116) params -> . single_param
    (117) params -> . params COMMA single_param
    (118) single_param -> . var_declaration2
    (119) single_param -> . data_type
    (120) single_param -> . empty_function
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (27) data_type -> . NUMBER
    (28) data_type -> . CADENA
    (174) empty_function -> .
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 46
    NUMBER          shift and go to state 79
    CADENA          shift and go to state 80
    RBRACKET        reduce using rule 174 (empty_function -> .)
    COMMA           reduce using rule 174 (empty_function -> .)
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69

    params                         shift and go to state 225
    single_param                   shift and go to state 93
    var_declaration2               shift and go to state 95
    data_type                      shift and go to state 96
    empty_function                 shift and go to state 97
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 124

    (55) assignment_tail -> LBLOCK . params RBLOCK
    (116) params -> . single_param
    (117) params -> . params COMMA single_param
    (118) single_param -> . var_declaration2
    (119) single_param -> . data_type
    (120) single_param -> . empty_function
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (27) data_type -> . NUMBER
    (28) data_type -> . CADENA
    (174) empty_function -> .
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 46
    NUMBER          shift and go to state 79
    CADENA          shift and go to state 80
    RBLOCK          reduce using rule 174 (empty_function -> .)
    COMMA           reduce using rule 174 (empty_function -> .)
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69

    params                         shift and go to state 226
    single_param                   shift and go to state 93
    var_declaration2               shift and go to state 95
    data_type                      shift and go to state 96
    empty_function                 shift and go to state 97
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 125

    (141) Built_In_Declaration -> array LPAREN . params RPAREN
    (116) params -> . single_param
    (117) params -> . params COMMA single_param
    (118) single_param -> . var_declaration2
    (119) single_param -> . data_type
    (120) single_param -> . empty_function
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (27) data_type -> . NUMBER
    (28) data_type -> . CADENA
    (174) empty_function -> .
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 46
    NUMBER          shift and go to state 79
    CADENA          shift and go to state 80
    RPAREN          reduce using rule 174 (empty_function -> .)
    COMMA           reduce using rule 174 (empty_function -> .)
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69

    params                         shift and go to state 227
    single_param                   shift and go to state 93
    var_declaration2               shift and go to state 95
    data_type                      shift and go to state 96
    empty_function                 shift and go to state 97
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 126

    (142) Built_In_Declaration -> pow LPAREN . params RPAREN
    (116) params -> . single_param
    (117) params -> . params COMMA single_param
    (118) single_param -> . var_declaration2
    (119) single_param -> . data_type
    (120) single_param -> . empty_function
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (27) data_type -> . NUMBER
    (28) data_type -> . CADENA
    (174) empty_function -> .
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 46
    NUMBER          shift and go to state 79
    CADENA          shift and go to state 80
    RPAREN          reduce using rule 174 (empty_function -> .)
    COMMA           reduce using rule 174 (empty_function -> .)
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69

    params                         shift and go to state 228
    single_param                   shift and go to state 93
    var_declaration2               shift and go to state 95
    data_type                      shift and go to state 96
    empty_function                 shift and go to state 97
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 127

    (143) Built_In_Declaration -> POW LPAREN . params RPAREN
    (116) params -> . single_param
    (117) params -> . params COMMA single_param
    (118) single_param -> . var_declaration2
    (119) single_param -> . data_type
    (120) single_param -> . empty_function
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (27) data_type -> . NUMBER
    (28) data_type -> . CADENA
    (174) empty_function -> .
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 46
    NUMBER          shift and go to state 79
    CADENA          shift and go to state 80
    RPAREN          reduce using rule 174 (empty_function -> .)
    COMMA           reduce using rule 174 (empty_function -> .)
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69

    params                         shift and go to state 229
    single_param                   shift and go to state 93
    var_declaration2               shift and go to state 95
    data_type                      shift and go to state 96
    empty_function                 shift and go to state 97
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 128

    (144) Built_In_Declaration -> abs LPAREN . params RPAREN
    (116) params -> . single_param
    (117) params -> . params COMMA single_param
    (118) single_param -> . var_declaration2
    (119) single_param -> . data_type
    (120) single_param -> . empty_function
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (27) data_type -> . NUMBER
    (28) data_type -> . CADENA
    (174) empty_function -> .
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 46
    NUMBER          shift and go to state 79
    CADENA          shift and go to state 80
    RPAREN          reduce using rule 174 (empty_function -> .)
    COMMA           reduce using rule 174 (empty_function -> .)
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69

    params                         shift and go to state 230
    single_param                   shift and go to state 93
    var_declaration2               shift and go to state 95
    data_type                      shift and go to state 96
    empty_function                 shift and go to state 97
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 129

    (145) Built_In_Declaration -> cos LPAREN . params RPAREN
    (116) params -> . single_param
    (117) params -> . params COMMA single_param
    (118) single_param -> . var_declaration2
    (119) single_param -> . data_type
    (120) single_param -> . empty_function
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (27) data_type -> . NUMBER
    (28) data_type -> . CADENA
    (174) empty_function -> .
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 46
    NUMBER          shift and go to state 79
    CADENA          shift and go to state 80
    RPAREN          reduce using rule 174 (empty_function -> .)
    COMMA           reduce using rule 174 (empty_function -> .)
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69

    params                         shift and go to state 231
    single_param                   shift and go to state 93
    var_declaration2               shift and go to state 95
    data_type                      shift and go to state 96
    empty_function                 shift and go to state 97
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 130

    (146) Built_In_Declaration -> deg2rad LPAREN . params RPAREN
    (116) params -> . single_param
    (117) params -> . params COMMA single_param
    (118) single_param -> . var_declaration2
    (119) single_param -> . data_type
    (120) single_param -> . empty_function
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (27) data_type -> . NUMBER
    (28) data_type -> . CADENA
    (174) empty_function -> .
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 46
    NUMBER          shift and go to state 79
    CADENA          shift and go to state 80
    RPAREN          reduce using rule 174 (empty_function -> .)
    COMMA           reduce using rule 174 (empty_function -> .)
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69

    params                         shift and go to state 232
    single_param                   shift and go to state 93
    var_declaration2               shift and go to state 95
    data_type                      shift and go to state 96
    empty_function                 shift and go to state 97
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 131

    (147) Built_In_Declaration -> rad2deg LPAREN . params RPAREN
    (116) params -> . single_param
    (117) params -> . params COMMA single_param
    (118) single_param -> . var_declaration2
    (119) single_param -> . data_type
    (120) single_param -> . empty_function
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (27) data_type -> . NUMBER
    (28) data_type -> . CADENA
    (174) empty_function -> .
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 46
    NUMBER          shift and go to state 79
    CADENA          shift and go to state 80
    RPAREN          reduce using rule 174 (empty_function -> .)
    COMMA           reduce using rule 174 (empty_function -> .)
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69

    params                         shift and go to state 233
    single_param                   shift and go to state 93
    var_declaration2               shift and go to state 95
    data_type                      shift and go to state 96
    empty_function                 shift and go to state 97
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 132

    (148) Built_In_Declaration -> die LPAREN . params RPAREN
    (116) params -> . single_param
    (117) params -> . params COMMA single_param
    (118) single_param -> . var_declaration2
    (119) single_param -> . data_type
    (120) single_param -> . empty_function
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (27) data_type -> . NUMBER
    (28) data_type -> . CADENA
    (174) empty_function -> .
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 46
    NUMBER          shift and go to state 79
    CADENA          shift and go to state 80
    RPAREN          reduce using rule 174 (empty_function -> .)
    COMMA           reduce using rule 174 (empty_function -> .)
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69

    params                         shift and go to state 234
    single_param                   shift and go to state 93
    var_declaration2               shift and go to state 95
    data_type                      shift and go to state 96
    empty_function                 shift and go to state 97
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 133

    (149) Built_In_Declaration -> exp LPAREN . params RPAREN
    (116) params -> . single_param
    (117) params -> . params COMMA single_param
    (118) single_param -> . var_declaration2
    (119) single_param -> . data_type
    (120) single_param -> . empty_function
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (27) data_type -> . NUMBER
    (28) data_type -> . CADENA
    (174) empty_function -> .
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 46
    NUMBER          shift and go to state 79
    CADENA          shift and go to state 80
    RPAREN          reduce using rule 174 (empty_function -> .)
    COMMA           reduce using rule 174 (empty_function -> .)
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69

    params                         shift and go to state 235
    single_param                   shift and go to state 93
    var_declaration2               shift and go to state 95
    data_type                      shift and go to state 96
    empty_function                 shift and go to state 97
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 134

    (150) Built_In_Declaration -> floor LPAREN . params RPAREN
    (116) params -> . single_param
    (117) params -> . params COMMA single_param
    (118) single_param -> . var_declaration2
    (119) single_param -> . data_type
    (120) single_param -> . empty_function
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (27) data_type -> . NUMBER
    (28) data_type -> . CADENA
    (174) empty_function -> .
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 46
    NUMBER          shift and go to state 79
    CADENA          shift and go to state 80
    RPAREN          reduce using rule 174 (empty_function -> .)
    COMMA           reduce using rule 174 (empty_function -> .)
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69

    params                         shift and go to state 236
    single_param                   shift and go to state 93
    var_declaration2               shift and go to state 95
    data_type                      shift and go to state 96
    empty_function                 shift and go to state 97
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 135

    (151) Built_In_Declaration -> isset LPAREN . params RPAREN
    (116) params -> . single_param
    (117) params -> . params COMMA single_param
    (118) single_param -> . var_declaration2
    (119) single_param -> . data_type
    (120) single_param -> . empty_function
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (27) data_type -> . NUMBER
    (28) data_type -> . CADENA
    (174) empty_function -> .
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 46
    NUMBER          shift and go to state 79
    CADENA          shift and go to state 80
    RPAREN          reduce using rule 174 (empty_function -> .)
    COMMA           reduce using rule 174 (empty_function -> .)
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69

    params                         shift and go to state 237
    single_param                   shift and go to state 93
    var_declaration2               shift and go to state 95
    data_type                      shift and go to state 96
    empty_function                 shift and go to state 97
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 136

    (152) Built_In_Declaration -> list LPAREN . params RPAREN
    (116) params -> . single_param
    (117) params -> . params COMMA single_param
    (118) single_param -> . var_declaration2
    (119) single_param -> . data_type
    (120) single_param -> . empty_function
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (27) data_type -> . NUMBER
    (28) data_type -> . CADENA
    (174) empty_function -> .
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 46
    NUMBER          shift and go to state 79
    CADENA          shift and go to state 80
    RPAREN          reduce using rule 174 (empty_function -> .)
    COMMA           reduce using rule 174 (empty_function -> .)
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69

    params                         shift and go to state 238
    single_param                   shift and go to state 93
    var_declaration2               shift and go to state 95
    data_type                      shift and go to state 96
    empty_function                 shift and go to state 97
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 137

    (153) Built_In_Declaration -> log LPAREN . params RPAREN
    (116) params -> . single_param
    (117) params -> . params COMMA single_param
    (118) single_param -> . var_declaration2
    (119) single_param -> . data_type
    (120) single_param -> . empty_function
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (27) data_type -> . NUMBER
    (28) data_type -> . CADENA
    (174) empty_function -> .
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 46
    NUMBER          shift and go to state 79
    CADENA          shift and go to state 80
    RPAREN          reduce using rule 174 (empty_function -> .)
    COMMA           reduce using rule 174 (empty_function -> .)
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69

    params                         shift and go to state 239
    single_param                   shift and go to state 93
    var_declaration2               shift and go to state 95
    data_type                      shift and go to state 96
    empty_function                 shift and go to state 97
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 138

    (154) Built_In_Declaration -> log10 LPAREN . params RPAREN
    (116) params -> . single_param
    (117) params -> . params COMMA single_param
    (118) single_param -> . var_declaration2
    (119) single_param -> . data_type
    (120) single_param -> . empty_function
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (27) data_type -> . NUMBER
    (28) data_type -> . CADENA
    (174) empty_function -> .
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 46
    NUMBER          shift and go to state 79
    CADENA          shift and go to state 80
    RPAREN          reduce using rule 174 (empty_function -> .)
    COMMA           reduce using rule 174 (empty_function -> .)
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69

    params                         shift and go to state 240
    single_param                   shift and go to state 93
    var_declaration2               shift and go to state 95
    data_type                      shift and go to state 96
    empty_function                 shift and go to state 97
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 139

    (155) Built_In_Declaration -> max LPAREN . params RPAREN
    (116) params -> . single_param
    (117) params -> . params COMMA single_param
    (118) single_param -> . var_declaration2
    (119) single_param -> . data_type
    (120) single_param -> . empty_function
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (27) data_type -> . NUMBER
    (28) data_type -> . CADENA
    (174) empty_function -> .
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 46
    NUMBER          shift and go to state 79
    CADENA          shift and go to state 80
    RPAREN          reduce using rule 174 (empty_function -> .)
    COMMA           reduce using rule 174 (empty_function -> .)
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69

    params                         shift and go to state 241
    single_param                   shift and go to state 93
    var_declaration2               shift and go to state 95
    data_type                      shift and go to state 96
    empty_function                 shift and go to state 97
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 140

    (156) Built_In_Declaration -> min LPAREN . params RPAREN
    (116) params -> . single_param
    (117) params -> . params COMMA single_param
    (118) single_param -> . var_declaration2
    (119) single_param -> . data_type
    (120) single_param -> . empty_function
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (27) data_type -> . NUMBER
    (28) data_type -> . CADENA
    (174) empty_function -> .
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 46
    NUMBER          shift and go to state 79
    CADENA          shift and go to state 80
    RPAREN          reduce using rule 174 (empty_function -> .)
    COMMA           reduce using rule 174 (empty_function -> .)
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69

    params                         shift and go to state 242
    single_param                   shift and go to state 93
    var_declaration2               shift and go to state 95
    data_type                      shift and go to state 96
    empty_function                 shift and go to state 97
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 141

    (157) Built_In_Declaration -> rand LPAREN . params RPAREN
    (116) params -> . single_param
    (117) params -> . params COMMA single_param
    (118) single_param -> . var_declaration2
    (119) single_param -> . data_type
    (120) single_param -> . empty_function
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (27) data_type -> . NUMBER
    (28) data_type -> . CADENA
    (174) empty_function -> .
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 46
    NUMBER          shift and go to state 79
    CADENA          shift and go to state 80
    RPAREN          reduce using rule 174 (empty_function -> .)
    COMMA           reduce using rule 174 (empty_function -> .)
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69

    params                         shift and go to state 243
    single_param                   shift and go to state 93
    var_declaration2               shift and go to state 95
    data_type                      shift and go to state 96
    empty_function                 shift and go to state 97
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 142

    (158) Built_In_Declaration -> round LPAREN . params RPAREN
    (116) params -> . single_param
    (117) params -> . params COMMA single_param
    (118) single_param -> . var_declaration2
    (119) single_param -> . data_type
    (120) single_param -> . empty_function
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (27) data_type -> . NUMBER
    (28) data_type -> . CADENA
    (174) empty_function -> .
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 46
    NUMBER          shift and go to state 79
    CADENA          shift and go to state 80
    RPAREN          reduce using rule 174 (empty_function -> .)
    COMMA           reduce using rule 174 (empty_function -> .)
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69

    params                         shift and go to state 244
    single_param                   shift and go to state 93
    var_declaration2               shift and go to state 95
    data_type                      shift and go to state 96
    empty_function                 shift and go to state 97
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 143

    (159) Built_In_Declaration -> sin LPAREN . params RPAREN
    (116) params -> . single_param
    (117) params -> . params COMMA single_param
    (118) single_param -> . var_declaration2
    (119) single_param -> . data_type
    (120) single_param -> . empty_function
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (27) data_type -> . NUMBER
    (28) data_type -> . CADENA
    (174) empty_function -> .
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 46
    NUMBER          shift and go to state 79
    CADENA          shift and go to state 80
    RPAREN          reduce using rule 174 (empty_function -> .)
    COMMA           reduce using rule 174 (empty_function -> .)
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69

    params                         shift and go to state 245
    single_param                   shift and go to state 93
    var_declaration2               shift and go to state 95
    data_type                      shift and go to state 96
    empty_function                 shift and go to state 97
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 144

    (160) Built_In_Declaration -> sqrt LPAREN . params RPAREN
    (116) params -> . single_param
    (117) params -> . params COMMA single_param
    (118) single_param -> . var_declaration2
    (119) single_param -> . data_type
    (120) single_param -> . empty_function
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (27) data_type -> . NUMBER
    (28) data_type -> . CADENA
    (174) empty_function -> .
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 46
    NUMBER          shift and go to state 79
    CADENA          shift and go to state 80
    RPAREN          reduce using rule 174 (empty_function -> .)
    COMMA           reduce using rule 174 (empty_function -> .)
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69

    params                         shift and go to state 246
    single_param                   shift and go to state 93
    var_declaration2               shift and go to state 95
    data_type                      shift and go to state 96
    empty_function                 shift and go to state 97
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 145

    (161) Built_In_Declaration -> unset LPAREN . params RPAREN
    (116) params -> . single_param
    (117) params -> . params COMMA single_param
    (118) single_param -> . var_declaration2
    (119) single_param -> . data_type
    (120) single_param -> . empty_function
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (27) data_type -> . NUMBER
    (28) data_type -> . CADENA
    (174) empty_function -> .
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 46
    NUMBER          shift and go to state 79
    CADENA          shift and go to state 80
    RPAREN          reduce using rule 174 (empty_function -> .)
    COMMA           reduce using rule 174 (empty_function -> .)
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69

    params                         shift and go to state 247
    single_param                   shift and go to state 93
    var_declaration2               shift and go to state 95
    data_type                      shift and go to state 96
    empty_function                 shift and go to state 97
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 146

    (29) header_declaration -> include CADENA SEMICOLON .

    COMMENT         reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)
    COMMENT_HASHTAG reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)
    COMMENT_MULTI   reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)
    empty           reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)
    include         reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)
    const           reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)
    print           reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)
    echo            reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)
    while           reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)
    do              reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)
    if              reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)
    function        reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)
    ID              reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)
    return          reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)
    class           reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)
    new             reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)
    CLOSE_TAG       reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)
    for             reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)
    foreach         reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)
    switch          reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)
    exit            reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)
    VARIABLE        reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)
    array           reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)
    pow             reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)
    POW             reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)
    abs             reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)
    cos             reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)
    deg2rad         reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)
    rad2deg         reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)
    die             reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)
    exp             reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)
    floor           reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)
    isset           reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)
    list            reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)
    log             reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)
    log10           reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)
    max             reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)
    min             reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)
    rand            reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)
    round           reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)
    sin             reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)
    sqrt            reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)
    unset           reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)
    CADENA          reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)
    $end            reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)
    RBLOCK          reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)
    endwhile        reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)
    endfor          reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)
    endforeach      reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)
    endswitch       reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)
    break           reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)
    default         reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)
    case            reduce using rule 29 (header_declaration -> include CADENA SEMICOLON .)


state 147

    (163) Concatenar_Cadenas_declaration -> CADENA DOT CADENA .

    SEMICOLON       reduce using rule 163 (Concatenar_Cadenas_declaration -> CADENA DOT CADENA .)
    COMMA           reduce using rule 163 (Concatenar_Cadenas_declaration -> CADENA DOT CADENA .)
    RPAREN          reduce using rule 163 (Concatenar_Cadenas_declaration -> CADENA DOT CADENA .)
    RBRACKET        reduce using rule 163 (Concatenar_Cadenas_declaration -> CADENA DOT CADENA .)
    RBLOCK          reduce using rule 163 (Concatenar_Cadenas_declaration -> CADENA DOT CADENA .)


state 148

    (164) Concatenar_Cadenas_declaration -> CADENA DOT VARIABLE .

    SEMICOLON       reduce using rule 164 (Concatenar_Cadenas_declaration -> CADENA DOT VARIABLE .)
    COMMA           reduce using rule 164 (Concatenar_Cadenas_declaration -> CADENA DOT VARIABLE .)
    RPAREN          reduce using rule 164 (Concatenar_Cadenas_declaration -> CADENA DOT VARIABLE .)
    RBRACKET        reduce using rule 164 (Concatenar_Cadenas_declaration -> CADENA DOT VARIABLE .)
    RBLOCK          reduce using rule 164 (Concatenar_Cadenas_declaration -> CADENA DOT VARIABLE .)


state 149

    (30) constant_declaration -> const ID EQUAL . data_type SEMICOLON
    (27) data_type -> . NUMBER
    (28) data_type -> . CADENA

    NUMBER          shift and go to state 79
    CADENA          shift and go to state 249

    data_type                      shift and go to state 248

state 150

    (110) fun_call -> ID LPAREN params . RPAREN
    (117) params -> params . COMMA single_param

    RPAREN          shift and go to state 250
    COMMA           shift and go to state 168


state 151

    (31) print_declaration -> print var_declaration2 SEMICOLON .

    COMMENT         reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)
    COMMENT_HASHTAG reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)
    COMMENT_MULTI   reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)
    empty           reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)
    include         reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)
    const           reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)
    print           reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)
    echo            reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)
    while           reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)
    do              reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)
    if              reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)
    function        reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)
    ID              reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)
    return          reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)
    class           reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)
    new             reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)
    CLOSE_TAG       reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)
    for             reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)
    foreach         reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)
    switch          reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)
    exit            reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)
    VARIABLE        reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)
    array           reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)
    pow             reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)
    POW             reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)
    abs             reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)
    cos             reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)
    deg2rad         reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)
    rad2deg         reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)
    die             reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)
    exp             reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)
    floor           reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)
    isset           reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)
    list            reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)
    log             reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)
    log10           reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)
    max             reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)
    min             reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)
    rand            reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)
    round           reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)
    sin             reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)
    sqrt            reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)
    unset           reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)
    CADENA          reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)
    $end            reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)
    RBLOCK          reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)
    endwhile        reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)
    endfor          reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)
    endforeach      reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)
    endswitch       reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)
    break           reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)
    default         reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)
    case            reduce using rule 31 (print_declaration -> print var_declaration2 SEMICOLON .)


state 152

    (32) print_declaration -> print LPAREN var_declaration2 . RPAREN SEMICOLON

    RPAREN          shift and go to state 251


state 153

    (33) print_declaration -> print LPAREN data_type . RPAREN SEMICOLON

    RPAREN          shift and go to state 252


state 154

    (34) print_declaration -> print data_type SEMICOLON .

    COMMENT         reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)
    COMMENT_HASHTAG reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)
    COMMENT_MULTI   reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)
    empty           reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)
    include         reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)
    const           reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)
    print           reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)
    echo            reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)
    while           reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)
    do              reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)
    if              reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)
    function        reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)
    ID              reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)
    return          reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)
    class           reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)
    new             reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)
    CLOSE_TAG       reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)
    for             reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)
    foreach         reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)
    switch          reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)
    exit            reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)
    VARIABLE        reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)
    array           reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)
    pow             reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)
    POW             reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)
    abs             reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)
    cos             reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)
    deg2rad         reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)
    rad2deg         reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)
    die             reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)
    exp             reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)
    floor           reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)
    isset           reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)
    list            reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)
    log             reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)
    log10           reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)
    max             reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)
    min             reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)
    rand            reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)
    round           reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)
    sin             reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)
    sqrt            reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)
    unset           reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)
    CADENA          reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)
    $end            reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)
    RBLOCK          reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)
    endwhile        reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)
    endfor          reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)
    endforeach      reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)
    endswitch       reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)
    break           reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)
    default         reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)
    case            reduce using rule 34 (print_declaration -> print data_type SEMICOLON .)


state 155

    (35) echo_declaration -> echo var_declaration2 SEMICOLON .

    COMMENT         reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    COMMENT_HASHTAG reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    COMMENT_MULTI   reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    empty           reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    include         reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    const           reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    print           reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    echo            reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    while           reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    do              reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    if              reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    function        reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    ID              reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    return          reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    class           reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    new             reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    CLOSE_TAG       reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    for             reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    foreach         reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    switch          reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    exit            reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    VARIABLE        reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    array           reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    pow             reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    POW             reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    abs             reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    cos             reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    deg2rad         reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    rad2deg         reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    die             reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    exp             reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    floor           reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    isset           reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    list            reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    log             reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    log10           reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    max             reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    min             reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    rand            reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    round           reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    sin             reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    sqrt            reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    unset           reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    CADENA          reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    $end            reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    RBLOCK          reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    endwhile        reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    endfor          reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    endforeach      reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    endswitch       reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    break           reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    default         reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    case            reduce using rule 35 (echo_declaration -> echo var_declaration2 SEMICOLON .)


state 156

    (36) echo_declaration -> echo LPAREN var_declaration2 . RPAREN SEMICOLON

    RPAREN          shift and go to state 253


state 157

    (37) echo_declaration -> echo LPAREN data_type . RPAREN SEMICOLON

    RPAREN          shift and go to state 254


state 158

    (38) echo_declaration -> echo data_type SEMICOLON .

    COMMENT         reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)
    COMMENT_HASHTAG reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)
    COMMENT_MULTI   reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)
    empty           reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)
    include         reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)
    const           reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)
    print           reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)
    echo            reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)
    while           reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)
    do              reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)
    if              reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)
    function        reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)
    ID              reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)
    return          reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)
    class           reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)
    new             reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)
    CLOSE_TAG       reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)
    for             reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)
    foreach         reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)
    switch          reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)
    exit            reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)
    VARIABLE        reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)
    array           reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)
    pow             reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)
    POW             reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)
    abs             reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)
    cos             reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)
    deg2rad         reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)
    rad2deg         reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)
    die             reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)
    exp             reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)
    floor           reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)
    isset           reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)
    list            reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)
    log             reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)
    log10           reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)
    max             reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)
    min             reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)
    rand            reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)
    round           reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)
    sin             reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)
    sqrt            reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)
    unset           reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)
    CADENA          reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)
    $end            reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)
    RBLOCK          reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)
    endwhile        reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)
    endfor          reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)
    endforeach      reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)
    endswitch       reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)
    break           reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)
    default         reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)
    case            reduce using rule 38 (echo_declaration -> echo data_type SEMICOLON .)


state 159

    (59) iteration_stmt -> while LPAREN expression . RPAREN LBLOCK declaration RBLOCK
    (60) iteration_stmt -> while LPAREN expression . RPAREN COLON declaration endwhile SEMICOLON

    RPAREN          shift and go to state 255


state 160

    (74) factor -> NUMBER .

    PLUSPLUS        reduce using rule 74 (factor -> NUMBER .)
    MINUSMINUS      reduce using rule 74 (factor -> NUMBER .)
    PLUS            reduce using rule 74 (factor -> NUMBER .)
    MINUS           reduce using rule 74 (factor -> NUMBER .)
    TIMES           reduce using rule 74 (factor -> NUMBER .)
    DIVIDE          reduce using rule 74 (factor -> NUMBER .)
    MULEQUAL        reduce using rule 74 (factor -> NUMBER .)
    PLUSEQUAL       reduce using rule 74 (factor -> NUMBER .)
    MINUSEQUAL      reduce using rule 74 (factor -> NUMBER .)
    MOD             reduce using rule 74 (factor -> NUMBER .)
    BOOL_OR         reduce using rule 74 (factor -> NUMBER .)
    BOOL_AND        reduce using rule 74 (factor -> NUMBER .)
    NOT             reduce using rule 74 (factor -> NUMBER .)
    or              reduce using rule 74 (factor -> NUMBER .)
    and             reduce using rule 74 (factor -> NUMBER .)
    xor             reduce using rule 74 (factor -> NUMBER .)
    LESS            reduce using rule 74 (factor -> NUMBER .)
    LESSEQUAL       reduce using rule 74 (factor -> NUMBER .)
    GREATER         reduce using rule 74 (factor -> NUMBER .)
    GREATEREQUAL    reduce using rule 74 (factor -> NUMBER .)
    DEQUAL          reduce using rule 74 (factor -> NUMBER .)
    DISTINT         reduce using rule 74 (factor -> NUMBER .)
    DIVEQUAL        reduce using rule 74 (factor -> NUMBER .)
    ISEQUAL         reduce using rule 74 (factor -> NUMBER .)
    ISIDENTICAL     reduce using rule 74 (factor -> NUMBER .)
    ISNOTIDENTICAL  reduce using rule 74 (factor -> NUMBER .)
    AMPERSANT       reduce using rule 74 (factor -> NUMBER .)
    SR              reduce using rule 74 (factor -> NUMBER .)
    SL              reduce using rule 74 (factor -> NUMBER .)
    RPAREN          reduce using rule 74 (factor -> NUMBER .)
    SEMICOLON       reduce using rule 74 (factor -> NUMBER .)
    as              reduce using rule 74 (factor -> NUMBER .)
    COMMA           reduce using rule 74 (factor -> NUMBER .)
    RBRACKET        reduce using rule 74 (factor -> NUMBER .)
    RBLOCK          reduce using rule 74 (factor -> NUMBER .)
    COLON           reduce using rule 74 (factor -> NUMBER .)


state 161

    (75) factor -> VARIABLE .

    PLUSPLUS        reduce using rule 75 (factor -> VARIABLE .)
    MINUSMINUS      reduce using rule 75 (factor -> VARIABLE .)
    PLUS            reduce using rule 75 (factor -> VARIABLE .)
    MINUS           reduce using rule 75 (factor -> VARIABLE .)
    TIMES           reduce using rule 75 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 75 (factor -> VARIABLE .)
    MULEQUAL        reduce using rule 75 (factor -> VARIABLE .)
    PLUSEQUAL       reduce using rule 75 (factor -> VARIABLE .)
    MINUSEQUAL      reduce using rule 75 (factor -> VARIABLE .)
    MOD             reduce using rule 75 (factor -> VARIABLE .)
    BOOL_OR         reduce using rule 75 (factor -> VARIABLE .)
    BOOL_AND        reduce using rule 75 (factor -> VARIABLE .)
    NOT             reduce using rule 75 (factor -> VARIABLE .)
    or              reduce using rule 75 (factor -> VARIABLE .)
    and             reduce using rule 75 (factor -> VARIABLE .)
    xor             reduce using rule 75 (factor -> VARIABLE .)
    LESS            reduce using rule 75 (factor -> VARIABLE .)
    LESSEQUAL       reduce using rule 75 (factor -> VARIABLE .)
    GREATER         reduce using rule 75 (factor -> VARIABLE .)
    GREATEREQUAL    reduce using rule 75 (factor -> VARIABLE .)
    DEQUAL          reduce using rule 75 (factor -> VARIABLE .)
    DISTINT         reduce using rule 75 (factor -> VARIABLE .)
    DIVEQUAL        reduce using rule 75 (factor -> VARIABLE .)
    ISEQUAL         reduce using rule 75 (factor -> VARIABLE .)
    ISIDENTICAL     reduce using rule 75 (factor -> VARIABLE .)
    ISNOTIDENTICAL  reduce using rule 75 (factor -> VARIABLE .)
    AMPERSANT       reduce using rule 75 (factor -> VARIABLE .)
    SR              reduce using rule 75 (factor -> VARIABLE .)
    SL              reduce using rule 75 (factor -> VARIABLE .)
    RPAREN          reduce using rule 75 (factor -> VARIABLE .)
    SEMICOLON       reduce using rule 75 (factor -> VARIABLE .)
    as              reduce using rule 75 (factor -> VARIABLE .)
    COMMA           reduce using rule 75 (factor -> VARIABLE .)
    RBRACKET        reduce using rule 75 (factor -> VARIABLE .)
    RBLOCK          reduce using rule 75 (factor -> VARIABLE .)
    COLON           reduce using rule 75 (factor -> VARIABLE .)


state 162

    (61) iteration_stmt -> do LBLOCK declaration . RBLOCK while LPAREN expression RPAREN SEMICOLON

    RBLOCK          shift and go to state 256


state 163

    (62) iteration_stmt -> do COLON declaration . endwhile SEMICOLON

    endwhile        shift and go to state 257


state 164

    (103) if_statement -> if LPAREN expression . RPAREN LBLOCK declaration_list RBLOCK else_part

    RPAREN          shift and go to state 258


state 165

    (108) fun_declaration -> function ID LPAREN . params RPAREN LBLOCK declaration_list RBLOCK
    (109) fun_declaration -> function ID LPAREN . params RPAREN LBLOCK declaration_list return_statement RBLOCK
    (116) params -> . single_param
    (117) params -> . params COMMA single_param
    (118) single_param -> . var_declaration2
    (119) single_param -> . data_type
    (120) single_param -> . empty_function
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (27) data_type -> . NUMBER
    (28) data_type -> . CADENA
    (174) empty_function -> .
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 46
    NUMBER          shift and go to state 79
    CADENA          shift and go to state 80
    RPAREN          reduce using rule 174 (empty_function -> .)
    COMMA           reduce using rule 174 (empty_function -> .)
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69

    params                         shift and go to state 259
    single_param                   shift and go to state 93
    var_declaration2               shift and go to state 95
    data_type                      shift and go to state 96
    empty_function                 shift and go to state 97
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 166

    (111) return_statement -> return expression SEMICOLON .

    COMMENT         reduce using rule 111 (return_statement -> return expression SEMICOLON .)
    COMMENT_HASHTAG reduce using rule 111 (return_statement -> return expression SEMICOLON .)
    COMMENT_MULTI   reduce using rule 111 (return_statement -> return expression SEMICOLON .)
    empty           reduce using rule 111 (return_statement -> return expression SEMICOLON .)
    include         reduce using rule 111 (return_statement -> return expression SEMICOLON .)
    const           reduce using rule 111 (return_statement -> return expression SEMICOLON .)
    print           reduce using rule 111 (return_statement -> return expression SEMICOLON .)
    echo            reduce using rule 111 (return_statement -> return expression SEMICOLON .)
    while           reduce using rule 111 (return_statement -> return expression SEMICOLON .)
    do              reduce using rule 111 (return_statement -> return expression SEMICOLON .)
    if              reduce using rule 111 (return_statement -> return expression SEMICOLON .)
    function        reduce using rule 111 (return_statement -> return expression SEMICOLON .)
    ID              reduce using rule 111 (return_statement -> return expression SEMICOLON .)
    return          reduce using rule 111 (return_statement -> return expression SEMICOLON .)
    class           reduce using rule 111 (return_statement -> return expression SEMICOLON .)
    new             reduce using rule 111 (return_statement -> return expression SEMICOLON .)
    CLOSE_TAG       reduce using rule 111 (return_statement -> return expression SEMICOLON .)
    for             reduce using rule 111 (return_statement -> return expression SEMICOLON .)
    foreach         reduce using rule 111 (return_statement -> return expression SEMICOLON .)
    switch          reduce using rule 111 (return_statement -> return expression SEMICOLON .)
    exit            reduce using rule 111 (return_statement -> return expression SEMICOLON .)
    VARIABLE        reduce using rule 111 (return_statement -> return expression SEMICOLON .)
    array           reduce using rule 111 (return_statement -> return expression SEMICOLON .)
    pow             reduce using rule 111 (return_statement -> return expression SEMICOLON .)
    POW             reduce using rule 111 (return_statement -> return expression SEMICOLON .)
    abs             reduce using rule 111 (return_statement -> return expression SEMICOLON .)
    cos             reduce using rule 111 (return_statement -> return expression SEMICOLON .)
    deg2rad         reduce using rule 111 (return_statement -> return expression SEMICOLON .)
    rad2deg         reduce using rule 111 (return_statement -> return expression SEMICOLON .)
    die             reduce using rule 111 (return_statement -> return expression SEMICOLON .)
    exp             reduce using rule 111 (return_statement -> return expression SEMICOLON .)
    floor           reduce using rule 111 (return_statement -> return expression SEMICOLON .)
    isset           reduce using rule 111 (return_statement -> return expression SEMICOLON .)
    list            reduce using rule 111 (return_statement -> return expression SEMICOLON .)
    log             reduce using rule 111 (return_statement -> return expression SEMICOLON .)
    log10           reduce using rule 111 (return_statement -> return expression SEMICOLON .)
    max             reduce using rule 111 (return_statement -> return expression SEMICOLON .)
    min             reduce using rule 111 (return_statement -> return expression SEMICOLON .)
    rand            reduce using rule 111 (return_statement -> return expression SEMICOLON .)
    round           reduce using rule 111 (return_statement -> return expression SEMICOLON .)
    sin             reduce using rule 111 (return_statement -> return expression SEMICOLON .)
    sqrt            reduce using rule 111 (return_statement -> return expression SEMICOLON .)
    unset           reduce using rule 111 (return_statement -> return expression SEMICOLON .)
    CADENA          reduce using rule 111 (return_statement -> return expression SEMICOLON .)
    $end            reduce using rule 111 (return_statement -> return expression SEMICOLON .)
    RBLOCK          reduce using rule 111 (return_statement -> return expression SEMICOLON .)
    endwhile        reduce using rule 111 (return_statement -> return expression SEMICOLON .)
    endfor          reduce using rule 111 (return_statement -> return expression SEMICOLON .)
    endforeach      reduce using rule 111 (return_statement -> return expression SEMICOLON .)
    endswitch       reduce using rule 111 (return_statement -> return expression SEMICOLON .)
    break           reduce using rule 111 (return_statement -> return expression SEMICOLON .)
    default         reduce using rule 111 (return_statement -> return expression SEMICOLON .)
    case            reduce using rule 111 (return_statement -> return expression SEMICOLON .)


state 167

    (112) return_statement -> return params SEMICOLON .

    COMMENT         reduce using rule 112 (return_statement -> return params SEMICOLON .)
    COMMENT_HASHTAG reduce using rule 112 (return_statement -> return params SEMICOLON .)
    COMMENT_MULTI   reduce using rule 112 (return_statement -> return params SEMICOLON .)
    empty           reduce using rule 112 (return_statement -> return params SEMICOLON .)
    include         reduce using rule 112 (return_statement -> return params SEMICOLON .)
    const           reduce using rule 112 (return_statement -> return params SEMICOLON .)
    print           reduce using rule 112 (return_statement -> return params SEMICOLON .)
    echo            reduce using rule 112 (return_statement -> return params SEMICOLON .)
    while           reduce using rule 112 (return_statement -> return params SEMICOLON .)
    do              reduce using rule 112 (return_statement -> return params SEMICOLON .)
    if              reduce using rule 112 (return_statement -> return params SEMICOLON .)
    function        reduce using rule 112 (return_statement -> return params SEMICOLON .)
    ID              reduce using rule 112 (return_statement -> return params SEMICOLON .)
    return          reduce using rule 112 (return_statement -> return params SEMICOLON .)
    class           reduce using rule 112 (return_statement -> return params SEMICOLON .)
    new             reduce using rule 112 (return_statement -> return params SEMICOLON .)
    CLOSE_TAG       reduce using rule 112 (return_statement -> return params SEMICOLON .)
    for             reduce using rule 112 (return_statement -> return params SEMICOLON .)
    foreach         reduce using rule 112 (return_statement -> return params SEMICOLON .)
    switch          reduce using rule 112 (return_statement -> return params SEMICOLON .)
    exit            reduce using rule 112 (return_statement -> return params SEMICOLON .)
    VARIABLE        reduce using rule 112 (return_statement -> return params SEMICOLON .)
    array           reduce using rule 112 (return_statement -> return params SEMICOLON .)
    pow             reduce using rule 112 (return_statement -> return params SEMICOLON .)
    POW             reduce using rule 112 (return_statement -> return params SEMICOLON .)
    abs             reduce using rule 112 (return_statement -> return params SEMICOLON .)
    cos             reduce using rule 112 (return_statement -> return params SEMICOLON .)
    deg2rad         reduce using rule 112 (return_statement -> return params SEMICOLON .)
    rad2deg         reduce using rule 112 (return_statement -> return params SEMICOLON .)
    die             reduce using rule 112 (return_statement -> return params SEMICOLON .)
    exp             reduce using rule 112 (return_statement -> return params SEMICOLON .)
    floor           reduce using rule 112 (return_statement -> return params SEMICOLON .)
    isset           reduce using rule 112 (return_statement -> return params SEMICOLON .)
    list            reduce using rule 112 (return_statement -> return params SEMICOLON .)
    log             reduce using rule 112 (return_statement -> return params SEMICOLON .)
    log10           reduce using rule 112 (return_statement -> return params SEMICOLON .)
    max             reduce using rule 112 (return_statement -> return params SEMICOLON .)
    min             reduce using rule 112 (return_statement -> return params SEMICOLON .)
    rand            reduce using rule 112 (return_statement -> return params SEMICOLON .)
    round           reduce using rule 112 (return_statement -> return params SEMICOLON .)
    sin             reduce using rule 112 (return_statement -> return params SEMICOLON .)
    sqrt            reduce using rule 112 (return_statement -> return params SEMICOLON .)
    unset           reduce using rule 112 (return_statement -> return params SEMICOLON .)
    CADENA          reduce using rule 112 (return_statement -> return params SEMICOLON .)
    $end            reduce using rule 112 (return_statement -> return params SEMICOLON .)
    RBLOCK          reduce using rule 112 (return_statement -> return params SEMICOLON .)
    endwhile        reduce using rule 112 (return_statement -> return params SEMICOLON .)
    endfor          reduce using rule 112 (return_statement -> return params SEMICOLON .)
    endforeach      reduce using rule 112 (return_statement -> return params SEMICOLON .)
    endswitch       reduce using rule 112 (return_statement -> return params SEMICOLON .)
    break           reduce using rule 112 (return_statement -> return params SEMICOLON .)
    default         reduce using rule 112 (return_statement -> return params SEMICOLON .)
    case            reduce using rule 112 (return_statement -> return params SEMICOLON .)


state 168

    (117) params -> params COMMA . single_param
    (118) single_param -> . var_declaration2
    (119) single_param -> . data_type
    (120) single_param -> . empty_function
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (27) data_type -> . NUMBER
    (28) data_type -> . CADENA
    (174) empty_function -> .
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 46
    NUMBER          shift and go to state 79
    CADENA          shift and go to state 80
    SEMICOLON       reduce using rule 174 (empty_function -> .)
    RPAREN          reduce using rule 174 (empty_function -> .)
    COMMA           reduce using rule 174 (empty_function -> .)
    RBRACKET        reduce using rule 174 (empty_function -> .)
    RBLOCK          reduce using rule 174 (empty_function -> .)
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69

    single_param                   shift and go to state 260
    var_declaration2               shift and go to state 95
    data_type                      shift and go to state 96
    empty_function                 shift and go to state 97
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 169

    (64) expression -> additive_expression logical_op . additive_expression
    (68) additive_expression -> . term
    (69) additive_expression -> . term math_op term
    (70) term -> . MINUS term
    (71) term -> . factor
    (72) term -> . factor increment_decrement_op
    (73) term -> . increment_decrement_op factor
    (74) factor -> . NUMBER
    (75) factor -> . VARIABLE
    (76) factor -> . LPAREN expression RPAREN
    (77) increment_decrement_op -> . PLUSPLUS
    (78) increment_decrement_op -> . MINUSMINUS

    MINUS           shift and go to state 98
    NUMBER          shift and go to state 160
    VARIABLE        shift and go to state 161
    LPAREN          shift and go to state 103
    PLUSPLUS        shift and go to state 104
    MINUSMINUS      shift and go to state 105

    additive_expression            shift and go to state 261
    term                           shift and go to state 94
    factor                         shift and go to state 99
    increment_decrement_op         shift and go to state 100

state 170

    (65) expression -> additive_expression comp_op . additive_expression
    (66) expression -> additive_expression comp_op . additive_expression logical_op additive_expression comp_op additive_expression
    (68) additive_expression -> . term
    (69) additive_expression -> . term math_op term
    (70) term -> . MINUS term
    (71) term -> . factor
    (72) term -> . factor increment_decrement_op
    (73) term -> . increment_decrement_op factor
    (74) factor -> . NUMBER
    (75) factor -> . VARIABLE
    (76) factor -> . LPAREN expression RPAREN
    (77) increment_decrement_op -> . PLUSPLUS
    (78) increment_decrement_op -> . MINUSMINUS

    MINUS           shift and go to state 98
    NUMBER          shift and go to state 160
    VARIABLE        shift and go to state 161
    LPAREN          shift and go to state 103
    PLUSPLUS        shift and go to state 104
    MINUSMINUS      shift and go to state 105

    additive_expression            shift and go to state 262
    term                           shift and go to state 94
    factor                         shift and go to state 99
    increment_decrement_op         shift and go to state 100

state 171

    (67) expression -> additive_expression bits_op . additive_expression
    (68) additive_expression -> . term
    (69) additive_expression -> . term math_op term
    (70) term -> . MINUS term
    (71) term -> . factor
    (72) term -> . factor increment_decrement_op
    (73) term -> . increment_decrement_op factor
    (74) factor -> . NUMBER
    (75) factor -> . VARIABLE
    (76) factor -> . LPAREN expression RPAREN
    (77) increment_decrement_op -> . PLUSPLUS
    (78) increment_decrement_op -> . MINUSMINUS

    MINUS           shift and go to state 98
    NUMBER          shift and go to state 160
    VARIABLE        shift and go to state 161
    LPAREN          shift and go to state 103
    PLUSPLUS        shift and go to state 104
    MINUSMINUS      shift and go to state 105

    additive_expression            shift and go to state 263
    term                           shift and go to state 94
    factor                         shift and go to state 99
    increment_decrement_op         shift and go to state 100

state 172

    (97) logical_op -> BOOL_OR .

    MINUS           reduce using rule 97 (logical_op -> BOOL_OR .)
    NUMBER          reduce using rule 97 (logical_op -> BOOL_OR .)
    VARIABLE        reduce using rule 97 (logical_op -> BOOL_OR .)
    LPAREN          reduce using rule 97 (logical_op -> BOOL_OR .)
    PLUSPLUS        reduce using rule 97 (logical_op -> BOOL_OR .)
    MINUSMINUS      reduce using rule 97 (logical_op -> BOOL_OR .)


state 173

    (98) logical_op -> BOOL_AND .

    MINUS           reduce using rule 98 (logical_op -> BOOL_AND .)
    NUMBER          reduce using rule 98 (logical_op -> BOOL_AND .)
    VARIABLE        reduce using rule 98 (logical_op -> BOOL_AND .)
    LPAREN          reduce using rule 98 (logical_op -> BOOL_AND .)
    PLUSPLUS        reduce using rule 98 (logical_op -> BOOL_AND .)
    MINUSMINUS      reduce using rule 98 (logical_op -> BOOL_AND .)


state 174

    (99) logical_op -> NOT .

    MINUS           reduce using rule 99 (logical_op -> NOT .)
    NUMBER          reduce using rule 99 (logical_op -> NOT .)
    VARIABLE        reduce using rule 99 (logical_op -> NOT .)
    LPAREN          reduce using rule 99 (logical_op -> NOT .)
    PLUSPLUS        reduce using rule 99 (logical_op -> NOT .)
    MINUSMINUS      reduce using rule 99 (logical_op -> NOT .)


state 175

    (100) logical_op -> or .

    MINUS           reduce using rule 100 (logical_op -> or .)
    NUMBER          reduce using rule 100 (logical_op -> or .)
    VARIABLE        reduce using rule 100 (logical_op -> or .)
    LPAREN          reduce using rule 100 (logical_op -> or .)
    PLUSPLUS        reduce using rule 100 (logical_op -> or .)
    MINUSMINUS      reduce using rule 100 (logical_op -> or .)


state 176

    (101) logical_op -> and .

    MINUS           reduce using rule 101 (logical_op -> and .)
    NUMBER          reduce using rule 101 (logical_op -> and .)
    VARIABLE        reduce using rule 101 (logical_op -> and .)
    LPAREN          reduce using rule 101 (logical_op -> and .)
    PLUSPLUS        reduce using rule 101 (logical_op -> and .)
    MINUSMINUS      reduce using rule 101 (logical_op -> and .)


state 177

    (102) logical_op -> xor .

    MINUS           reduce using rule 102 (logical_op -> xor .)
    NUMBER          reduce using rule 102 (logical_op -> xor .)
    VARIABLE        reduce using rule 102 (logical_op -> xor .)
    LPAREN          reduce using rule 102 (logical_op -> xor .)
    PLUSPLUS        reduce using rule 102 (logical_op -> xor .)
    MINUSMINUS      reduce using rule 102 (logical_op -> xor .)


state 178

    (87) comp_op -> LESS .

    MINUS           reduce using rule 87 (comp_op -> LESS .)
    NUMBER          reduce using rule 87 (comp_op -> LESS .)
    VARIABLE        reduce using rule 87 (comp_op -> LESS .)
    LPAREN          reduce using rule 87 (comp_op -> LESS .)
    PLUSPLUS        reduce using rule 87 (comp_op -> LESS .)
    MINUSMINUS      reduce using rule 87 (comp_op -> LESS .)


state 179

    (88) comp_op -> LESSEQUAL .

    MINUS           reduce using rule 88 (comp_op -> LESSEQUAL .)
    NUMBER          reduce using rule 88 (comp_op -> LESSEQUAL .)
    VARIABLE        reduce using rule 88 (comp_op -> LESSEQUAL .)
    LPAREN          reduce using rule 88 (comp_op -> LESSEQUAL .)
    PLUSPLUS        reduce using rule 88 (comp_op -> LESSEQUAL .)
    MINUSMINUS      reduce using rule 88 (comp_op -> LESSEQUAL .)


state 180

    (89) comp_op -> GREATER .

    MINUS           reduce using rule 89 (comp_op -> GREATER .)
    NUMBER          reduce using rule 89 (comp_op -> GREATER .)
    VARIABLE        reduce using rule 89 (comp_op -> GREATER .)
    LPAREN          reduce using rule 89 (comp_op -> GREATER .)
    PLUSPLUS        reduce using rule 89 (comp_op -> GREATER .)
    MINUSMINUS      reduce using rule 89 (comp_op -> GREATER .)


state 181

    (90) comp_op -> GREATEREQUAL .

    MINUS           reduce using rule 90 (comp_op -> GREATEREQUAL .)
    NUMBER          reduce using rule 90 (comp_op -> GREATEREQUAL .)
    VARIABLE        reduce using rule 90 (comp_op -> GREATEREQUAL .)
    LPAREN          reduce using rule 90 (comp_op -> GREATEREQUAL .)
    PLUSPLUS        reduce using rule 90 (comp_op -> GREATEREQUAL .)
    MINUSMINUS      reduce using rule 90 (comp_op -> GREATEREQUAL .)


state 182

    (91) comp_op -> DEQUAL .

    MINUS           reduce using rule 91 (comp_op -> DEQUAL .)
    NUMBER          reduce using rule 91 (comp_op -> DEQUAL .)
    VARIABLE        reduce using rule 91 (comp_op -> DEQUAL .)
    LPAREN          reduce using rule 91 (comp_op -> DEQUAL .)
    PLUSPLUS        reduce using rule 91 (comp_op -> DEQUAL .)
    MINUSMINUS      reduce using rule 91 (comp_op -> DEQUAL .)


state 183

    (92) comp_op -> DISTINT .

    MINUS           reduce using rule 92 (comp_op -> DISTINT .)
    NUMBER          reduce using rule 92 (comp_op -> DISTINT .)
    VARIABLE        reduce using rule 92 (comp_op -> DISTINT .)
    LPAREN          reduce using rule 92 (comp_op -> DISTINT .)
    PLUSPLUS        reduce using rule 92 (comp_op -> DISTINT .)
    MINUSMINUS      reduce using rule 92 (comp_op -> DISTINT .)


state 184

    (93) comp_op -> DIVEQUAL .

    MINUS           reduce using rule 93 (comp_op -> DIVEQUAL .)
    NUMBER          reduce using rule 93 (comp_op -> DIVEQUAL .)
    VARIABLE        reduce using rule 93 (comp_op -> DIVEQUAL .)
    LPAREN          reduce using rule 93 (comp_op -> DIVEQUAL .)
    PLUSPLUS        reduce using rule 93 (comp_op -> DIVEQUAL .)
    MINUSMINUS      reduce using rule 93 (comp_op -> DIVEQUAL .)


state 185

    (94) comp_op -> ISEQUAL .

    MINUS           reduce using rule 94 (comp_op -> ISEQUAL .)
    NUMBER          reduce using rule 94 (comp_op -> ISEQUAL .)
    VARIABLE        reduce using rule 94 (comp_op -> ISEQUAL .)
    LPAREN          reduce using rule 94 (comp_op -> ISEQUAL .)
    PLUSPLUS        reduce using rule 94 (comp_op -> ISEQUAL .)
    MINUSMINUS      reduce using rule 94 (comp_op -> ISEQUAL .)


state 186

    (95) comp_op -> ISIDENTICAL .

    MINUS           reduce using rule 95 (comp_op -> ISIDENTICAL .)
    NUMBER          reduce using rule 95 (comp_op -> ISIDENTICAL .)
    VARIABLE        reduce using rule 95 (comp_op -> ISIDENTICAL .)
    LPAREN          reduce using rule 95 (comp_op -> ISIDENTICAL .)
    PLUSPLUS        reduce using rule 95 (comp_op -> ISIDENTICAL .)
    MINUSMINUS      reduce using rule 95 (comp_op -> ISIDENTICAL .)


state 187

    (96) comp_op -> ISNOTIDENTICAL .

    MINUS           reduce using rule 96 (comp_op -> ISNOTIDENTICAL .)
    NUMBER          reduce using rule 96 (comp_op -> ISNOTIDENTICAL .)
    VARIABLE        reduce using rule 96 (comp_op -> ISNOTIDENTICAL .)
    LPAREN          reduce using rule 96 (comp_op -> ISNOTIDENTICAL .)
    PLUSPLUS        reduce using rule 96 (comp_op -> ISNOTIDENTICAL .)
    MINUSMINUS      reduce using rule 96 (comp_op -> ISNOTIDENTICAL .)


state 188

    (166) bits_op -> AMPERSANT .

    MINUS           reduce using rule 166 (bits_op -> AMPERSANT .)
    NUMBER          reduce using rule 166 (bits_op -> AMPERSANT .)
    VARIABLE        reduce using rule 166 (bits_op -> AMPERSANT .)
    LPAREN          reduce using rule 166 (bits_op -> AMPERSANT .)
    PLUSPLUS        reduce using rule 166 (bits_op -> AMPERSANT .)
    MINUSMINUS      reduce using rule 166 (bits_op -> AMPERSANT .)


state 189

    (167) bits_op -> SR .

    MINUS           reduce using rule 167 (bits_op -> SR .)
    NUMBER          reduce using rule 167 (bits_op -> SR .)
    VARIABLE        reduce using rule 167 (bits_op -> SR .)
    LPAREN          reduce using rule 167 (bits_op -> SR .)
    PLUSPLUS        reduce using rule 167 (bits_op -> SR .)
    MINUSMINUS      reduce using rule 167 (bits_op -> SR .)


state 190

    (168) bits_op -> SL .

    MINUS           reduce using rule 168 (bits_op -> SL .)
    NUMBER          reduce using rule 168 (bits_op -> SL .)
    VARIABLE        reduce using rule 168 (bits_op -> SL .)
    LPAREN          reduce using rule 168 (bits_op -> SL .)
    PLUSPLUS        reduce using rule 168 (bits_op -> SL .)
    MINUSMINUS      reduce using rule 168 (bits_op -> SL .)


state 191

    (69) additive_expression -> term math_op . term
    (70) term -> . MINUS term
    (71) term -> . factor
    (72) term -> . factor increment_decrement_op
    (73) term -> . increment_decrement_op factor
    (74) factor -> . NUMBER
    (75) factor -> . VARIABLE
    (76) factor -> . LPAREN expression RPAREN
    (77) increment_decrement_op -> . PLUSPLUS
    (78) increment_decrement_op -> . MINUSMINUS

    MINUS           shift and go to state 98
    NUMBER          shift and go to state 160
    VARIABLE        shift and go to state 161
    LPAREN          shift and go to state 103
    PLUSPLUS        shift and go to state 104
    MINUSMINUS      shift and go to state 105

    term                           shift and go to state 264
    factor                         shift and go to state 99
    increment_decrement_op         shift and go to state 100

state 192

    (79) math_op -> PLUS .

    MINUS           reduce using rule 79 (math_op -> PLUS .)
    NUMBER          reduce using rule 79 (math_op -> PLUS .)
    VARIABLE        reduce using rule 79 (math_op -> PLUS .)
    LPAREN          reduce using rule 79 (math_op -> PLUS .)
    PLUSPLUS        reduce using rule 79 (math_op -> PLUS .)
    MINUSMINUS      reduce using rule 79 (math_op -> PLUS .)


state 193

    (80) math_op -> MINUS .

    MINUS           reduce using rule 80 (math_op -> MINUS .)
    NUMBER          reduce using rule 80 (math_op -> MINUS .)
    VARIABLE        reduce using rule 80 (math_op -> MINUS .)
    LPAREN          reduce using rule 80 (math_op -> MINUS .)
    PLUSPLUS        reduce using rule 80 (math_op -> MINUS .)
    MINUSMINUS      reduce using rule 80 (math_op -> MINUS .)


state 194

    (81) math_op -> TIMES .

    MINUS           reduce using rule 81 (math_op -> TIMES .)
    NUMBER          reduce using rule 81 (math_op -> TIMES .)
    VARIABLE        reduce using rule 81 (math_op -> TIMES .)
    LPAREN          reduce using rule 81 (math_op -> TIMES .)
    PLUSPLUS        reduce using rule 81 (math_op -> TIMES .)
    MINUSMINUS      reduce using rule 81 (math_op -> TIMES .)


state 195

    (82) math_op -> DIVIDE .

    MINUS           reduce using rule 82 (math_op -> DIVIDE .)
    NUMBER          reduce using rule 82 (math_op -> DIVIDE .)
    VARIABLE        reduce using rule 82 (math_op -> DIVIDE .)
    LPAREN          reduce using rule 82 (math_op -> DIVIDE .)
    PLUSPLUS        reduce using rule 82 (math_op -> DIVIDE .)
    MINUSMINUS      reduce using rule 82 (math_op -> DIVIDE .)


state 196

    (83) math_op -> MULEQUAL .

    MINUS           reduce using rule 83 (math_op -> MULEQUAL .)
    NUMBER          reduce using rule 83 (math_op -> MULEQUAL .)
    VARIABLE        reduce using rule 83 (math_op -> MULEQUAL .)
    LPAREN          reduce using rule 83 (math_op -> MULEQUAL .)
    PLUSPLUS        reduce using rule 83 (math_op -> MULEQUAL .)
    MINUSMINUS      reduce using rule 83 (math_op -> MULEQUAL .)


state 197

    (84) math_op -> PLUSEQUAL .

    MINUS           reduce using rule 84 (math_op -> PLUSEQUAL .)
    NUMBER          reduce using rule 84 (math_op -> PLUSEQUAL .)
    VARIABLE        reduce using rule 84 (math_op -> PLUSEQUAL .)
    LPAREN          reduce using rule 84 (math_op -> PLUSEQUAL .)
    PLUSPLUS        reduce using rule 84 (math_op -> PLUSEQUAL .)
    MINUSMINUS      reduce using rule 84 (math_op -> PLUSEQUAL .)


state 198

    (85) math_op -> MINUSEQUAL .

    MINUS           reduce using rule 85 (math_op -> MINUSEQUAL .)
    NUMBER          reduce using rule 85 (math_op -> MINUSEQUAL .)
    VARIABLE        reduce using rule 85 (math_op -> MINUSEQUAL .)
    LPAREN          reduce using rule 85 (math_op -> MINUSEQUAL .)
    PLUSPLUS        reduce using rule 85 (math_op -> MINUSEQUAL .)
    MINUSMINUS      reduce using rule 85 (math_op -> MINUSEQUAL .)


state 199

    (86) math_op -> MOD .

    MINUS           reduce using rule 86 (math_op -> MOD .)
    NUMBER          reduce using rule 86 (math_op -> MOD .)
    VARIABLE        reduce using rule 86 (math_op -> MOD .)
    LPAREN          reduce using rule 86 (math_op -> MOD .)
    PLUSPLUS        reduce using rule 86 (math_op -> MOD .)
    MINUSMINUS      reduce using rule 86 (math_op -> MOD .)


state 200

    (70) term -> MINUS term .

    PLUS            reduce using rule 70 (term -> MINUS term .)
    MINUS           reduce using rule 70 (term -> MINUS term .)
    TIMES           reduce using rule 70 (term -> MINUS term .)
    DIVIDE          reduce using rule 70 (term -> MINUS term .)
    MULEQUAL        reduce using rule 70 (term -> MINUS term .)
    PLUSEQUAL       reduce using rule 70 (term -> MINUS term .)
    MINUSEQUAL      reduce using rule 70 (term -> MINUS term .)
    MOD             reduce using rule 70 (term -> MINUS term .)
    BOOL_OR         reduce using rule 70 (term -> MINUS term .)
    BOOL_AND        reduce using rule 70 (term -> MINUS term .)
    NOT             reduce using rule 70 (term -> MINUS term .)
    or              reduce using rule 70 (term -> MINUS term .)
    and             reduce using rule 70 (term -> MINUS term .)
    xor             reduce using rule 70 (term -> MINUS term .)
    LESS            reduce using rule 70 (term -> MINUS term .)
    LESSEQUAL       reduce using rule 70 (term -> MINUS term .)
    GREATER         reduce using rule 70 (term -> MINUS term .)
    GREATEREQUAL    reduce using rule 70 (term -> MINUS term .)
    DEQUAL          reduce using rule 70 (term -> MINUS term .)
    DISTINT         reduce using rule 70 (term -> MINUS term .)
    DIVEQUAL        reduce using rule 70 (term -> MINUS term .)
    ISEQUAL         reduce using rule 70 (term -> MINUS term .)
    ISIDENTICAL     reduce using rule 70 (term -> MINUS term .)
    ISNOTIDENTICAL  reduce using rule 70 (term -> MINUS term .)
    AMPERSANT       reduce using rule 70 (term -> MINUS term .)
    SR              reduce using rule 70 (term -> MINUS term .)
    SL              reduce using rule 70 (term -> MINUS term .)
    SEMICOLON       reduce using rule 70 (term -> MINUS term .)
    RPAREN          reduce using rule 70 (term -> MINUS term .)
    as              reduce using rule 70 (term -> MINUS term .)
    COMMA           reduce using rule 70 (term -> MINUS term .)
    RBRACKET        reduce using rule 70 (term -> MINUS term .)
    RBLOCK          reduce using rule 70 (term -> MINUS term .)
    COLON           reduce using rule 70 (term -> MINUS term .)


state 201

    (72) term -> factor increment_decrement_op .

    PLUS            reduce using rule 72 (term -> factor increment_decrement_op .)
    MINUS           reduce using rule 72 (term -> factor increment_decrement_op .)
    TIMES           reduce using rule 72 (term -> factor increment_decrement_op .)
    DIVIDE          reduce using rule 72 (term -> factor increment_decrement_op .)
    MULEQUAL        reduce using rule 72 (term -> factor increment_decrement_op .)
    PLUSEQUAL       reduce using rule 72 (term -> factor increment_decrement_op .)
    MINUSEQUAL      reduce using rule 72 (term -> factor increment_decrement_op .)
    MOD             reduce using rule 72 (term -> factor increment_decrement_op .)
    BOOL_OR         reduce using rule 72 (term -> factor increment_decrement_op .)
    BOOL_AND        reduce using rule 72 (term -> factor increment_decrement_op .)
    NOT             reduce using rule 72 (term -> factor increment_decrement_op .)
    or              reduce using rule 72 (term -> factor increment_decrement_op .)
    and             reduce using rule 72 (term -> factor increment_decrement_op .)
    xor             reduce using rule 72 (term -> factor increment_decrement_op .)
    LESS            reduce using rule 72 (term -> factor increment_decrement_op .)
    LESSEQUAL       reduce using rule 72 (term -> factor increment_decrement_op .)
    GREATER         reduce using rule 72 (term -> factor increment_decrement_op .)
    GREATEREQUAL    reduce using rule 72 (term -> factor increment_decrement_op .)
    DEQUAL          reduce using rule 72 (term -> factor increment_decrement_op .)
    DISTINT         reduce using rule 72 (term -> factor increment_decrement_op .)
    DIVEQUAL        reduce using rule 72 (term -> factor increment_decrement_op .)
    ISEQUAL         reduce using rule 72 (term -> factor increment_decrement_op .)
    ISIDENTICAL     reduce using rule 72 (term -> factor increment_decrement_op .)
    ISNOTIDENTICAL  reduce using rule 72 (term -> factor increment_decrement_op .)
    AMPERSANT       reduce using rule 72 (term -> factor increment_decrement_op .)
    SR              reduce using rule 72 (term -> factor increment_decrement_op .)
    SL              reduce using rule 72 (term -> factor increment_decrement_op .)
    SEMICOLON       reduce using rule 72 (term -> factor increment_decrement_op .)
    RPAREN          reduce using rule 72 (term -> factor increment_decrement_op .)
    as              reduce using rule 72 (term -> factor increment_decrement_op .)
    COMMA           reduce using rule 72 (term -> factor increment_decrement_op .)
    RBRACKET        reduce using rule 72 (term -> factor increment_decrement_op .)
    RBLOCK          reduce using rule 72 (term -> factor increment_decrement_op .)
    COLON           reduce using rule 72 (term -> factor increment_decrement_op .)


state 202

    (73) term -> increment_decrement_op factor .

    PLUS            reduce using rule 73 (term -> increment_decrement_op factor .)
    MINUS           reduce using rule 73 (term -> increment_decrement_op factor .)
    TIMES           reduce using rule 73 (term -> increment_decrement_op factor .)
    DIVIDE          reduce using rule 73 (term -> increment_decrement_op factor .)
    MULEQUAL        reduce using rule 73 (term -> increment_decrement_op factor .)
    PLUSEQUAL       reduce using rule 73 (term -> increment_decrement_op factor .)
    MINUSEQUAL      reduce using rule 73 (term -> increment_decrement_op factor .)
    MOD             reduce using rule 73 (term -> increment_decrement_op factor .)
    BOOL_OR         reduce using rule 73 (term -> increment_decrement_op factor .)
    BOOL_AND        reduce using rule 73 (term -> increment_decrement_op factor .)
    NOT             reduce using rule 73 (term -> increment_decrement_op factor .)
    or              reduce using rule 73 (term -> increment_decrement_op factor .)
    and             reduce using rule 73 (term -> increment_decrement_op factor .)
    xor             reduce using rule 73 (term -> increment_decrement_op factor .)
    LESS            reduce using rule 73 (term -> increment_decrement_op factor .)
    LESSEQUAL       reduce using rule 73 (term -> increment_decrement_op factor .)
    GREATER         reduce using rule 73 (term -> increment_decrement_op factor .)
    GREATEREQUAL    reduce using rule 73 (term -> increment_decrement_op factor .)
    DEQUAL          reduce using rule 73 (term -> increment_decrement_op factor .)
    DISTINT         reduce using rule 73 (term -> increment_decrement_op factor .)
    DIVEQUAL        reduce using rule 73 (term -> increment_decrement_op factor .)
    ISEQUAL         reduce using rule 73 (term -> increment_decrement_op factor .)
    ISIDENTICAL     reduce using rule 73 (term -> increment_decrement_op factor .)
    ISNOTIDENTICAL  reduce using rule 73 (term -> increment_decrement_op factor .)
    AMPERSANT       reduce using rule 73 (term -> increment_decrement_op factor .)
    SR              reduce using rule 73 (term -> increment_decrement_op factor .)
    SL              reduce using rule 73 (term -> increment_decrement_op factor .)
    SEMICOLON       reduce using rule 73 (term -> increment_decrement_op factor .)
    RPAREN          reduce using rule 73 (term -> increment_decrement_op factor .)
    as              reduce using rule 73 (term -> increment_decrement_op factor .)
    COMMA           reduce using rule 73 (term -> increment_decrement_op factor .)
    RBRACKET        reduce using rule 73 (term -> increment_decrement_op factor .)
    RBLOCK          reduce using rule 73 (term -> increment_decrement_op factor .)
    COLON           reduce using rule 73 (term -> increment_decrement_op factor .)


state 203

    (76) factor -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 265


state 204

    (114) obj_declaration -> class ID LBLOCK . declaration RBLOCK
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . return_statement
    (19) declaration -> . obj_declaration
    (20) declaration -> . create_obj_declaration
    (21) declaration -> . footer_declaration
    (22) declaration -> . for_loop
    (23) declaration -> . foreach_loop
    (24) declaration -> . switch_statement
    (25) declaration -> . exit_statement
    (26) declaration -> . empty
    (29) header_declaration -> . include CADENA SEMICOLON
    (39) var_declaration -> . var_declaration2 SEMICOLON
    (30) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (31) print_declaration -> . print var_declaration2 SEMICOLON
    (32) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (33) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (34) print_declaration -> . print data_type SEMICOLON
    (35) echo_declaration -> . echo var_declaration2 SEMICOLON
    (36) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (37) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (38) echo_declaration -> . echo data_type SEMICOLON
    (59) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (60) iteration_stmt -> . while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON
    (61) iteration_stmt -> . do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON
    (62) iteration_stmt -> . do COLON declaration endwhile SEMICOLON
    (103) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (108) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK
    (109) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK
    (110) fun_call -> . ID LPAREN params RPAREN
    (111) return_statement -> . return expression SEMICOLON
    (112) return_statement -> . return params SEMICOLON
    (113) return_statement -> . return SEMICOLON
    (114) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (115) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (121) for_loop -> . for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK
    (122) for_loop -> . for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON
    (127) foreach_loop -> . foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK
    (128) foreach_loop -> . foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON
    (129) switch_statement -> . switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK
    (130) switch_statement -> . switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON
    (126) exit_statement -> . exit LPAREN expression RPAREN SEMICOLON
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 26
    include         shift and go to state 27
    const           shift and go to state 30
    print           shift and go to state 32
    echo            shift and go to state 33
    while           shift and go to state 34
    do              shift and go to state 35
    if              shift and go to state 36
    function        shift and go to state 37
    ID              shift and go to state 31
    return          shift and go to state 38
    class           shift and go to state 39
    new             shift and go to state 40
    CLOSE_TAG       shift and go to state 41
    for             shift and go to state 42
    foreach         shift and go to state 43
    switch          shift and go to state 44
    exit            shift and go to state 45
    VARIABLE        shift and go to state 46
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69
    CADENA          shift and go to state 28

    declaration                    shift and go to state 266
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    return_statement               shift and go to state 18
    obj_declaration                shift and go to state 19
    create_obj_declaration         shift and go to state 20
    footer_declaration             shift and go to state 21
    for_loop                       shift and go to state 22
    foreach_loop                   shift and go to state 23
    switch_statement               shift and go to state 24
    exit_statement                 shift and go to state 25
    var_declaration2               shift and go to state 29
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 205

    (115) create_obj_declaration -> new ID LPAREN . params RPAREN
    (116) params -> . single_param
    (117) params -> . params COMMA single_param
    (118) single_param -> . var_declaration2
    (119) single_param -> . data_type
    (120) single_param -> . empty_function
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (27) data_type -> . NUMBER
    (28) data_type -> . CADENA
    (174) empty_function -> .
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 46
    NUMBER          shift and go to state 79
    CADENA          shift and go to state 80
    RPAREN          reduce using rule 174 (empty_function -> .)
    COMMA           reduce using rule 174 (empty_function -> .)
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69

    params                         shift and go to state 267
    single_param                   shift and go to state 93
    var_declaration2               shift and go to state 95
    data_type                      shift and go to state 96
    empty_function                 shift and go to state 97
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 206

    (121) for_loop -> for LPAREN for_init . for_expr for_update RPAREN LBLOCK declaration_list RBLOCK
    (122) for_loop -> for LPAREN for_init . for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON
    (124) for_expr -> . expression SEMICOLON
    (63) expression -> . additive_expression
    (64) expression -> . additive_expression logical_op additive_expression
    (65) expression -> . additive_expression comp_op additive_expression
    (66) expression -> . additive_expression comp_op additive_expression logical_op additive_expression comp_op additive_expression
    (67) expression -> . additive_expression bits_op additive_expression
    (68) additive_expression -> . term
    (69) additive_expression -> . term math_op term
    (70) term -> . MINUS term
    (71) term -> . factor
    (72) term -> . factor increment_decrement_op
    (73) term -> . increment_decrement_op factor
    (74) factor -> . NUMBER
    (75) factor -> . VARIABLE
    (76) factor -> . LPAREN expression RPAREN
    (77) increment_decrement_op -> . PLUSPLUS
    (78) increment_decrement_op -> . MINUSMINUS

    MINUS           shift and go to state 98
    NUMBER          shift and go to state 160
    VARIABLE        shift and go to state 161
    LPAREN          shift and go to state 103
    PLUSPLUS        shift and go to state 104
    MINUSMINUS      shift and go to state 105

    for_expr                       shift and go to state 268
    expression                     shift and go to state 269
    additive_expression            shift and go to state 92
    term                           shift and go to state 94
    factor                         shift and go to state 99
    increment_decrement_op         shift and go to state 100

state 207

    (123) for_init -> var_declaration2 . SEMICOLON

    SEMICOLON       shift and go to state 270


state 208

    (127) foreach_loop -> foreach LPAREN expression . as expression RPAREN LBLOCK declaration_list RBLOCK
    (128) foreach_loop -> foreach LPAREN expression . as expression RPAREN COLON declaration_list endforeach SEMICOLON

    as              shift and go to state 271


state 209

    (129) switch_statement -> switch LPAREN expression . RPAREN LBLOCK case_blocks default_block RBLOCK
    (130) switch_statement -> switch LPAREN expression . RPAREN COLON case_blocks default_block endswitch SEMICOLON

    RPAREN          shift and go to state 272


state 210

    (126) exit_statement -> exit LPAREN expression . RPAREN SEMICOLON

    RPAREN          shift and go to state 273


state 211

    (56) assignment_tail -> VARIABLE LBRACKET . expression COMMA params
    (57) assignment_tail -> VARIABLE LBRACKET . params RBRACKET
    (63) expression -> . additive_expression
    (64) expression -> . additive_expression logical_op additive_expression
    (65) expression -> . additive_expression comp_op additive_expression
    (66) expression -> . additive_expression comp_op additive_expression logical_op additive_expression comp_op additive_expression
    (67) expression -> . additive_expression bits_op additive_expression
    (116) params -> . single_param
    (117) params -> . params COMMA single_param
    (68) additive_expression -> . term
    (69) additive_expression -> . term math_op term
    (118) single_param -> . var_declaration2
    (119) single_param -> . data_type
    (120) single_param -> . empty_function
    (70) term -> . MINUS term
    (71) term -> . factor
    (72) term -> . factor increment_decrement_op
    (73) term -> . increment_decrement_op factor
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (27) data_type -> . NUMBER
    (28) data_type -> . CADENA
    (174) empty_function -> .
    (74) factor -> . NUMBER
    (75) factor -> . VARIABLE
    (76) factor -> . LPAREN expression RPAREN
    (77) increment_decrement_op -> . PLUSPLUS
    (78) increment_decrement_op -> . MINUSMINUS
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    MINUS           shift and go to state 98
    VARIABLE        shift and go to state 101
    NUMBER          shift and go to state 102
    CADENA          shift and go to state 80
    RBRACKET        reduce using rule 174 (empty_function -> .)
    COMMA           reduce using rule 174 (empty_function -> .)
    LPAREN          shift and go to state 103
    PLUSPLUS        shift and go to state 104
    MINUSMINUS      shift and go to state 105
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69

    expression                     shift and go to state 274
    params                         shift and go to state 275
    additive_expression            shift and go to state 92
    single_param                   shift and go to state 93
    term                           shift and go to state 94
    var_declaration2               shift and go to state 95
    data_type                      shift and go to state 96
    empty_function                 shift and go to state 97
    factor                         shift and go to state 99
    increment_decrement_op         shift and go to state 100
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 212

    (58) assignment_tail -> VARIABLE LBLOCK . params RBLOCK
    (116) params -> . single_param
    (117) params -> . params COMMA single_param
    (118) single_param -> . var_declaration2
    (119) single_param -> . data_type
    (120) single_param -> . empty_function
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (27) data_type -> . NUMBER
    (28) data_type -> . CADENA
    (174) empty_function -> .
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 46
    NUMBER          shift and go to state 79
    CADENA          shift and go to state 80
    RBLOCK          reduce using rule 174 (empty_function -> .)
    COMMA           reduce using rule 174 (empty_function -> .)
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69

    params                         shift and go to state 276
    single_param                   shift and go to state 93
    var_declaration2               shift and go to state 95
    data_type                      shift and go to state 96
    empty_function                 shift and go to state 97
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 213

    (42) var_declaration2 -> VARIABLE EQUAL VARIABLE .
    (56) assignment_tail -> VARIABLE . LBRACKET expression COMMA params
    (57) assignment_tail -> VARIABLE . LBRACKET params RBRACKET
    (58) assignment_tail -> VARIABLE . LBLOCK params RBLOCK
    (75) factor -> VARIABLE .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 42 (var_declaration2 -> VARIABLE EQUAL VARIABLE .)
  ! reduce/reduce conflict for COMMA resolved using rule 42 (var_declaration2 -> VARIABLE EQUAL VARIABLE .)
  ! reduce/reduce conflict for RPAREN resolved using rule 42 (var_declaration2 -> VARIABLE EQUAL VARIABLE .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 42 (var_declaration2 -> VARIABLE EQUAL VARIABLE .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 42 (var_declaration2 -> VARIABLE EQUAL VARIABLE .)
    SEMICOLON       reduce using rule 42 (var_declaration2 -> VARIABLE EQUAL VARIABLE .)
    COMMA           reduce using rule 42 (var_declaration2 -> VARIABLE EQUAL VARIABLE .)
    RPAREN          reduce using rule 42 (var_declaration2 -> VARIABLE EQUAL VARIABLE .)
    RBRACKET        reduce using rule 42 (var_declaration2 -> VARIABLE EQUAL VARIABLE .)
    RBLOCK          reduce using rule 42 (var_declaration2 -> VARIABLE EQUAL VARIABLE .)
    LBRACKET        shift and go to state 211
    LBLOCK          shift and go to state 212
    PLUSPLUS        reduce using rule 75 (factor -> VARIABLE .)
    MINUSMINUS      reduce using rule 75 (factor -> VARIABLE .)
    PLUS            reduce using rule 75 (factor -> VARIABLE .)
    MINUS           reduce using rule 75 (factor -> VARIABLE .)
    TIMES           reduce using rule 75 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 75 (factor -> VARIABLE .)
    MULEQUAL        reduce using rule 75 (factor -> VARIABLE .)
    PLUSEQUAL       reduce using rule 75 (factor -> VARIABLE .)
    MINUSEQUAL      reduce using rule 75 (factor -> VARIABLE .)
    MOD             reduce using rule 75 (factor -> VARIABLE .)
    BOOL_OR         reduce using rule 75 (factor -> VARIABLE .)
    BOOL_AND        reduce using rule 75 (factor -> VARIABLE .)
    NOT             reduce using rule 75 (factor -> VARIABLE .)
    or              reduce using rule 75 (factor -> VARIABLE .)
    and             reduce using rule 75 (factor -> VARIABLE .)
    xor             reduce using rule 75 (factor -> VARIABLE .)
    LESS            reduce using rule 75 (factor -> VARIABLE .)
    LESSEQUAL       reduce using rule 75 (factor -> VARIABLE .)
    GREATER         reduce using rule 75 (factor -> VARIABLE .)
    GREATEREQUAL    reduce using rule 75 (factor -> VARIABLE .)
    DEQUAL          reduce using rule 75 (factor -> VARIABLE .)
    DISTINT         reduce using rule 75 (factor -> VARIABLE .)
    DIVEQUAL        reduce using rule 75 (factor -> VARIABLE .)
    ISEQUAL         reduce using rule 75 (factor -> VARIABLE .)
    ISIDENTICAL     reduce using rule 75 (factor -> VARIABLE .)
    ISNOTIDENTICAL  reduce using rule 75 (factor -> VARIABLE .)
    AMPERSANT       reduce using rule 75 (factor -> VARIABLE .)
    SR              reduce using rule 75 (factor -> VARIABLE .)
    SL              reduce using rule 75 (factor -> VARIABLE .)

  ! SEMICOLON       [ reduce using rule 75 (factor -> VARIABLE .) ]
  ! COMMA           [ reduce using rule 75 (factor -> VARIABLE .) ]
  ! RPAREN          [ reduce using rule 75 (factor -> VARIABLE .) ]
  ! RBRACKET        [ reduce using rule 75 (factor -> VARIABLE .) ]
  ! RBLOCK          [ reduce using rule 75 (factor -> VARIABLE .) ]


state 214

    (41) var_declaration2 -> VARIABLE EQUAL NUMBER .
    (74) factor -> NUMBER .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 41 (var_declaration2 -> VARIABLE EQUAL NUMBER .)
  ! reduce/reduce conflict for COMMA resolved using rule 41 (var_declaration2 -> VARIABLE EQUAL NUMBER .)
  ! reduce/reduce conflict for RPAREN resolved using rule 41 (var_declaration2 -> VARIABLE EQUAL NUMBER .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 41 (var_declaration2 -> VARIABLE EQUAL NUMBER .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 41 (var_declaration2 -> VARIABLE EQUAL NUMBER .)
    SEMICOLON       reduce using rule 41 (var_declaration2 -> VARIABLE EQUAL NUMBER .)
    COMMA           reduce using rule 41 (var_declaration2 -> VARIABLE EQUAL NUMBER .)
    RPAREN          reduce using rule 41 (var_declaration2 -> VARIABLE EQUAL NUMBER .)
    RBRACKET        reduce using rule 41 (var_declaration2 -> VARIABLE EQUAL NUMBER .)
    RBLOCK          reduce using rule 41 (var_declaration2 -> VARIABLE EQUAL NUMBER .)
    PLUSPLUS        reduce using rule 74 (factor -> NUMBER .)
    MINUSMINUS      reduce using rule 74 (factor -> NUMBER .)
    PLUS            reduce using rule 74 (factor -> NUMBER .)
    MINUS           reduce using rule 74 (factor -> NUMBER .)
    TIMES           reduce using rule 74 (factor -> NUMBER .)
    DIVIDE          reduce using rule 74 (factor -> NUMBER .)
    MULEQUAL        reduce using rule 74 (factor -> NUMBER .)
    PLUSEQUAL       reduce using rule 74 (factor -> NUMBER .)
    MINUSEQUAL      reduce using rule 74 (factor -> NUMBER .)
    MOD             reduce using rule 74 (factor -> NUMBER .)
    BOOL_OR         reduce using rule 74 (factor -> NUMBER .)
    BOOL_AND        reduce using rule 74 (factor -> NUMBER .)
    NOT             reduce using rule 74 (factor -> NUMBER .)
    or              reduce using rule 74 (factor -> NUMBER .)
    and             reduce using rule 74 (factor -> NUMBER .)
    xor             reduce using rule 74 (factor -> NUMBER .)
    LESS            reduce using rule 74 (factor -> NUMBER .)
    LESSEQUAL       reduce using rule 74 (factor -> NUMBER .)
    GREATER         reduce using rule 74 (factor -> NUMBER .)
    GREATEREQUAL    reduce using rule 74 (factor -> NUMBER .)
    DEQUAL          reduce using rule 74 (factor -> NUMBER .)
    DISTINT         reduce using rule 74 (factor -> NUMBER .)
    DIVEQUAL        reduce using rule 74 (factor -> NUMBER .)
    ISEQUAL         reduce using rule 74 (factor -> NUMBER .)
    ISIDENTICAL     reduce using rule 74 (factor -> NUMBER .)
    ISNOTIDENTICAL  reduce using rule 74 (factor -> NUMBER .)
    AMPERSANT       reduce using rule 74 (factor -> NUMBER .)
    SR              reduce using rule 74 (factor -> NUMBER .)
    SL              reduce using rule 74 (factor -> NUMBER .)

  ! SEMICOLON       [ reduce using rule 74 (factor -> NUMBER .) ]
  ! COMMA           [ reduce using rule 74 (factor -> NUMBER .) ]
  ! RPAREN          [ reduce using rule 74 (factor -> NUMBER .) ]
  ! RBRACKET        [ reduce using rule 74 (factor -> NUMBER .) ]
  ! RBLOCK          [ reduce using rule 74 (factor -> NUMBER .) ]


state 215

    (43) var_declaration2 -> VARIABLE EQUAL CADENA .

    SEMICOLON       reduce using rule 43 (var_declaration2 -> VARIABLE EQUAL CADENA .)
    COMMA           reduce using rule 43 (var_declaration2 -> VARIABLE EQUAL CADENA .)
    RPAREN          reduce using rule 43 (var_declaration2 -> VARIABLE EQUAL CADENA .)
    RBRACKET        reduce using rule 43 (var_declaration2 -> VARIABLE EQUAL CADENA .)
    RBLOCK          reduce using rule 43 (var_declaration2 -> VARIABLE EQUAL CADENA .)


state 216

    (44) var_declaration2 -> VARIABLE EQUAL Built_In_Declaration .

    SEMICOLON       reduce using rule 44 (var_declaration2 -> VARIABLE EQUAL Built_In_Declaration .)
    COMMA           reduce using rule 44 (var_declaration2 -> VARIABLE EQUAL Built_In_Declaration .)
    RPAREN          reduce using rule 44 (var_declaration2 -> VARIABLE EQUAL Built_In_Declaration .)
    RBRACKET        reduce using rule 44 (var_declaration2 -> VARIABLE EQUAL Built_In_Declaration .)
    RBLOCK          reduce using rule 44 (var_declaration2 -> VARIABLE EQUAL Built_In_Declaration .)


state 217

    (45) var_declaration2 -> VARIABLE EQUAL expression .

    SEMICOLON       reduce using rule 45 (var_declaration2 -> VARIABLE EQUAL expression .)
    COMMA           reduce using rule 45 (var_declaration2 -> VARIABLE EQUAL expression .)
    RPAREN          reduce using rule 45 (var_declaration2 -> VARIABLE EQUAL expression .)
    RBRACKET        reduce using rule 45 (var_declaration2 -> VARIABLE EQUAL expression .)
    RBLOCK          reduce using rule 45 (var_declaration2 -> VARIABLE EQUAL expression .)


state 218

    (50) var_declaration2 -> VARIABLE EQUAL ID . LPAREN params RPAREN

    LPAREN          shift and go to state 277


state 219

    (52) var_declaration2 -> VARIABLE EQUAL assignment_tail .

    SEMICOLON       reduce using rule 52 (var_declaration2 -> VARIABLE EQUAL assignment_tail .)
    COMMA           reduce using rule 52 (var_declaration2 -> VARIABLE EQUAL assignment_tail .)
    RPAREN          reduce using rule 52 (var_declaration2 -> VARIABLE EQUAL assignment_tail .)
    RBRACKET        reduce using rule 52 (var_declaration2 -> VARIABLE EQUAL assignment_tail .)
    RBLOCK          reduce using rule 52 (var_declaration2 -> VARIABLE EQUAL assignment_tail .)


state 220

    (46) var_declaration2 -> VARIABLE assignation VARIABLE .

    SEMICOLON       reduce using rule 46 (var_declaration2 -> VARIABLE assignation VARIABLE .)
    COMMA           reduce using rule 46 (var_declaration2 -> VARIABLE assignation VARIABLE .)
    RPAREN          reduce using rule 46 (var_declaration2 -> VARIABLE assignation VARIABLE .)
    RBRACKET        reduce using rule 46 (var_declaration2 -> VARIABLE assignation VARIABLE .)
    RBLOCK          reduce using rule 46 (var_declaration2 -> VARIABLE assignation VARIABLE .)


state 221

    (47) var_declaration2 -> VARIABLE assignation NUMBER .

    SEMICOLON       reduce using rule 47 (var_declaration2 -> VARIABLE assignation NUMBER .)
    COMMA           reduce using rule 47 (var_declaration2 -> VARIABLE assignation NUMBER .)
    RPAREN          reduce using rule 47 (var_declaration2 -> VARIABLE assignation NUMBER .)
    RBRACKET        reduce using rule 47 (var_declaration2 -> VARIABLE assignation NUMBER .)
    RBLOCK          reduce using rule 47 (var_declaration2 -> VARIABLE assignation NUMBER .)


state 222

    (162) Concatenar_Cadenas_declaration -> VARIABLE DOT VARIABLE .

    SEMICOLON       reduce using rule 162 (Concatenar_Cadenas_declaration -> VARIABLE DOT VARIABLE .)
    COMMA           reduce using rule 162 (Concatenar_Cadenas_declaration -> VARIABLE DOT VARIABLE .)
    RPAREN          reduce using rule 162 (Concatenar_Cadenas_declaration -> VARIABLE DOT VARIABLE .)
    RBRACKET        reduce using rule 162 (Concatenar_Cadenas_declaration -> VARIABLE DOT VARIABLE .)
    RBLOCK          reduce using rule 162 (Concatenar_Cadenas_declaration -> VARIABLE DOT VARIABLE .)


state 223

    (165) Concatenar_Cadenas_declaration -> VARIABLE DOT CADENA .

    SEMICOLON       reduce using rule 165 (Concatenar_Cadenas_declaration -> VARIABLE DOT CADENA .)
    COMMA           reduce using rule 165 (Concatenar_Cadenas_declaration -> VARIABLE DOT CADENA .)
    RPAREN          reduce using rule 165 (Concatenar_Cadenas_declaration -> VARIABLE DOT CADENA .)
    RBRACKET        reduce using rule 165 (Concatenar_Cadenas_declaration -> VARIABLE DOT CADENA .)
    RBLOCK          reduce using rule 165 (Concatenar_Cadenas_declaration -> VARIABLE DOT CADENA .)


state 224

    (53) assignment_tail -> COMMA var_declaration2 .

    SEMICOLON       reduce using rule 53 (assignment_tail -> COMMA var_declaration2 .)
    RPAREN          reduce using rule 53 (assignment_tail -> COMMA var_declaration2 .)
    COMMA           reduce using rule 53 (assignment_tail -> COMMA var_declaration2 .)
    RBRACKET        reduce using rule 53 (assignment_tail -> COMMA var_declaration2 .)
    RBLOCK          reduce using rule 53 (assignment_tail -> COMMA var_declaration2 .)


state 225

    (54) assignment_tail -> LBRACKET params . RBRACKET
    (117) params -> params . COMMA single_param

    RBRACKET        shift and go to state 278
    COMMA           shift and go to state 168


state 226

    (55) assignment_tail -> LBLOCK params . RBLOCK
    (117) params -> params . COMMA single_param

    RBLOCK          shift and go to state 279
    COMMA           shift and go to state 168


state 227

    (141) Built_In_Declaration -> array LPAREN params . RPAREN
    (117) params -> params . COMMA single_param

    RPAREN          shift and go to state 280
    COMMA           shift and go to state 168


state 228

    (142) Built_In_Declaration -> pow LPAREN params . RPAREN
    (117) params -> params . COMMA single_param

    RPAREN          shift and go to state 281
    COMMA           shift and go to state 168


state 229

    (143) Built_In_Declaration -> POW LPAREN params . RPAREN
    (117) params -> params . COMMA single_param

    RPAREN          shift and go to state 282
    COMMA           shift and go to state 168


state 230

    (144) Built_In_Declaration -> abs LPAREN params . RPAREN
    (117) params -> params . COMMA single_param

    RPAREN          shift and go to state 283
    COMMA           shift and go to state 168


state 231

    (145) Built_In_Declaration -> cos LPAREN params . RPAREN
    (117) params -> params . COMMA single_param

    RPAREN          shift and go to state 284
    COMMA           shift and go to state 168


state 232

    (146) Built_In_Declaration -> deg2rad LPAREN params . RPAREN
    (117) params -> params . COMMA single_param

    RPAREN          shift and go to state 285
    COMMA           shift and go to state 168


state 233

    (147) Built_In_Declaration -> rad2deg LPAREN params . RPAREN
    (117) params -> params . COMMA single_param

    RPAREN          shift and go to state 286
    COMMA           shift and go to state 168


state 234

    (148) Built_In_Declaration -> die LPAREN params . RPAREN
    (117) params -> params . COMMA single_param

    RPAREN          shift and go to state 287
    COMMA           shift and go to state 168


state 235

    (149) Built_In_Declaration -> exp LPAREN params . RPAREN
    (117) params -> params . COMMA single_param

    RPAREN          shift and go to state 288
    COMMA           shift and go to state 168


state 236

    (150) Built_In_Declaration -> floor LPAREN params . RPAREN
    (117) params -> params . COMMA single_param

    RPAREN          shift and go to state 289
    COMMA           shift and go to state 168


state 237

    (151) Built_In_Declaration -> isset LPAREN params . RPAREN
    (117) params -> params . COMMA single_param

    RPAREN          shift and go to state 290
    COMMA           shift and go to state 168


state 238

    (152) Built_In_Declaration -> list LPAREN params . RPAREN
    (117) params -> params . COMMA single_param

    RPAREN          shift and go to state 291
    COMMA           shift and go to state 168


state 239

    (153) Built_In_Declaration -> log LPAREN params . RPAREN
    (117) params -> params . COMMA single_param

    RPAREN          shift and go to state 292
    COMMA           shift and go to state 168


state 240

    (154) Built_In_Declaration -> log10 LPAREN params . RPAREN
    (117) params -> params . COMMA single_param

    RPAREN          shift and go to state 293
    COMMA           shift and go to state 168


state 241

    (155) Built_In_Declaration -> max LPAREN params . RPAREN
    (117) params -> params . COMMA single_param

    RPAREN          shift and go to state 294
    COMMA           shift and go to state 168


state 242

    (156) Built_In_Declaration -> min LPAREN params . RPAREN
    (117) params -> params . COMMA single_param

    RPAREN          shift and go to state 295
    COMMA           shift and go to state 168


state 243

    (157) Built_In_Declaration -> rand LPAREN params . RPAREN
    (117) params -> params . COMMA single_param

    RPAREN          shift and go to state 296
    COMMA           shift and go to state 168


state 244

    (158) Built_In_Declaration -> round LPAREN params . RPAREN
    (117) params -> params . COMMA single_param

    RPAREN          shift and go to state 297
    COMMA           shift and go to state 168


state 245

    (159) Built_In_Declaration -> sin LPAREN params . RPAREN
    (117) params -> params . COMMA single_param

    RPAREN          shift and go to state 298
    COMMA           shift and go to state 168


state 246

    (160) Built_In_Declaration -> sqrt LPAREN params . RPAREN
    (117) params -> params . COMMA single_param

    RPAREN          shift and go to state 299
    COMMA           shift and go to state 168


state 247

    (161) Built_In_Declaration -> unset LPAREN params . RPAREN
    (117) params -> params . COMMA single_param

    RPAREN          shift and go to state 300
    COMMA           shift and go to state 168


state 248

    (30) constant_declaration -> const ID EQUAL data_type . SEMICOLON

    SEMICOLON       shift and go to state 301


state 249

    (28) data_type -> CADENA .

    SEMICOLON       reduce using rule 28 (data_type -> CADENA .)


state 250

    (110) fun_call -> ID LPAREN params RPAREN .

    COMMENT         reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)
    COMMENT_HASHTAG reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)
    COMMENT_MULTI   reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)
    empty           reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)
    include         reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)
    const           reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)
    print           reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)
    echo            reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)
    while           reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)
    do              reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)
    if              reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)
    function        reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)
    ID              reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)
    return          reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)
    class           reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)
    new             reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)
    CLOSE_TAG       reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)
    for             reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)
    foreach         reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)
    switch          reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)
    exit            reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)
    VARIABLE        reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)
    array           reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)
    pow             reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)
    POW             reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)
    abs             reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)
    cos             reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)
    deg2rad         reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)
    rad2deg         reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)
    die             reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)
    exp             reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)
    floor           reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)
    isset           reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)
    list            reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)
    log             reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)
    log10           reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)
    max             reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)
    min             reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)
    rand            reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)
    round           reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)
    sin             reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)
    sqrt            reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)
    unset           reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)
    CADENA          reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)
    $end            reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)
    RBLOCK          reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)
    endwhile        reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)
    endfor          reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)
    endforeach      reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)
    endswitch       reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)
    break           reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)
    default         reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)
    case            reduce using rule 110 (fun_call -> ID LPAREN params RPAREN .)


state 251

    (32) print_declaration -> print LPAREN var_declaration2 RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 302


state 252

    (33) print_declaration -> print LPAREN data_type RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 303


state 253

    (36) echo_declaration -> echo LPAREN var_declaration2 RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 304


state 254

    (37) echo_declaration -> echo LPAREN data_type RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 305


state 255

    (59) iteration_stmt -> while LPAREN expression RPAREN . LBLOCK declaration RBLOCK
    (60) iteration_stmt -> while LPAREN expression RPAREN . COLON declaration endwhile SEMICOLON

    LBLOCK          shift and go to state 306
    COLON           shift and go to state 307


state 256

    (61) iteration_stmt -> do LBLOCK declaration RBLOCK . while LPAREN expression RPAREN SEMICOLON

    while           shift and go to state 308


state 257

    (62) iteration_stmt -> do COLON declaration endwhile . SEMICOLON

    SEMICOLON       shift and go to state 309


state 258

    (103) if_statement -> if LPAREN expression RPAREN . LBLOCK declaration_list RBLOCK else_part

    LBLOCK          shift and go to state 310


state 259

    (108) fun_declaration -> function ID LPAREN params . RPAREN LBLOCK declaration_list RBLOCK
    (109) fun_declaration -> function ID LPAREN params . RPAREN LBLOCK declaration_list return_statement RBLOCK
    (117) params -> params . COMMA single_param

    RPAREN          shift and go to state 311
    COMMA           shift and go to state 168


state 260

    (117) params -> params COMMA single_param .

    SEMICOLON       reduce using rule 117 (params -> params COMMA single_param .)
    COMMA           reduce using rule 117 (params -> params COMMA single_param .)
    RPAREN          reduce using rule 117 (params -> params COMMA single_param .)
    RBRACKET        reduce using rule 117 (params -> params COMMA single_param .)
    RBLOCK          reduce using rule 117 (params -> params COMMA single_param .)


state 261

    (64) expression -> additive_expression logical_op additive_expression .

    SEMICOLON       reduce using rule 64 (expression -> additive_expression logical_op additive_expression .)
    RPAREN          reduce using rule 64 (expression -> additive_expression logical_op additive_expression .)
    as              reduce using rule 64 (expression -> additive_expression logical_op additive_expression .)
    COMMA           reduce using rule 64 (expression -> additive_expression logical_op additive_expression .)
    RBRACKET        reduce using rule 64 (expression -> additive_expression logical_op additive_expression .)
    RBLOCK          reduce using rule 64 (expression -> additive_expression logical_op additive_expression .)
    COLON           reduce using rule 64 (expression -> additive_expression logical_op additive_expression .)


state 262

    (65) expression -> additive_expression comp_op additive_expression .
    (66) expression -> additive_expression comp_op additive_expression . logical_op additive_expression comp_op additive_expression
    (97) logical_op -> . BOOL_OR
    (98) logical_op -> . BOOL_AND
    (99) logical_op -> . NOT
    (100) logical_op -> . or
    (101) logical_op -> . and
    (102) logical_op -> . xor

    SEMICOLON       reduce using rule 65 (expression -> additive_expression comp_op additive_expression .)
    RPAREN          reduce using rule 65 (expression -> additive_expression comp_op additive_expression .)
    as              reduce using rule 65 (expression -> additive_expression comp_op additive_expression .)
    COMMA           reduce using rule 65 (expression -> additive_expression comp_op additive_expression .)
    RBRACKET        reduce using rule 65 (expression -> additive_expression comp_op additive_expression .)
    RBLOCK          reduce using rule 65 (expression -> additive_expression comp_op additive_expression .)
    COLON           reduce using rule 65 (expression -> additive_expression comp_op additive_expression .)
    BOOL_OR         shift and go to state 172
    BOOL_AND        shift and go to state 173
    NOT             shift and go to state 174
    or              shift and go to state 175
    and             shift and go to state 176
    xor             shift and go to state 177

    logical_op                     shift and go to state 312

state 263

    (67) expression -> additive_expression bits_op additive_expression .

    SEMICOLON       reduce using rule 67 (expression -> additive_expression bits_op additive_expression .)
    RPAREN          reduce using rule 67 (expression -> additive_expression bits_op additive_expression .)
    as              reduce using rule 67 (expression -> additive_expression bits_op additive_expression .)
    COMMA           reduce using rule 67 (expression -> additive_expression bits_op additive_expression .)
    RBRACKET        reduce using rule 67 (expression -> additive_expression bits_op additive_expression .)
    RBLOCK          reduce using rule 67 (expression -> additive_expression bits_op additive_expression .)
    COLON           reduce using rule 67 (expression -> additive_expression bits_op additive_expression .)


state 264

    (69) additive_expression -> term math_op term .

    BOOL_OR         reduce using rule 69 (additive_expression -> term math_op term .)
    BOOL_AND        reduce using rule 69 (additive_expression -> term math_op term .)
    NOT             reduce using rule 69 (additive_expression -> term math_op term .)
    or              reduce using rule 69 (additive_expression -> term math_op term .)
    and             reduce using rule 69 (additive_expression -> term math_op term .)
    xor             reduce using rule 69 (additive_expression -> term math_op term .)
    LESS            reduce using rule 69 (additive_expression -> term math_op term .)
    LESSEQUAL       reduce using rule 69 (additive_expression -> term math_op term .)
    GREATER         reduce using rule 69 (additive_expression -> term math_op term .)
    GREATEREQUAL    reduce using rule 69 (additive_expression -> term math_op term .)
    DEQUAL          reduce using rule 69 (additive_expression -> term math_op term .)
    DISTINT         reduce using rule 69 (additive_expression -> term math_op term .)
    DIVEQUAL        reduce using rule 69 (additive_expression -> term math_op term .)
    ISEQUAL         reduce using rule 69 (additive_expression -> term math_op term .)
    ISIDENTICAL     reduce using rule 69 (additive_expression -> term math_op term .)
    ISNOTIDENTICAL  reduce using rule 69 (additive_expression -> term math_op term .)
    AMPERSANT       reduce using rule 69 (additive_expression -> term math_op term .)
    SR              reduce using rule 69 (additive_expression -> term math_op term .)
    SL              reduce using rule 69 (additive_expression -> term math_op term .)
    SEMICOLON       reduce using rule 69 (additive_expression -> term math_op term .)
    RPAREN          reduce using rule 69 (additive_expression -> term math_op term .)
    as              reduce using rule 69 (additive_expression -> term math_op term .)
    COMMA           reduce using rule 69 (additive_expression -> term math_op term .)
    RBRACKET        reduce using rule 69 (additive_expression -> term math_op term .)
    RBLOCK          reduce using rule 69 (additive_expression -> term math_op term .)
    COLON           reduce using rule 69 (additive_expression -> term math_op term .)


state 265

    (76) factor -> LPAREN expression RPAREN .

    PLUSPLUS        reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    MINUSMINUS      reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    MULEQUAL        reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    PLUSEQUAL       reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    MINUSEQUAL      reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    MOD             reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    BOOL_OR         reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    BOOL_AND        reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    NOT             reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    or              reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    and             reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    xor             reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    LESS            reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    LESSEQUAL       reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    GREATEREQUAL    reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    DEQUAL          reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    DISTINT         reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    DIVEQUAL        reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    ISEQUAL         reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    ISIDENTICAL     reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    ISNOTIDENTICAL  reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    AMPERSANT       reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    SR              reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    SL              reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    as              reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    RBLOCK          reduce using rule 76 (factor -> LPAREN expression RPAREN .)
    COLON           reduce using rule 76 (factor -> LPAREN expression RPAREN .)


state 266

    (114) obj_declaration -> class ID LBLOCK declaration . RBLOCK

    RBLOCK          shift and go to state 313


state 267

    (115) create_obj_declaration -> new ID LPAREN params . RPAREN
    (117) params -> params . COMMA single_param

    RPAREN          shift and go to state 314
    COMMA           shift and go to state 168


state 268

    (121) for_loop -> for LPAREN for_init for_expr . for_update RPAREN LBLOCK declaration_list RBLOCK
    (122) for_loop -> for LPAREN for_init for_expr . for_update RPAREN COLON declaration_list endfor SEMICOLON
    (125) for_update -> . expression
    (63) expression -> . additive_expression
    (64) expression -> . additive_expression logical_op additive_expression
    (65) expression -> . additive_expression comp_op additive_expression
    (66) expression -> . additive_expression comp_op additive_expression logical_op additive_expression comp_op additive_expression
    (67) expression -> . additive_expression bits_op additive_expression
    (68) additive_expression -> . term
    (69) additive_expression -> . term math_op term
    (70) term -> . MINUS term
    (71) term -> . factor
    (72) term -> . factor increment_decrement_op
    (73) term -> . increment_decrement_op factor
    (74) factor -> . NUMBER
    (75) factor -> . VARIABLE
    (76) factor -> . LPAREN expression RPAREN
    (77) increment_decrement_op -> . PLUSPLUS
    (78) increment_decrement_op -> . MINUSMINUS

    MINUS           shift and go to state 98
    NUMBER          shift and go to state 160
    VARIABLE        shift and go to state 161
    LPAREN          shift and go to state 103
    PLUSPLUS        shift and go to state 104
    MINUSMINUS      shift and go to state 105

    for_update                     shift and go to state 315
    expression                     shift and go to state 316
    additive_expression            shift and go to state 92
    term                           shift and go to state 94
    factor                         shift and go to state 99
    increment_decrement_op         shift and go to state 100

state 269

    (124) for_expr -> expression . SEMICOLON

    SEMICOLON       shift and go to state 317


state 270

    (123) for_init -> var_declaration2 SEMICOLON .

    MINUS           reduce using rule 123 (for_init -> var_declaration2 SEMICOLON .)
    NUMBER          reduce using rule 123 (for_init -> var_declaration2 SEMICOLON .)
    VARIABLE        reduce using rule 123 (for_init -> var_declaration2 SEMICOLON .)
    LPAREN          reduce using rule 123 (for_init -> var_declaration2 SEMICOLON .)
    PLUSPLUS        reduce using rule 123 (for_init -> var_declaration2 SEMICOLON .)
    MINUSMINUS      reduce using rule 123 (for_init -> var_declaration2 SEMICOLON .)


state 271

    (127) foreach_loop -> foreach LPAREN expression as . expression RPAREN LBLOCK declaration_list RBLOCK
    (128) foreach_loop -> foreach LPAREN expression as . expression RPAREN COLON declaration_list endforeach SEMICOLON
    (63) expression -> . additive_expression
    (64) expression -> . additive_expression logical_op additive_expression
    (65) expression -> . additive_expression comp_op additive_expression
    (66) expression -> . additive_expression comp_op additive_expression logical_op additive_expression comp_op additive_expression
    (67) expression -> . additive_expression bits_op additive_expression
    (68) additive_expression -> . term
    (69) additive_expression -> . term math_op term
    (70) term -> . MINUS term
    (71) term -> . factor
    (72) term -> . factor increment_decrement_op
    (73) term -> . increment_decrement_op factor
    (74) factor -> . NUMBER
    (75) factor -> . VARIABLE
    (76) factor -> . LPAREN expression RPAREN
    (77) increment_decrement_op -> . PLUSPLUS
    (78) increment_decrement_op -> . MINUSMINUS

    MINUS           shift and go to state 98
    NUMBER          shift and go to state 160
    VARIABLE        shift and go to state 161
    LPAREN          shift and go to state 103
    PLUSPLUS        shift and go to state 104
    MINUSMINUS      shift and go to state 105

    expression                     shift and go to state 318
    additive_expression            shift and go to state 92
    term                           shift and go to state 94
    factor                         shift and go to state 99
    increment_decrement_op         shift and go to state 100

state 272

    (129) switch_statement -> switch LPAREN expression RPAREN . LBLOCK case_blocks default_block RBLOCK
    (130) switch_statement -> switch LPAREN expression RPAREN . COLON case_blocks default_block endswitch SEMICOLON

    LBLOCK          shift and go to state 319
    COLON           shift and go to state 320


state 273

    (126) exit_statement -> exit LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 321


state 274

    (56) assignment_tail -> VARIABLE LBRACKET expression . COMMA params

    COMMA           shift and go to state 322


state 275

    (57) assignment_tail -> VARIABLE LBRACKET params . RBRACKET
    (117) params -> params . COMMA single_param

    RBRACKET        shift and go to state 323
    COMMA           shift and go to state 168


state 276

    (58) assignment_tail -> VARIABLE LBLOCK params . RBLOCK
    (117) params -> params . COMMA single_param

    RBLOCK          shift and go to state 324
    COMMA           shift and go to state 168


state 277

    (50) var_declaration2 -> VARIABLE EQUAL ID LPAREN . params RPAREN
    (116) params -> . single_param
    (117) params -> . params COMMA single_param
    (118) single_param -> . var_declaration2
    (119) single_param -> . data_type
    (120) single_param -> . empty_function
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (27) data_type -> . NUMBER
    (28) data_type -> . CADENA
    (174) empty_function -> .
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 46
    NUMBER          shift and go to state 79
    CADENA          shift and go to state 80
    RPAREN          reduce using rule 174 (empty_function -> .)
    COMMA           reduce using rule 174 (empty_function -> .)
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69

    params                         shift and go to state 325
    single_param                   shift and go to state 93
    var_declaration2               shift and go to state 95
    data_type                      shift and go to state 96
    empty_function                 shift and go to state 97
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 278

    (54) assignment_tail -> LBRACKET params RBRACKET .

    SEMICOLON       reduce using rule 54 (assignment_tail -> LBRACKET params RBRACKET .)
    RPAREN          reduce using rule 54 (assignment_tail -> LBRACKET params RBRACKET .)
    COMMA           reduce using rule 54 (assignment_tail -> LBRACKET params RBRACKET .)
    RBRACKET        reduce using rule 54 (assignment_tail -> LBRACKET params RBRACKET .)
    RBLOCK          reduce using rule 54 (assignment_tail -> LBRACKET params RBRACKET .)


state 279

    (55) assignment_tail -> LBLOCK params RBLOCK .

    SEMICOLON       reduce using rule 55 (assignment_tail -> LBLOCK params RBLOCK .)
    RPAREN          reduce using rule 55 (assignment_tail -> LBLOCK params RBLOCK .)
    COMMA           reduce using rule 55 (assignment_tail -> LBLOCK params RBLOCK .)
    RBRACKET        reduce using rule 55 (assignment_tail -> LBLOCK params RBLOCK .)
    RBLOCK          reduce using rule 55 (assignment_tail -> LBLOCK params RBLOCK .)


state 280

    (141) Built_In_Declaration -> array LPAREN params RPAREN .

    SEMICOLON       reduce using rule 141 (Built_In_Declaration -> array LPAREN params RPAREN .)
    COMMA           reduce using rule 141 (Built_In_Declaration -> array LPAREN params RPAREN .)
    RPAREN          reduce using rule 141 (Built_In_Declaration -> array LPAREN params RPAREN .)
    RBRACKET        reduce using rule 141 (Built_In_Declaration -> array LPAREN params RPAREN .)
    RBLOCK          reduce using rule 141 (Built_In_Declaration -> array LPAREN params RPAREN .)


state 281

    (142) Built_In_Declaration -> pow LPAREN params RPAREN .

    SEMICOLON       reduce using rule 142 (Built_In_Declaration -> pow LPAREN params RPAREN .)
    COMMA           reduce using rule 142 (Built_In_Declaration -> pow LPAREN params RPAREN .)
    RPAREN          reduce using rule 142 (Built_In_Declaration -> pow LPAREN params RPAREN .)
    RBRACKET        reduce using rule 142 (Built_In_Declaration -> pow LPAREN params RPAREN .)
    RBLOCK          reduce using rule 142 (Built_In_Declaration -> pow LPAREN params RPAREN .)


state 282

    (143) Built_In_Declaration -> POW LPAREN params RPAREN .

    SEMICOLON       reduce using rule 143 (Built_In_Declaration -> POW LPAREN params RPAREN .)
    COMMA           reduce using rule 143 (Built_In_Declaration -> POW LPAREN params RPAREN .)
    RPAREN          reduce using rule 143 (Built_In_Declaration -> POW LPAREN params RPAREN .)
    RBRACKET        reduce using rule 143 (Built_In_Declaration -> POW LPAREN params RPAREN .)
    RBLOCK          reduce using rule 143 (Built_In_Declaration -> POW LPAREN params RPAREN .)


state 283

    (144) Built_In_Declaration -> abs LPAREN params RPAREN .

    SEMICOLON       reduce using rule 144 (Built_In_Declaration -> abs LPAREN params RPAREN .)
    COMMA           reduce using rule 144 (Built_In_Declaration -> abs LPAREN params RPAREN .)
    RPAREN          reduce using rule 144 (Built_In_Declaration -> abs LPAREN params RPAREN .)
    RBRACKET        reduce using rule 144 (Built_In_Declaration -> abs LPAREN params RPAREN .)
    RBLOCK          reduce using rule 144 (Built_In_Declaration -> abs LPAREN params RPAREN .)


state 284

    (145) Built_In_Declaration -> cos LPAREN params RPAREN .

    SEMICOLON       reduce using rule 145 (Built_In_Declaration -> cos LPAREN params RPAREN .)
    COMMA           reduce using rule 145 (Built_In_Declaration -> cos LPAREN params RPAREN .)
    RPAREN          reduce using rule 145 (Built_In_Declaration -> cos LPAREN params RPAREN .)
    RBRACKET        reduce using rule 145 (Built_In_Declaration -> cos LPAREN params RPAREN .)
    RBLOCK          reduce using rule 145 (Built_In_Declaration -> cos LPAREN params RPAREN .)


state 285

    (146) Built_In_Declaration -> deg2rad LPAREN params RPAREN .

    SEMICOLON       reduce using rule 146 (Built_In_Declaration -> deg2rad LPAREN params RPAREN .)
    COMMA           reduce using rule 146 (Built_In_Declaration -> deg2rad LPAREN params RPAREN .)
    RPAREN          reduce using rule 146 (Built_In_Declaration -> deg2rad LPAREN params RPAREN .)
    RBRACKET        reduce using rule 146 (Built_In_Declaration -> deg2rad LPAREN params RPAREN .)
    RBLOCK          reduce using rule 146 (Built_In_Declaration -> deg2rad LPAREN params RPAREN .)


state 286

    (147) Built_In_Declaration -> rad2deg LPAREN params RPAREN .

    SEMICOLON       reduce using rule 147 (Built_In_Declaration -> rad2deg LPAREN params RPAREN .)
    COMMA           reduce using rule 147 (Built_In_Declaration -> rad2deg LPAREN params RPAREN .)
    RPAREN          reduce using rule 147 (Built_In_Declaration -> rad2deg LPAREN params RPAREN .)
    RBRACKET        reduce using rule 147 (Built_In_Declaration -> rad2deg LPAREN params RPAREN .)
    RBLOCK          reduce using rule 147 (Built_In_Declaration -> rad2deg LPAREN params RPAREN .)


state 287

    (148) Built_In_Declaration -> die LPAREN params RPAREN .

    SEMICOLON       reduce using rule 148 (Built_In_Declaration -> die LPAREN params RPAREN .)
    COMMA           reduce using rule 148 (Built_In_Declaration -> die LPAREN params RPAREN .)
    RPAREN          reduce using rule 148 (Built_In_Declaration -> die LPAREN params RPAREN .)
    RBRACKET        reduce using rule 148 (Built_In_Declaration -> die LPAREN params RPAREN .)
    RBLOCK          reduce using rule 148 (Built_In_Declaration -> die LPAREN params RPAREN .)


state 288

    (149) Built_In_Declaration -> exp LPAREN params RPAREN .

    SEMICOLON       reduce using rule 149 (Built_In_Declaration -> exp LPAREN params RPAREN .)
    COMMA           reduce using rule 149 (Built_In_Declaration -> exp LPAREN params RPAREN .)
    RPAREN          reduce using rule 149 (Built_In_Declaration -> exp LPAREN params RPAREN .)
    RBRACKET        reduce using rule 149 (Built_In_Declaration -> exp LPAREN params RPAREN .)
    RBLOCK          reduce using rule 149 (Built_In_Declaration -> exp LPAREN params RPAREN .)


state 289

    (150) Built_In_Declaration -> floor LPAREN params RPAREN .

    SEMICOLON       reduce using rule 150 (Built_In_Declaration -> floor LPAREN params RPAREN .)
    COMMA           reduce using rule 150 (Built_In_Declaration -> floor LPAREN params RPAREN .)
    RPAREN          reduce using rule 150 (Built_In_Declaration -> floor LPAREN params RPAREN .)
    RBRACKET        reduce using rule 150 (Built_In_Declaration -> floor LPAREN params RPAREN .)
    RBLOCK          reduce using rule 150 (Built_In_Declaration -> floor LPAREN params RPAREN .)


state 290

    (151) Built_In_Declaration -> isset LPAREN params RPAREN .

    SEMICOLON       reduce using rule 151 (Built_In_Declaration -> isset LPAREN params RPAREN .)
    COMMA           reduce using rule 151 (Built_In_Declaration -> isset LPAREN params RPAREN .)
    RPAREN          reduce using rule 151 (Built_In_Declaration -> isset LPAREN params RPAREN .)
    RBRACKET        reduce using rule 151 (Built_In_Declaration -> isset LPAREN params RPAREN .)
    RBLOCK          reduce using rule 151 (Built_In_Declaration -> isset LPAREN params RPAREN .)


state 291

    (152) Built_In_Declaration -> list LPAREN params RPAREN .

    SEMICOLON       reduce using rule 152 (Built_In_Declaration -> list LPAREN params RPAREN .)
    COMMA           reduce using rule 152 (Built_In_Declaration -> list LPAREN params RPAREN .)
    RPAREN          reduce using rule 152 (Built_In_Declaration -> list LPAREN params RPAREN .)
    RBRACKET        reduce using rule 152 (Built_In_Declaration -> list LPAREN params RPAREN .)
    RBLOCK          reduce using rule 152 (Built_In_Declaration -> list LPAREN params RPAREN .)


state 292

    (153) Built_In_Declaration -> log LPAREN params RPAREN .

    SEMICOLON       reduce using rule 153 (Built_In_Declaration -> log LPAREN params RPAREN .)
    COMMA           reduce using rule 153 (Built_In_Declaration -> log LPAREN params RPAREN .)
    RPAREN          reduce using rule 153 (Built_In_Declaration -> log LPAREN params RPAREN .)
    RBRACKET        reduce using rule 153 (Built_In_Declaration -> log LPAREN params RPAREN .)
    RBLOCK          reduce using rule 153 (Built_In_Declaration -> log LPAREN params RPAREN .)


state 293

    (154) Built_In_Declaration -> log10 LPAREN params RPAREN .

    SEMICOLON       reduce using rule 154 (Built_In_Declaration -> log10 LPAREN params RPAREN .)
    COMMA           reduce using rule 154 (Built_In_Declaration -> log10 LPAREN params RPAREN .)
    RPAREN          reduce using rule 154 (Built_In_Declaration -> log10 LPAREN params RPAREN .)
    RBRACKET        reduce using rule 154 (Built_In_Declaration -> log10 LPAREN params RPAREN .)
    RBLOCK          reduce using rule 154 (Built_In_Declaration -> log10 LPAREN params RPAREN .)


state 294

    (155) Built_In_Declaration -> max LPAREN params RPAREN .

    SEMICOLON       reduce using rule 155 (Built_In_Declaration -> max LPAREN params RPAREN .)
    COMMA           reduce using rule 155 (Built_In_Declaration -> max LPAREN params RPAREN .)
    RPAREN          reduce using rule 155 (Built_In_Declaration -> max LPAREN params RPAREN .)
    RBRACKET        reduce using rule 155 (Built_In_Declaration -> max LPAREN params RPAREN .)
    RBLOCK          reduce using rule 155 (Built_In_Declaration -> max LPAREN params RPAREN .)


state 295

    (156) Built_In_Declaration -> min LPAREN params RPAREN .

    SEMICOLON       reduce using rule 156 (Built_In_Declaration -> min LPAREN params RPAREN .)
    COMMA           reduce using rule 156 (Built_In_Declaration -> min LPAREN params RPAREN .)
    RPAREN          reduce using rule 156 (Built_In_Declaration -> min LPAREN params RPAREN .)
    RBRACKET        reduce using rule 156 (Built_In_Declaration -> min LPAREN params RPAREN .)
    RBLOCK          reduce using rule 156 (Built_In_Declaration -> min LPAREN params RPAREN .)


state 296

    (157) Built_In_Declaration -> rand LPAREN params RPAREN .

    SEMICOLON       reduce using rule 157 (Built_In_Declaration -> rand LPAREN params RPAREN .)
    COMMA           reduce using rule 157 (Built_In_Declaration -> rand LPAREN params RPAREN .)
    RPAREN          reduce using rule 157 (Built_In_Declaration -> rand LPAREN params RPAREN .)
    RBRACKET        reduce using rule 157 (Built_In_Declaration -> rand LPAREN params RPAREN .)
    RBLOCK          reduce using rule 157 (Built_In_Declaration -> rand LPAREN params RPAREN .)


state 297

    (158) Built_In_Declaration -> round LPAREN params RPAREN .

    SEMICOLON       reduce using rule 158 (Built_In_Declaration -> round LPAREN params RPAREN .)
    COMMA           reduce using rule 158 (Built_In_Declaration -> round LPAREN params RPAREN .)
    RPAREN          reduce using rule 158 (Built_In_Declaration -> round LPAREN params RPAREN .)
    RBRACKET        reduce using rule 158 (Built_In_Declaration -> round LPAREN params RPAREN .)
    RBLOCK          reduce using rule 158 (Built_In_Declaration -> round LPAREN params RPAREN .)


state 298

    (159) Built_In_Declaration -> sin LPAREN params RPAREN .

    SEMICOLON       reduce using rule 159 (Built_In_Declaration -> sin LPAREN params RPAREN .)
    COMMA           reduce using rule 159 (Built_In_Declaration -> sin LPAREN params RPAREN .)
    RPAREN          reduce using rule 159 (Built_In_Declaration -> sin LPAREN params RPAREN .)
    RBRACKET        reduce using rule 159 (Built_In_Declaration -> sin LPAREN params RPAREN .)
    RBLOCK          reduce using rule 159 (Built_In_Declaration -> sin LPAREN params RPAREN .)


state 299

    (160) Built_In_Declaration -> sqrt LPAREN params RPAREN .

    SEMICOLON       reduce using rule 160 (Built_In_Declaration -> sqrt LPAREN params RPAREN .)
    COMMA           reduce using rule 160 (Built_In_Declaration -> sqrt LPAREN params RPAREN .)
    RPAREN          reduce using rule 160 (Built_In_Declaration -> sqrt LPAREN params RPAREN .)
    RBRACKET        reduce using rule 160 (Built_In_Declaration -> sqrt LPAREN params RPAREN .)
    RBLOCK          reduce using rule 160 (Built_In_Declaration -> sqrt LPAREN params RPAREN .)


state 300

    (161) Built_In_Declaration -> unset LPAREN params RPAREN .

    SEMICOLON       reduce using rule 161 (Built_In_Declaration -> unset LPAREN params RPAREN .)
    COMMA           reduce using rule 161 (Built_In_Declaration -> unset LPAREN params RPAREN .)
    RPAREN          reduce using rule 161 (Built_In_Declaration -> unset LPAREN params RPAREN .)
    RBRACKET        reduce using rule 161 (Built_In_Declaration -> unset LPAREN params RPAREN .)
    RBLOCK          reduce using rule 161 (Built_In_Declaration -> unset LPAREN params RPAREN .)


state 301

    (30) constant_declaration -> const ID EQUAL data_type SEMICOLON .

    COMMENT         reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    COMMENT_HASHTAG reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    COMMENT_MULTI   reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    empty           reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    include         reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    const           reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    print           reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    echo            reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    while           reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    do              reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    if              reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    function        reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    ID              reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    return          reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    class           reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    new             reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    CLOSE_TAG       reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    for             reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    foreach         reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    switch          reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    exit            reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    VARIABLE        reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    array           reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    pow             reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    POW             reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    abs             reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    cos             reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    deg2rad         reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    rad2deg         reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    die             reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    exp             reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    floor           reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    isset           reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    list            reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    log             reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    log10           reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    max             reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    min             reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    rand            reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    round           reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    sin             reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    sqrt            reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    unset           reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    CADENA          reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    $end            reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    RBLOCK          reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    endwhile        reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    endfor          reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    endforeach      reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    endswitch       reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    break           reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    default         reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    case            reduce using rule 30 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)


state 302

    (32) print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .

    COMMENT         reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    COMMENT_HASHTAG reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    COMMENT_MULTI   reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    empty           reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    include         reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    const           reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    print           reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    echo            reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    while           reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    do              reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    if              reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    function        reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    ID              reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    return          reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    class           reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    new             reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    CLOSE_TAG       reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    for             reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    foreach         reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    switch          reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    exit            reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    VARIABLE        reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    array           reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    pow             reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    POW             reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    abs             reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    cos             reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    deg2rad         reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    rad2deg         reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    die             reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    exp             reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    floor           reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    isset           reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    list            reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    log             reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    log10           reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    max             reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    min             reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    rand            reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    round           reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    sin             reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    sqrt            reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    unset           reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    CADENA          reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    $end            reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    RBLOCK          reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    endwhile        reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    endfor          reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    endforeach      reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    endswitch       reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    break           reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    default         reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    case            reduce using rule 32 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)


state 303

    (33) print_declaration -> print LPAREN data_type RPAREN SEMICOLON .

    COMMENT         reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    COMMENT_HASHTAG reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    COMMENT_MULTI   reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    empty           reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    include         reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    const           reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    print           reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    echo            reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    while           reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    do              reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    if              reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    function        reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    ID              reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    return          reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    class           reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    new             reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    CLOSE_TAG       reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    for             reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    foreach         reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    switch          reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    exit            reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    VARIABLE        reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    array           reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    pow             reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    POW             reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    abs             reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    cos             reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    deg2rad         reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    rad2deg         reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    die             reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    exp             reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    floor           reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    isset           reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    list            reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    log             reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    log10           reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    max             reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    min             reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    rand            reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    round           reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    sin             reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    sqrt            reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    unset           reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    CADENA          reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    $end            reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    RBLOCK          reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    endwhile        reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    endfor          reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    endforeach      reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    endswitch       reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    break           reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    default         reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    case            reduce using rule 33 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)


state 304

    (36) echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .

    COMMENT         reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    COMMENT_HASHTAG reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    COMMENT_MULTI   reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    empty           reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    include         reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    const           reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    print           reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    echo            reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    while           reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    do              reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    if              reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    function        reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    ID              reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    return          reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    class           reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    new             reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    CLOSE_TAG       reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    for             reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    foreach         reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    switch          reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    exit            reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    VARIABLE        reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    array           reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    pow             reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    POW             reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    abs             reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    cos             reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    deg2rad         reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    rad2deg         reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    die             reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    exp             reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    floor           reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    isset           reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    list            reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    log             reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    log10           reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    max             reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    min             reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    rand            reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    round           reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    sin             reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    sqrt            reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    unset           reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    CADENA          reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    $end            reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    RBLOCK          reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    endwhile        reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    endfor          reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    endforeach      reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    endswitch       reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    break           reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    default         reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    case            reduce using rule 36 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)


state 305

    (37) echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .

    COMMENT         reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    COMMENT_HASHTAG reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    COMMENT_MULTI   reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    empty           reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    include         reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    const           reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    print           reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    echo            reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    while           reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    do              reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    if              reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    function        reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    ID              reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    return          reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    class           reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    new             reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    CLOSE_TAG       reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    for             reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    foreach         reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    switch          reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    exit            reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    VARIABLE        reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    array           reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    pow             reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    POW             reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    abs             reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    cos             reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    deg2rad         reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    rad2deg         reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    die             reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    exp             reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    floor           reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    isset           reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    list            reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    log             reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    log10           reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    max             reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    min             reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    rand            reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    round           reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    sin             reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    sqrt            reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    unset           reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    CADENA          reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    $end            reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    RBLOCK          reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    endwhile        reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    endfor          reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    endforeach      reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    endswitch       reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    break           reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    default         reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    case            reduce using rule 37 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)


state 306

    (59) iteration_stmt -> while LPAREN expression RPAREN LBLOCK . declaration RBLOCK
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . return_statement
    (19) declaration -> . obj_declaration
    (20) declaration -> . create_obj_declaration
    (21) declaration -> . footer_declaration
    (22) declaration -> . for_loop
    (23) declaration -> . foreach_loop
    (24) declaration -> . switch_statement
    (25) declaration -> . exit_statement
    (26) declaration -> . empty
    (29) header_declaration -> . include CADENA SEMICOLON
    (39) var_declaration -> . var_declaration2 SEMICOLON
    (30) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (31) print_declaration -> . print var_declaration2 SEMICOLON
    (32) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (33) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (34) print_declaration -> . print data_type SEMICOLON
    (35) echo_declaration -> . echo var_declaration2 SEMICOLON
    (36) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (37) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (38) echo_declaration -> . echo data_type SEMICOLON
    (59) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (60) iteration_stmt -> . while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON
    (61) iteration_stmt -> . do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON
    (62) iteration_stmt -> . do COLON declaration endwhile SEMICOLON
    (103) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (108) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK
    (109) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK
    (110) fun_call -> . ID LPAREN params RPAREN
    (111) return_statement -> . return expression SEMICOLON
    (112) return_statement -> . return params SEMICOLON
    (113) return_statement -> . return SEMICOLON
    (114) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (115) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (121) for_loop -> . for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK
    (122) for_loop -> . for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON
    (127) foreach_loop -> . foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK
    (128) foreach_loop -> . foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON
    (129) switch_statement -> . switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK
    (130) switch_statement -> . switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON
    (126) exit_statement -> . exit LPAREN expression RPAREN SEMICOLON
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 26
    include         shift and go to state 27
    const           shift and go to state 30
    print           shift and go to state 32
    echo            shift and go to state 33
    while           shift and go to state 34
    do              shift and go to state 35
    if              shift and go to state 36
    function        shift and go to state 37
    ID              shift and go to state 31
    return          shift and go to state 38
    class           shift and go to state 39
    new             shift and go to state 40
    CLOSE_TAG       shift and go to state 41
    for             shift and go to state 42
    foreach         shift and go to state 43
    switch          shift and go to state 44
    exit            shift and go to state 45
    VARIABLE        shift and go to state 46
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69
    CADENA          shift and go to state 28

    declaration                    shift and go to state 326
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    return_statement               shift and go to state 18
    obj_declaration                shift and go to state 19
    create_obj_declaration         shift and go to state 20
    footer_declaration             shift and go to state 21
    for_loop                       shift and go to state 22
    foreach_loop                   shift and go to state 23
    switch_statement               shift and go to state 24
    exit_statement                 shift and go to state 25
    var_declaration2               shift and go to state 29
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 307

    (60) iteration_stmt -> while LPAREN expression RPAREN COLON . declaration endwhile SEMICOLON
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . return_statement
    (19) declaration -> . obj_declaration
    (20) declaration -> . create_obj_declaration
    (21) declaration -> . footer_declaration
    (22) declaration -> . for_loop
    (23) declaration -> . foreach_loop
    (24) declaration -> . switch_statement
    (25) declaration -> . exit_statement
    (26) declaration -> . empty
    (29) header_declaration -> . include CADENA SEMICOLON
    (39) var_declaration -> . var_declaration2 SEMICOLON
    (30) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (31) print_declaration -> . print var_declaration2 SEMICOLON
    (32) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (33) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (34) print_declaration -> . print data_type SEMICOLON
    (35) echo_declaration -> . echo var_declaration2 SEMICOLON
    (36) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (37) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (38) echo_declaration -> . echo data_type SEMICOLON
    (59) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (60) iteration_stmt -> . while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON
    (61) iteration_stmt -> . do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON
    (62) iteration_stmt -> . do COLON declaration endwhile SEMICOLON
    (103) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (108) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK
    (109) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK
    (110) fun_call -> . ID LPAREN params RPAREN
    (111) return_statement -> . return expression SEMICOLON
    (112) return_statement -> . return params SEMICOLON
    (113) return_statement -> . return SEMICOLON
    (114) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (115) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (121) for_loop -> . for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK
    (122) for_loop -> . for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON
    (127) foreach_loop -> . foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK
    (128) foreach_loop -> . foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON
    (129) switch_statement -> . switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK
    (130) switch_statement -> . switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON
    (126) exit_statement -> . exit LPAREN expression RPAREN SEMICOLON
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 26
    include         shift and go to state 27
    const           shift and go to state 30
    print           shift and go to state 32
    echo            shift and go to state 33
    while           shift and go to state 34
    do              shift and go to state 35
    if              shift and go to state 36
    function        shift and go to state 37
    ID              shift and go to state 31
    return          shift and go to state 38
    class           shift and go to state 39
    new             shift and go to state 40
    CLOSE_TAG       shift and go to state 41
    for             shift and go to state 42
    foreach         shift and go to state 43
    switch          shift and go to state 44
    exit            shift and go to state 45
    VARIABLE        shift and go to state 46
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69
    CADENA          shift and go to state 28

    declaration                    shift and go to state 327
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    return_statement               shift and go to state 18
    obj_declaration                shift and go to state 19
    create_obj_declaration         shift and go to state 20
    footer_declaration             shift and go to state 21
    for_loop                       shift and go to state 22
    foreach_loop                   shift and go to state 23
    switch_statement               shift and go to state 24
    exit_statement                 shift and go to state 25
    var_declaration2               shift and go to state 29
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 308

    (61) iteration_stmt -> do LBLOCK declaration RBLOCK while . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 328


state 309

    (62) iteration_stmt -> do COLON declaration endwhile SEMICOLON .

    COMMENT         reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)
    COMMENT_HASHTAG reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)
    COMMENT_MULTI   reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)
    empty           reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)
    include         reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)
    const           reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)
    print           reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)
    echo            reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)
    while           reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)
    do              reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)
    if              reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)
    function        reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)
    ID              reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)
    return          reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)
    class           reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)
    new             reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)
    CLOSE_TAG       reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)
    for             reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)
    foreach         reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)
    switch          reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)
    exit            reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)
    VARIABLE        reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)
    array           reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)
    pow             reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)
    POW             reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)
    abs             reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)
    cos             reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)
    deg2rad         reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)
    rad2deg         reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)
    die             reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)
    exp             reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)
    floor           reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)
    isset           reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)
    list            reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)
    log             reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)
    log10           reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)
    max             reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)
    min             reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)
    rand            reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)
    round           reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)
    sin             reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)
    sqrt            reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)
    unset           reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)
    CADENA          reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)
    $end            reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)
    RBLOCK          reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)
    endwhile        reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)
    endfor          reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)
    endforeach      reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)
    endswitch       reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)
    break           reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)
    default         reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)
    case            reduce using rule 62 (iteration_stmt -> do COLON declaration endwhile SEMICOLON .)


state 310

    (103) if_statement -> if LPAREN expression RPAREN LBLOCK . declaration_list RBLOCK else_part
    (4) declaration_list -> . declaration
    (5) declaration_list -> . declaration_list declaration
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . return_statement
    (19) declaration -> . obj_declaration
    (20) declaration -> . create_obj_declaration
    (21) declaration -> . footer_declaration
    (22) declaration -> . for_loop
    (23) declaration -> . foreach_loop
    (24) declaration -> . switch_statement
    (25) declaration -> . exit_statement
    (26) declaration -> . empty
    (29) header_declaration -> . include CADENA SEMICOLON
    (39) var_declaration -> . var_declaration2 SEMICOLON
    (30) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (31) print_declaration -> . print var_declaration2 SEMICOLON
    (32) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (33) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (34) print_declaration -> . print data_type SEMICOLON
    (35) echo_declaration -> . echo var_declaration2 SEMICOLON
    (36) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (37) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (38) echo_declaration -> . echo data_type SEMICOLON
    (59) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (60) iteration_stmt -> . while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON
    (61) iteration_stmt -> . do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON
    (62) iteration_stmt -> . do COLON declaration endwhile SEMICOLON
    (103) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (108) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK
    (109) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK
    (110) fun_call -> . ID LPAREN params RPAREN
    (111) return_statement -> . return expression SEMICOLON
    (112) return_statement -> . return params SEMICOLON
    (113) return_statement -> . return SEMICOLON
    (114) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (115) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (121) for_loop -> . for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK
    (122) for_loop -> . for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON
    (127) foreach_loop -> . foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK
    (128) foreach_loop -> . foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON
    (129) switch_statement -> . switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK
    (130) switch_statement -> . switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON
    (126) exit_statement -> . exit LPAREN expression RPAREN SEMICOLON
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 26
    include         shift and go to state 27
    const           shift and go to state 30
    print           shift and go to state 32
    echo            shift and go to state 33
    while           shift and go to state 34
    do              shift and go to state 35
    if              shift and go to state 36
    function        shift and go to state 37
    ID              shift and go to state 31
    return          shift and go to state 38
    class           shift and go to state 39
    new             shift and go to state 40
    CLOSE_TAG       shift and go to state 41
    for             shift and go to state 42
    foreach         shift and go to state 43
    switch          shift and go to state 44
    exit            shift and go to state 45
    VARIABLE        shift and go to state 46
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69
    CADENA          shift and go to state 28

    declaration_list               shift and go to state 329
    declaration                    shift and go to state 5
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    return_statement               shift and go to state 18
    obj_declaration                shift and go to state 19
    create_obj_declaration         shift and go to state 20
    footer_declaration             shift and go to state 21
    for_loop                       shift and go to state 22
    foreach_loop                   shift and go to state 23
    switch_statement               shift and go to state 24
    exit_statement                 shift and go to state 25
    var_declaration2               shift and go to state 29
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 311

    (108) fun_declaration -> function ID LPAREN params RPAREN . LBLOCK declaration_list RBLOCK
    (109) fun_declaration -> function ID LPAREN params RPAREN . LBLOCK declaration_list return_statement RBLOCK

    LBLOCK          shift and go to state 330


state 312

    (66) expression -> additive_expression comp_op additive_expression logical_op . additive_expression comp_op additive_expression
    (68) additive_expression -> . term
    (69) additive_expression -> . term math_op term
    (70) term -> . MINUS term
    (71) term -> . factor
    (72) term -> . factor increment_decrement_op
    (73) term -> . increment_decrement_op factor
    (74) factor -> . NUMBER
    (75) factor -> . VARIABLE
    (76) factor -> . LPAREN expression RPAREN
    (77) increment_decrement_op -> . PLUSPLUS
    (78) increment_decrement_op -> . MINUSMINUS

    MINUS           shift and go to state 98
    NUMBER          shift and go to state 160
    VARIABLE        shift and go to state 161
    LPAREN          shift and go to state 103
    PLUSPLUS        shift and go to state 104
    MINUSMINUS      shift and go to state 105

    additive_expression            shift and go to state 331
    term                           shift and go to state 94
    factor                         shift and go to state 99
    increment_decrement_op         shift and go to state 100

state 313

    (114) obj_declaration -> class ID LBLOCK declaration RBLOCK .

    COMMENT         reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    COMMENT_HASHTAG reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    COMMENT_MULTI   reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    empty           reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    include         reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    const           reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    print           reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    echo            reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    while           reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    do              reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    if              reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    function        reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    ID              reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    return          reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    class           reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    new             reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    CLOSE_TAG       reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    for             reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    foreach         reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    switch          reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    exit            reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    VARIABLE        reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    array           reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    pow             reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    POW             reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    abs             reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    cos             reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    deg2rad         reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    rad2deg         reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    die             reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    exp             reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    floor           reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    isset           reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    list            reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    log             reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    log10           reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    max             reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    min             reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    rand            reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    round           reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    sin             reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    sqrt            reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    unset           reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    CADENA          reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    $end            reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    RBLOCK          reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    endwhile        reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    endfor          reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    endforeach      reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    endswitch       reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    break           reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    default         reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    case            reduce using rule 114 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)


state 314

    (115) create_obj_declaration -> new ID LPAREN params RPAREN .

    COMMENT         reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    COMMENT_HASHTAG reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    COMMENT_MULTI   reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    empty           reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    include         reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    const           reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    print           reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    echo            reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    while           reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    do              reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    if              reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    function        reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    ID              reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    return          reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    class           reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    new             reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    CLOSE_TAG       reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    for             reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    foreach         reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    switch          reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    exit            reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    VARIABLE        reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    array           reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    pow             reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    POW             reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    abs             reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    cos             reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    deg2rad         reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    rad2deg         reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    die             reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    exp             reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    floor           reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    isset           reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    list            reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    log             reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    log10           reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    max             reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    min             reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    rand            reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    round           reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    sin             reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    sqrt            reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    unset           reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    CADENA          reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    $end            reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    RBLOCK          reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    endwhile        reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    endfor          reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    endforeach      reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    endswitch       reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    break           reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    default         reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    case            reduce using rule 115 (create_obj_declaration -> new ID LPAREN params RPAREN .)


state 315

    (121) for_loop -> for LPAREN for_init for_expr for_update . RPAREN LBLOCK declaration_list RBLOCK
    (122) for_loop -> for LPAREN for_init for_expr for_update . RPAREN COLON declaration_list endfor SEMICOLON

    RPAREN          shift and go to state 332


state 316

    (125) for_update -> expression .

    RPAREN          reduce using rule 125 (for_update -> expression .)


state 317

    (124) for_expr -> expression SEMICOLON .

    MINUS           reduce using rule 124 (for_expr -> expression SEMICOLON .)
    NUMBER          reduce using rule 124 (for_expr -> expression SEMICOLON .)
    VARIABLE        reduce using rule 124 (for_expr -> expression SEMICOLON .)
    LPAREN          reduce using rule 124 (for_expr -> expression SEMICOLON .)
    PLUSPLUS        reduce using rule 124 (for_expr -> expression SEMICOLON .)
    MINUSMINUS      reduce using rule 124 (for_expr -> expression SEMICOLON .)


state 318

    (127) foreach_loop -> foreach LPAREN expression as expression . RPAREN LBLOCK declaration_list RBLOCK
    (128) foreach_loop -> foreach LPAREN expression as expression . RPAREN COLON declaration_list endforeach SEMICOLON

    RPAREN          shift and go to state 333


state 319

    (129) switch_statement -> switch LPAREN expression RPAREN LBLOCK . case_blocks default_block RBLOCK
    (131) case_blocks -> . case_blocks case_block
    (132) case_blocks -> . case_block
    (133) case_blocks -> . empty_function
    (134) case_block -> . case expression COLON statement_list
    (135) case_block -> . case expression COLON statement_list break SEMICOLON
    (174) empty_function -> .

  ! shift/reduce conflict for case resolved as shift
    case            shift and go to state 337
    default         reduce using rule 174 (empty_function -> .)
    RBLOCK          reduce using rule 174 (empty_function -> .)

  ! case            [ reduce using rule 174 (empty_function -> .) ]

    case_blocks                    shift and go to state 334
    case_block                     shift and go to state 335
    empty_function                 shift and go to state 336

state 320

    (130) switch_statement -> switch LPAREN expression RPAREN COLON . case_blocks default_block endswitch SEMICOLON
    (131) case_blocks -> . case_blocks case_block
    (132) case_blocks -> . case_block
    (133) case_blocks -> . empty_function
    (134) case_block -> . case expression COLON statement_list
    (135) case_block -> . case expression COLON statement_list break SEMICOLON
    (174) empty_function -> .

  ! shift/reduce conflict for case resolved as shift
    case            shift and go to state 337
    default         reduce using rule 174 (empty_function -> .)
    endswitch       reduce using rule 174 (empty_function -> .)

  ! case            [ reduce using rule 174 (empty_function -> .) ]

    case_blocks                    shift and go to state 338
    case_block                     shift and go to state 335
    empty_function                 shift and go to state 336

state 321

    (126) exit_statement -> exit LPAREN expression RPAREN SEMICOLON .

    COMMENT         reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    COMMENT_HASHTAG reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    COMMENT_MULTI   reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    empty           reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    include         reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    const           reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    print           reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    echo            reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    while           reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    do              reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    if              reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    function        reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    ID              reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    return          reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    class           reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    new             reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    CLOSE_TAG       reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    for             reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    foreach         reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    switch          reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    exit            reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    VARIABLE        reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    array           reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    pow             reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    POW             reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    abs             reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    cos             reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    deg2rad         reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    rad2deg         reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    die             reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    exp             reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    floor           reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    isset           reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    list            reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    log             reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    log10           reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    max             reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    min             reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    rand            reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    round           reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    sin             reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    sqrt            reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    unset           reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    CADENA          reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    $end            reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    RBLOCK          reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    endwhile        reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    endfor          reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    endforeach      reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    endswitch       reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    break           reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    default         reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    case            reduce using rule 126 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)


state 322

    (56) assignment_tail -> VARIABLE LBRACKET expression COMMA . params
    (116) params -> . single_param
    (117) params -> . params COMMA single_param
    (118) single_param -> . var_declaration2
    (119) single_param -> . data_type
    (120) single_param -> . empty_function
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (27) data_type -> . NUMBER
    (28) data_type -> . CADENA
    (174) empty_function -> .
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 46
    NUMBER          shift and go to state 79
    CADENA          shift and go to state 80
    SEMICOLON       reduce using rule 174 (empty_function -> .)
    RPAREN          reduce using rule 174 (empty_function -> .)
    COMMA           reduce using rule 174 (empty_function -> .)
    RBRACKET        reduce using rule 174 (empty_function -> .)
    RBLOCK          reduce using rule 174 (empty_function -> .)
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69

    params                         shift and go to state 339
    single_param                   shift and go to state 93
    var_declaration2               shift and go to state 95
    data_type                      shift and go to state 96
    empty_function                 shift and go to state 97
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 323

    (57) assignment_tail -> VARIABLE LBRACKET params RBRACKET .

    SEMICOLON       reduce using rule 57 (assignment_tail -> VARIABLE LBRACKET params RBRACKET .)
    RPAREN          reduce using rule 57 (assignment_tail -> VARIABLE LBRACKET params RBRACKET .)
    COMMA           reduce using rule 57 (assignment_tail -> VARIABLE LBRACKET params RBRACKET .)
    RBRACKET        reduce using rule 57 (assignment_tail -> VARIABLE LBRACKET params RBRACKET .)
    RBLOCK          reduce using rule 57 (assignment_tail -> VARIABLE LBRACKET params RBRACKET .)


state 324

    (58) assignment_tail -> VARIABLE LBLOCK params RBLOCK .

    SEMICOLON       reduce using rule 58 (assignment_tail -> VARIABLE LBLOCK params RBLOCK .)
    RPAREN          reduce using rule 58 (assignment_tail -> VARIABLE LBLOCK params RBLOCK .)
    COMMA           reduce using rule 58 (assignment_tail -> VARIABLE LBLOCK params RBLOCK .)
    RBRACKET        reduce using rule 58 (assignment_tail -> VARIABLE LBLOCK params RBLOCK .)
    RBLOCK          reduce using rule 58 (assignment_tail -> VARIABLE LBLOCK params RBLOCK .)


state 325

    (50) var_declaration2 -> VARIABLE EQUAL ID LPAREN params . RPAREN
    (117) params -> params . COMMA single_param

    RPAREN          shift and go to state 340
    COMMA           shift and go to state 168


state 326

    (59) iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration . RBLOCK

    RBLOCK          shift and go to state 341


state 327

    (60) iteration_stmt -> while LPAREN expression RPAREN COLON declaration . endwhile SEMICOLON

    endwhile        shift and go to state 342


state 328

    (61) iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN . expression RPAREN SEMICOLON
    (63) expression -> . additive_expression
    (64) expression -> . additive_expression logical_op additive_expression
    (65) expression -> . additive_expression comp_op additive_expression
    (66) expression -> . additive_expression comp_op additive_expression logical_op additive_expression comp_op additive_expression
    (67) expression -> . additive_expression bits_op additive_expression
    (68) additive_expression -> . term
    (69) additive_expression -> . term math_op term
    (70) term -> . MINUS term
    (71) term -> . factor
    (72) term -> . factor increment_decrement_op
    (73) term -> . increment_decrement_op factor
    (74) factor -> . NUMBER
    (75) factor -> . VARIABLE
    (76) factor -> . LPAREN expression RPAREN
    (77) increment_decrement_op -> . PLUSPLUS
    (78) increment_decrement_op -> . MINUSMINUS

    MINUS           shift and go to state 98
    NUMBER          shift and go to state 160
    VARIABLE        shift and go to state 161
    LPAREN          shift and go to state 103
    PLUSPLUS        shift and go to state 104
    MINUSMINUS      shift and go to state 105

    expression                     shift and go to state 343
    additive_expression            shift and go to state 92
    term                           shift and go to state 94
    factor                         shift and go to state 99
    increment_decrement_op         shift and go to state 100

state 329

    (103) if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list . RBLOCK else_part
    (5) declaration_list -> declaration_list . declaration
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . return_statement
    (19) declaration -> . obj_declaration
    (20) declaration -> . create_obj_declaration
    (21) declaration -> . footer_declaration
    (22) declaration -> . for_loop
    (23) declaration -> . foreach_loop
    (24) declaration -> . switch_statement
    (25) declaration -> . exit_statement
    (26) declaration -> . empty
    (29) header_declaration -> . include CADENA SEMICOLON
    (39) var_declaration -> . var_declaration2 SEMICOLON
    (30) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (31) print_declaration -> . print var_declaration2 SEMICOLON
    (32) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (33) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (34) print_declaration -> . print data_type SEMICOLON
    (35) echo_declaration -> . echo var_declaration2 SEMICOLON
    (36) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (37) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (38) echo_declaration -> . echo data_type SEMICOLON
    (59) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (60) iteration_stmt -> . while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON
    (61) iteration_stmt -> . do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON
    (62) iteration_stmt -> . do COLON declaration endwhile SEMICOLON
    (103) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (108) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK
    (109) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK
    (110) fun_call -> . ID LPAREN params RPAREN
    (111) return_statement -> . return expression SEMICOLON
    (112) return_statement -> . return params SEMICOLON
    (113) return_statement -> . return SEMICOLON
    (114) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (115) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (121) for_loop -> . for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK
    (122) for_loop -> . for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON
    (127) foreach_loop -> . foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK
    (128) foreach_loop -> . foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON
    (129) switch_statement -> . switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK
    (130) switch_statement -> . switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON
    (126) exit_statement -> . exit LPAREN expression RPAREN SEMICOLON
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    RBLOCK          shift and go to state 344
    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 26
    include         shift and go to state 27
    const           shift and go to state 30
    print           shift and go to state 32
    echo            shift and go to state 33
    while           shift and go to state 34
    do              shift and go to state 35
    if              shift and go to state 36
    function        shift and go to state 37
    ID              shift and go to state 31
    return          shift and go to state 38
    class           shift and go to state 39
    new             shift and go to state 40
    CLOSE_TAG       shift and go to state 41
    for             shift and go to state 42
    foreach         shift and go to state 43
    switch          shift and go to state 44
    exit            shift and go to state 45
    VARIABLE        shift and go to state 46
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69
    CADENA          shift and go to state 28

    declaration                    shift and go to state 70
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    return_statement               shift and go to state 18
    obj_declaration                shift and go to state 19
    create_obj_declaration         shift and go to state 20
    footer_declaration             shift and go to state 21
    for_loop                       shift and go to state 22
    foreach_loop                   shift and go to state 23
    switch_statement               shift and go to state 24
    exit_statement                 shift and go to state 25
    var_declaration2               shift and go to state 29
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 330

    (108) fun_declaration -> function ID LPAREN params RPAREN LBLOCK . declaration_list RBLOCK
    (109) fun_declaration -> function ID LPAREN params RPAREN LBLOCK . declaration_list return_statement RBLOCK
    (4) declaration_list -> . declaration
    (5) declaration_list -> . declaration_list declaration
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . return_statement
    (19) declaration -> . obj_declaration
    (20) declaration -> . create_obj_declaration
    (21) declaration -> . footer_declaration
    (22) declaration -> . for_loop
    (23) declaration -> . foreach_loop
    (24) declaration -> . switch_statement
    (25) declaration -> . exit_statement
    (26) declaration -> . empty
    (29) header_declaration -> . include CADENA SEMICOLON
    (39) var_declaration -> . var_declaration2 SEMICOLON
    (30) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (31) print_declaration -> . print var_declaration2 SEMICOLON
    (32) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (33) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (34) print_declaration -> . print data_type SEMICOLON
    (35) echo_declaration -> . echo var_declaration2 SEMICOLON
    (36) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (37) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (38) echo_declaration -> . echo data_type SEMICOLON
    (59) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (60) iteration_stmt -> . while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON
    (61) iteration_stmt -> . do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON
    (62) iteration_stmt -> . do COLON declaration endwhile SEMICOLON
    (103) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (108) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK
    (109) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK
    (110) fun_call -> . ID LPAREN params RPAREN
    (111) return_statement -> . return expression SEMICOLON
    (112) return_statement -> . return params SEMICOLON
    (113) return_statement -> . return SEMICOLON
    (114) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (115) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (121) for_loop -> . for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK
    (122) for_loop -> . for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON
    (127) foreach_loop -> . foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK
    (128) foreach_loop -> . foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON
    (129) switch_statement -> . switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK
    (130) switch_statement -> . switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON
    (126) exit_statement -> . exit LPAREN expression RPAREN SEMICOLON
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 26
    include         shift and go to state 27
    const           shift and go to state 30
    print           shift and go to state 32
    echo            shift and go to state 33
    while           shift and go to state 34
    do              shift and go to state 35
    if              shift and go to state 36
    function        shift and go to state 37
    ID              shift and go to state 31
    return          shift and go to state 38
    class           shift and go to state 39
    new             shift and go to state 40
    CLOSE_TAG       shift and go to state 41
    for             shift and go to state 42
    foreach         shift and go to state 43
    switch          shift and go to state 44
    exit            shift and go to state 45
    VARIABLE        shift and go to state 46
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69
    CADENA          shift and go to state 28

    declaration_list               shift and go to state 345
    return_statement               shift and go to state 18
    declaration                    shift and go to state 5
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    obj_declaration                shift and go to state 19
    create_obj_declaration         shift and go to state 20
    footer_declaration             shift and go to state 21
    for_loop                       shift and go to state 22
    foreach_loop                   shift and go to state 23
    switch_statement               shift and go to state 24
    exit_statement                 shift and go to state 25
    var_declaration2               shift and go to state 29
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 331

    (66) expression -> additive_expression comp_op additive_expression logical_op additive_expression . comp_op additive_expression
    (87) comp_op -> . LESS
    (88) comp_op -> . LESSEQUAL
    (89) comp_op -> . GREATER
    (90) comp_op -> . GREATEREQUAL
    (91) comp_op -> . DEQUAL
    (92) comp_op -> . DISTINT
    (93) comp_op -> . DIVEQUAL
    (94) comp_op -> . ISEQUAL
    (95) comp_op -> . ISIDENTICAL
    (96) comp_op -> . ISNOTIDENTICAL

    LESS            shift and go to state 178
    LESSEQUAL       shift and go to state 179
    GREATER         shift and go to state 180
    GREATEREQUAL    shift and go to state 181
    DEQUAL          shift and go to state 182
    DISTINT         shift and go to state 183
    DIVEQUAL        shift and go to state 184
    ISEQUAL         shift and go to state 185
    ISIDENTICAL     shift and go to state 186
    ISNOTIDENTICAL  shift and go to state 187

    comp_op                        shift and go to state 346

state 332

    (121) for_loop -> for LPAREN for_init for_expr for_update RPAREN . LBLOCK declaration_list RBLOCK
    (122) for_loop -> for LPAREN for_init for_expr for_update RPAREN . COLON declaration_list endfor SEMICOLON

    LBLOCK          shift and go to state 347
    COLON           shift and go to state 348


state 333

    (127) foreach_loop -> foreach LPAREN expression as expression RPAREN . LBLOCK declaration_list RBLOCK
    (128) foreach_loop -> foreach LPAREN expression as expression RPAREN . COLON declaration_list endforeach SEMICOLON

    LBLOCK          shift and go to state 349
    COLON           shift and go to state 350


state 334

    (129) switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks . default_block RBLOCK
    (131) case_blocks -> case_blocks . case_block
    (136) default_block -> . default COLON statement_list
    (137) default_block -> . empty_function
    (134) case_block -> . case expression COLON statement_list
    (135) case_block -> . case expression COLON statement_list break SEMICOLON
    (174) empty_function -> .

    default         shift and go to state 353
    case            shift and go to state 337
    RBLOCK          reduce using rule 174 (empty_function -> .)

    default_block                  shift and go to state 351
    case_block                     shift and go to state 352
    empty_function                 shift and go to state 354

state 335

    (132) case_blocks -> case_block .

    default         reduce using rule 132 (case_blocks -> case_block .)
    case            reduce using rule 132 (case_blocks -> case_block .)
    RBLOCK          reduce using rule 132 (case_blocks -> case_block .)
    endswitch       reduce using rule 132 (case_blocks -> case_block .)


state 336

    (133) case_blocks -> empty_function .

    default         reduce using rule 133 (case_blocks -> empty_function .)
    case            reduce using rule 133 (case_blocks -> empty_function .)
    RBLOCK          reduce using rule 133 (case_blocks -> empty_function .)
    endswitch       reduce using rule 133 (case_blocks -> empty_function .)


state 337

    (134) case_block -> case . expression COLON statement_list
    (135) case_block -> case . expression COLON statement_list break SEMICOLON
    (63) expression -> . additive_expression
    (64) expression -> . additive_expression logical_op additive_expression
    (65) expression -> . additive_expression comp_op additive_expression
    (66) expression -> . additive_expression comp_op additive_expression logical_op additive_expression comp_op additive_expression
    (67) expression -> . additive_expression bits_op additive_expression
    (68) additive_expression -> . term
    (69) additive_expression -> . term math_op term
    (70) term -> . MINUS term
    (71) term -> . factor
    (72) term -> . factor increment_decrement_op
    (73) term -> . increment_decrement_op factor
    (74) factor -> . NUMBER
    (75) factor -> . VARIABLE
    (76) factor -> . LPAREN expression RPAREN
    (77) increment_decrement_op -> . PLUSPLUS
    (78) increment_decrement_op -> . MINUSMINUS

    MINUS           shift and go to state 98
    NUMBER          shift and go to state 160
    VARIABLE        shift and go to state 161
    LPAREN          shift and go to state 103
    PLUSPLUS        shift and go to state 104
    MINUSMINUS      shift and go to state 105

    expression                     shift and go to state 355
    additive_expression            shift and go to state 92
    term                           shift and go to state 94
    factor                         shift and go to state 99
    increment_decrement_op         shift and go to state 100

state 338

    (130) switch_statement -> switch LPAREN expression RPAREN COLON case_blocks . default_block endswitch SEMICOLON
    (131) case_blocks -> case_blocks . case_block
    (136) default_block -> . default COLON statement_list
    (137) default_block -> . empty_function
    (134) case_block -> . case expression COLON statement_list
    (135) case_block -> . case expression COLON statement_list break SEMICOLON
    (174) empty_function -> .

    default         shift and go to state 353
    case            shift and go to state 337
    endswitch       reduce using rule 174 (empty_function -> .)

    default_block                  shift and go to state 356
    case_block                     shift and go to state 352
    empty_function                 shift and go to state 354

state 339

    (56) assignment_tail -> VARIABLE LBRACKET expression COMMA params .
    (117) params -> params . COMMA single_param

  ! shift/reduce conflict for COMMA resolved as shift
    SEMICOLON       reduce using rule 56 (assignment_tail -> VARIABLE LBRACKET expression COMMA params .)
    RPAREN          reduce using rule 56 (assignment_tail -> VARIABLE LBRACKET expression COMMA params .)
    RBRACKET        reduce using rule 56 (assignment_tail -> VARIABLE LBRACKET expression COMMA params .)
    RBLOCK          reduce using rule 56 (assignment_tail -> VARIABLE LBRACKET expression COMMA params .)
    COMMA           shift and go to state 168

  ! COMMA           [ reduce using rule 56 (assignment_tail -> VARIABLE LBRACKET expression COMMA params .) ]


state 340

    (50) var_declaration2 -> VARIABLE EQUAL ID LPAREN params RPAREN .

    SEMICOLON       reduce using rule 50 (var_declaration2 -> VARIABLE EQUAL ID LPAREN params RPAREN .)
    COMMA           reduce using rule 50 (var_declaration2 -> VARIABLE EQUAL ID LPAREN params RPAREN .)
    RPAREN          reduce using rule 50 (var_declaration2 -> VARIABLE EQUAL ID LPAREN params RPAREN .)
    RBRACKET        reduce using rule 50 (var_declaration2 -> VARIABLE EQUAL ID LPAREN params RPAREN .)
    RBLOCK          reduce using rule 50 (var_declaration2 -> VARIABLE EQUAL ID LPAREN params RPAREN .)


state 341

    (59) iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .

    COMMENT         reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    COMMENT_HASHTAG reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    COMMENT_MULTI   reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    empty           reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    include         reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    const           reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    print           reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    echo            reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    while           reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    do              reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    if              reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    function        reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    ID              reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    return          reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    class           reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    new             reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    CLOSE_TAG       reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    for             reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    foreach         reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    switch          reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    exit            reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    VARIABLE        reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    array           reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    pow             reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    POW             reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    abs             reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    cos             reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    deg2rad         reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    rad2deg         reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    die             reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    exp             reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    floor           reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    isset           reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    list            reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    log             reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    log10           reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    max             reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    min             reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    rand            reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    round           reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    sin             reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    sqrt            reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    unset           reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    CADENA          reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    $end            reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    RBLOCK          reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    endwhile        reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    endfor          reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    endforeach      reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    endswitch       reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    break           reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    default         reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    case            reduce using rule 59 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)


state 342

    (60) iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile . SEMICOLON

    SEMICOLON       shift and go to state 357


state 343

    (61) iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression . RPAREN SEMICOLON

    RPAREN          shift and go to state 358


state 344

    (103) if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK . else_part
    (104) else_part -> . elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (105) else_part -> . else LBLOCK declaration_list RBLOCK
    (106) else_part -> . endif
    (107) else_part -> . empty_function
    (174) empty_function -> .

    elseif          shift and go to state 360
    else            shift and go to state 361
    endif           shift and go to state 362
    COMMENT         reduce using rule 174 (empty_function -> .)
    COMMENT_HASHTAG reduce using rule 174 (empty_function -> .)
    COMMENT_MULTI   reduce using rule 174 (empty_function -> .)
    empty           reduce using rule 174 (empty_function -> .)
    include         reduce using rule 174 (empty_function -> .)
    const           reduce using rule 174 (empty_function -> .)
    print           reduce using rule 174 (empty_function -> .)
    echo            reduce using rule 174 (empty_function -> .)
    while           reduce using rule 174 (empty_function -> .)
    do              reduce using rule 174 (empty_function -> .)
    if              reduce using rule 174 (empty_function -> .)
    function        reduce using rule 174 (empty_function -> .)
    ID              reduce using rule 174 (empty_function -> .)
    return          reduce using rule 174 (empty_function -> .)
    class           reduce using rule 174 (empty_function -> .)
    new             reduce using rule 174 (empty_function -> .)
    CLOSE_TAG       reduce using rule 174 (empty_function -> .)
    for             reduce using rule 174 (empty_function -> .)
    foreach         reduce using rule 174 (empty_function -> .)
    switch          reduce using rule 174 (empty_function -> .)
    exit            reduce using rule 174 (empty_function -> .)
    VARIABLE        reduce using rule 174 (empty_function -> .)
    array           reduce using rule 174 (empty_function -> .)
    pow             reduce using rule 174 (empty_function -> .)
    POW             reduce using rule 174 (empty_function -> .)
    abs             reduce using rule 174 (empty_function -> .)
    cos             reduce using rule 174 (empty_function -> .)
    deg2rad         reduce using rule 174 (empty_function -> .)
    rad2deg         reduce using rule 174 (empty_function -> .)
    die             reduce using rule 174 (empty_function -> .)
    exp             reduce using rule 174 (empty_function -> .)
    floor           reduce using rule 174 (empty_function -> .)
    isset           reduce using rule 174 (empty_function -> .)
    list            reduce using rule 174 (empty_function -> .)
    log             reduce using rule 174 (empty_function -> .)
    log10           reduce using rule 174 (empty_function -> .)
    max             reduce using rule 174 (empty_function -> .)
    min             reduce using rule 174 (empty_function -> .)
    rand            reduce using rule 174 (empty_function -> .)
    round           reduce using rule 174 (empty_function -> .)
    sin             reduce using rule 174 (empty_function -> .)
    sqrt            reduce using rule 174 (empty_function -> .)
    unset           reduce using rule 174 (empty_function -> .)
    CADENA          reduce using rule 174 (empty_function -> .)
    $end            reduce using rule 174 (empty_function -> .)
    RBLOCK          reduce using rule 174 (empty_function -> .)
    endwhile        reduce using rule 174 (empty_function -> .)
    endfor          reduce using rule 174 (empty_function -> .)
    endforeach      reduce using rule 174 (empty_function -> .)
    endswitch       reduce using rule 174 (empty_function -> .)
    break           reduce using rule 174 (empty_function -> .)
    default         reduce using rule 174 (empty_function -> .)
    case            reduce using rule 174 (empty_function -> .)

    else_part                      shift and go to state 359
    empty_function                 shift and go to state 363

state 345

    (108) fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list . RBLOCK
    (109) fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list . return_statement RBLOCK
    (5) declaration_list -> declaration_list . declaration
    (111) return_statement -> . return expression SEMICOLON
    (112) return_statement -> . return params SEMICOLON
    (113) return_statement -> . return SEMICOLON
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . return_statement
    (19) declaration -> . obj_declaration
    (20) declaration -> . create_obj_declaration
    (21) declaration -> . footer_declaration
    (22) declaration -> . for_loop
    (23) declaration -> . foreach_loop
    (24) declaration -> . switch_statement
    (25) declaration -> . exit_statement
    (26) declaration -> . empty
    (29) header_declaration -> . include CADENA SEMICOLON
    (39) var_declaration -> . var_declaration2 SEMICOLON
    (30) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (31) print_declaration -> . print var_declaration2 SEMICOLON
    (32) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (33) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (34) print_declaration -> . print data_type SEMICOLON
    (35) echo_declaration -> . echo var_declaration2 SEMICOLON
    (36) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (37) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (38) echo_declaration -> . echo data_type SEMICOLON
    (59) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (60) iteration_stmt -> . while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON
    (61) iteration_stmt -> . do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON
    (62) iteration_stmt -> . do COLON declaration endwhile SEMICOLON
    (103) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (108) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK
    (109) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK
    (110) fun_call -> . ID LPAREN params RPAREN
    (114) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (115) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (121) for_loop -> . for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK
    (122) for_loop -> . for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON
    (127) foreach_loop -> . foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK
    (128) foreach_loop -> . foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON
    (129) switch_statement -> . switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK
    (130) switch_statement -> . switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON
    (126) exit_statement -> . exit LPAREN expression RPAREN SEMICOLON
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    RBLOCK          shift and go to state 364
    return          shift and go to state 38
    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 26
    include         shift and go to state 27
    const           shift and go to state 30
    print           shift and go to state 32
    echo            shift and go to state 33
    while           shift and go to state 34
    do              shift and go to state 35
    if              shift and go to state 36
    function        shift and go to state 37
    ID              shift and go to state 31
    class           shift and go to state 39
    new             shift and go to state 40
    CLOSE_TAG       shift and go to state 41
    for             shift and go to state 42
    foreach         shift and go to state 43
    switch          shift and go to state 44
    exit            shift and go to state 45
    VARIABLE        shift and go to state 46
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69
    CADENA          shift and go to state 28

    return_statement               shift and go to state 365
    declaration                    shift and go to state 70
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    obj_declaration                shift and go to state 19
    create_obj_declaration         shift and go to state 20
    footer_declaration             shift and go to state 21
    for_loop                       shift and go to state 22
    foreach_loop                   shift and go to state 23
    switch_statement               shift and go to state 24
    exit_statement                 shift and go to state 25
    var_declaration2               shift and go to state 29
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 346

    (66) expression -> additive_expression comp_op additive_expression logical_op additive_expression comp_op . additive_expression
    (68) additive_expression -> . term
    (69) additive_expression -> . term math_op term
    (70) term -> . MINUS term
    (71) term -> . factor
    (72) term -> . factor increment_decrement_op
    (73) term -> . increment_decrement_op factor
    (74) factor -> . NUMBER
    (75) factor -> . VARIABLE
    (76) factor -> . LPAREN expression RPAREN
    (77) increment_decrement_op -> . PLUSPLUS
    (78) increment_decrement_op -> . MINUSMINUS

    MINUS           shift and go to state 98
    NUMBER          shift and go to state 160
    VARIABLE        shift and go to state 161
    LPAREN          shift and go to state 103
    PLUSPLUS        shift and go to state 104
    MINUSMINUS      shift and go to state 105

    additive_expression            shift and go to state 366
    term                           shift and go to state 94
    factor                         shift and go to state 99
    increment_decrement_op         shift and go to state 100

state 347

    (121) for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK . declaration_list RBLOCK
    (4) declaration_list -> . declaration
    (5) declaration_list -> . declaration_list declaration
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . return_statement
    (19) declaration -> . obj_declaration
    (20) declaration -> . create_obj_declaration
    (21) declaration -> . footer_declaration
    (22) declaration -> . for_loop
    (23) declaration -> . foreach_loop
    (24) declaration -> . switch_statement
    (25) declaration -> . exit_statement
    (26) declaration -> . empty
    (29) header_declaration -> . include CADENA SEMICOLON
    (39) var_declaration -> . var_declaration2 SEMICOLON
    (30) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (31) print_declaration -> . print var_declaration2 SEMICOLON
    (32) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (33) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (34) print_declaration -> . print data_type SEMICOLON
    (35) echo_declaration -> . echo var_declaration2 SEMICOLON
    (36) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (37) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (38) echo_declaration -> . echo data_type SEMICOLON
    (59) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (60) iteration_stmt -> . while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON
    (61) iteration_stmt -> . do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON
    (62) iteration_stmt -> . do COLON declaration endwhile SEMICOLON
    (103) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (108) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK
    (109) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK
    (110) fun_call -> . ID LPAREN params RPAREN
    (111) return_statement -> . return expression SEMICOLON
    (112) return_statement -> . return params SEMICOLON
    (113) return_statement -> . return SEMICOLON
    (114) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (115) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (121) for_loop -> . for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK
    (122) for_loop -> . for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON
    (127) foreach_loop -> . foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK
    (128) foreach_loop -> . foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON
    (129) switch_statement -> . switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK
    (130) switch_statement -> . switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON
    (126) exit_statement -> . exit LPAREN expression RPAREN SEMICOLON
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 26
    include         shift and go to state 27
    const           shift and go to state 30
    print           shift and go to state 32
    echo            shift and go to state 33
    while           shift and go to state 34
    do              shift and go to state 35
    if              shift and go to state 36
    function        shift and go to state 37
    ID              shift and go to state 31
    return          shift and go to state 38
    class           shift and go to state 39
    new             shift and go to state 40
    CLOSE_TAG       shift and go to state 41
    for             shift and go to state 42
    foreach         shift and go to state 43
    switch          shift and go to state 44
    exit            shift and go to state 45
    VARIABLE        shift and go to state 46
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69
    CADENA          shift and go to state 28

    declaration_list               shift and go to state 367
    declaration                    shift and go to state 5
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    return_statement               shift and go to state 18
    obj_declaration                shift and go to state 19
    create_obj_declaration         shift and go to state 20
    footer_declaration             shift and go to state 21
    for_loop                       shift and go to state 22
    foreach_loop                   shift and go to state 23
    switch_statement               shift and go to state 24
    exit_statement                 shift and go to state 25
    var_declaration2               shift and go to state 29
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 348

    (122) for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON . declaration_list endfor SEMICOLON
    (4) declaration_list -> . declaration
    (5) declaration_list -> . declaration_list declaration
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . return_statement
    (19) declaration -> . obj_declaration
    (20) declaration -> . create_obj_declaration
    (21) declaration -> . footer_declaration
    (22) declaration -> . for_loop
    (23) declaration -> . foreach_loop
    (24) declaration -> . switch_statement
    (25) declaration -> . exit_statement
    (26) declaration -> . empty
    (29) header_declaration -> . include CADENA SEMICOLON
    (39) var_declaration -> . var_declaration2 SEMICOLON
    (30) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (31) print_declaration -> . print var_declaration2 SEMICOLON
    (32) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (33) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (34) print_declaration -> . print data_type SEMICOLON
    (35) echo_declaration -> . echo var_declaration2 SEMICOLON
    (36) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (37) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (38) echo_declaration -> . echo data_type SEMICOLON
    (59) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (60) iteration_stmt -> . while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON
    (61) iteration_stmt -> . do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON
    (62) iteration_stmt -> . do COLON declaration endwhile SEMICOLON
    (103) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (108) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK
    (109) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK
    (110) fun_call -> . ID LPAREN params RPAREN
    (111) return_statement -> . return expression SEMICOLON
    (112) return_statement -> . return params SEMICOLON
    (113) return_statement -> . return SEMICOLON
    (114) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (115) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (121) for_loop -> . for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK
    (122) for_loop -> . for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON
    (127) foreach_loop -> . foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK
    (128) foreach_loop -> . foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON
    (129) switch_statement -> . switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK
    (130) switch_statement -> . switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON
    (126) exit_statement -> . exit LPAREN expression RPAREN SEMICOLON
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 26
    include         shift and go to state 27
    const           shift and go to state 30
    print           shift and go to state 32
    echo            shift and go to state 33
    while           shift and go to state 34
    do              shift and go to state 35
    if              shift and go to state 36
    function        shift and go to state 37
    ID              shift and go to state 31
    return          shift and go to state 38
    class           shift and go to state 39
    new             shift and go to state 40
    CLOSE_TAG       shift and go to state 41
    for             shift and go to state 42
    foreach         shift and go to state 43
    switch          shift and go to state 44
    exit            shift and go to state 45
    VARIABLE        shift and go to state 46
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69
    CADENA          shift and go to state 28

    declaration_list               shift and go to state 368
    declaration                    shift and go to state 5
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    return_statement               shift and go to state 18
    obj_declaration                shift and go to state 19
    create_obj_declaration         shift and go to state 20
    footer_declaration             shift and go to state 21
    for_loop                       shift and go to state 22
    foreach_loop                   shift and go to state 23
    switch_statement               shift and go to state 24
    exit_statement                 shift and go to state 25
    var_declaration2               shift and go to state 29
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 349

    (127) foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK . declaration_list RBLOCK
    (4) declaration_list -> . declaration
    (5) declaration_list -> . declaration_list declaration
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . return_statement
    (19) declaration -> . obj_declaration
    (20) declaration -> . create_obj_declaration
    (21) declaration -> . footer_declaration
    (22) declaration -> . for_loop
    (23) declaration -> . foreach_loop
    (24) declaration -> . switch_statement
    (25) declaration -> . exit_statement
    (26) declaration -> . empty
    (29) header_declaration -> . include CADENA SEMICOLON
    (39) var_declaration -> . var_declaration2 SEMICOLON
    (30) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (31) print_declaration -> . print var_declaration2 SEMICOLON
    (32) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (33) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (34) print_declaration -> . print data_type SEMICOLON
    (35) echo_declaration -> . echo var_declaration2 SEMICOLON
    (36) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (37) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (38) echo_declaration -> . echo data_type SEMICOLON
    (59) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (60) iteration_stmt -> . while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON
    (61) iteration_stmt -> . do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON
    (62) iteration_stmt -> . do COLON declaration endwhile SEMICOLON
    (103) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (108) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK
    (109) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK
    (110) fun_call -> . ID LPAREN params RPAREN
    (111) return_statement -> . return expression SEMICOLON
    (112) return_statement -> . return params SEMICOLON
    (113) return_statement -> . return SEMICOLON
    (114) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (115) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (121) for_loop -> . for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK
    (122) for_loop -> . for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON
    (127) foreach_loop -> . foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK
    (128) foreach_loop -> . foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON
    (129) switch_statement -> . switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK
    (130) switch_statement -> . switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON
    (126) exit_statement -> . exit LPAREN expression RPAREN SEMICOLON
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 26
    include         shift and go to state 27
    const           shift and go to state 30
    print           shift and go to state 32
    echo            shift and go to state 33
    while           shift and go to state 34
    do              shift and go to state 35
    if              shift and go to state 36
    function        shift and go to state 37
    ID              shift and go to state 31
    return          shift and go to state 38
    class           shift and go to state 39
    new             shift and go to state 40
    CLOSE_TAG       shift and go to state 41
    for             shift and go to state 42
    foreach         shift and go to state 43
    switch          shift and go to state 44
    exit            shift and go to state 45
    VARIABLE        shift and go to state 46
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69
    CADENA          shift and go to state 28

    declaration_list               shift and go to state 369
    declaration                    shift and go to state 5
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    return_statement               shift and go to state 18
    obj_declaration                shift and go to state 19
    create_obj_declaration         shift and go to state 20
    footer_declaration             shift and go to state 21
    for_loop                       shift and go to state 22
    foreach_loop                   shift and go to state 23
    switch_statement               shift and go to state 24
    exit_statement                 shift and go to state 25
    var_declaration2               shift and go to state 29
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 350

    (128) foreach_loop -> foreach LPAREN expression as expression RPAREN COLON . declaration_list endforeach SEMICOLON
    (4) declaration_list -> . declaration
    (5) declaration_list -> . declaration_list declaration
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . return_statement
    (19) declaration -> . obj_declaration
    (20) declaration -> . create_obj_declaration
    (21) declaration -> . footer_declaration
    (22) declaration -> . for_loop
    (23) declaration -> . foreach_loop
    (24) declaration -> . switch_statement
    (25) declaration -> . exit_statement
    (26) declaration -> . empty
    (29) header_declaration -> . include CADENA SEMICOLON
    (39) var_declaration -> . var_declaration2 SEMICOLON
    (30) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (31) print_declaration -> . print var_declaration2 SEMICOLON
    (32) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (33) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (34) print_declaration -> . print data_type SEMICOLON
    (35) echo_declaration -> . echo var_declaration2 SEMICOLON
    (36) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (37) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (38) echo_declaration -> . echo data_type SEMICOLON
    (59) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (60) iteration_stmt -> . while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON
    (61) iteration_stmt -> . do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON
    (62) iteration_stmt -> . do COLON declaration endwhile SEMICOLON
    (103) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (108) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK
    (109) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK
    (110) fun_call -> . ID LPAREN params RPAREN
    (111) return_statement -> . return expression SEMICOLON
    (112) return_statement -> . return params SEMICOLON
    (113) return_statement -> . return SEMICOLON
    (114) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (115) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (121) for_loop -> . for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK
    (122) for_loop -> . for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON
    (127) foreach_loop -> . foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK
    (128) foreach_loop -> . foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON
    (129) switch_statement -> . switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK
    (130) switch_statement -> . switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON
    (126) exit_statement -> . exit LPAREN expression RPAREN SEMICOLON
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 26
    include         shift and go to state 27
    const           shift and go to state 30
    print           shift and go to state 32
    echo            shift and go to state 33
    while           shift and go to state 34
    do              shift and go to state 35
    if              shift and go to state 36
    function        shift and go to state 37
    ID              shift and go to state 31
    return          shift and go to state 38
    class           shift and go to state 39
    new             shift and go to state 40
    CLOSE_TAG       shift and go to state 41
    for             shift and go to state 42
    foreach         shift and go to state 43
    switch          shift and go to state 44
    exit            shift and go to state 45
    VARIABLE        shift and go to state 46
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69
    CADENA          shift and go to state 28

    declaration_list               shift and go to state 370
    declaration                    shift and go to state 5
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    return_statement               shift and go to state 18
    obj_declaration                shift and go to state 19
    create_obj_declaration         shift and go to state 20
    footer_declaration             shift and go to state 21
    for_loop                       shift and go to state 22
    foreach_loop                   shift and go to state 23
    switch_statement               shift and go to state 24
    exit_statement                 shift and go to state 25
    var_declaration2               shift and go to state 29
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 351

    (129) switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block . RBLOCK

    RBLOCK          shift and go to state 371


state 352

    (131) case_blocks -> case_blocks case_block .

    default         reduce using rule 131 (case_blocks -> case_blocks case_block .)
    case            reduce using rule 131 (case_blocks -> case_blocks case_block .)
    RBLOCK          reduce using rule 131 (case_blocks -> case_blocks case_block .)
    endswitch       reduce using rule 131 (case_blocks -> case_blocks case_block .)


state 353

    (136) default_block -> default . COLON statement_list

    COLON           shift and go to state 372


state 354

    (137) default_block -> empty_function .

    RBLOCK          reduce using rule 137 (default_block -> empty_function .)
    endswitch       reduce using rule 137 (default_block -> empty_function .)


state 355

    (134) case_block -> case expression . COLON statement_list
    (135) case_block -> case expression . COLON statement_list break SEMICOLON

    COLON           shift and go to state 373


state 356

    (130) switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block . endswitch SEMICOLON

    endswitch       shift and go to state 374


state 357

    (60) iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .

    COMMENT         reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)
    COMMENT_HASHTAG reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)
    COMMENT_MULTI   reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)
    empty           reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)
    include         reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)
    const           reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)
    print           reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)
    echo            reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)
    while           reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)
    do              reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)
    if              reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)
    function        reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)
    ID              reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)
    return          reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)
    class           reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)
    new             reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)
    CLOSE_TAG       reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)
    for             reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)
    foreach         reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)
    switch          reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)
    exit            reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)
    VARIABLE        reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)
    array           reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)
    pow             reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)
    POW             reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)
    abs             reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)
    cos             reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)
    deg2rad         reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)
    rad2deg         reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)
    die             reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)
    exp             reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)
    floor           reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)
    isset           reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)
    list            reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)
    log             reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)
    log10           reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)
    max             reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)
    min             reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)
    rand            reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)
    round           reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)
    sin             reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)
    sqrt            reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)
    unset           reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)
    CADENA          reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)
    $end            reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)
    RBLOCK          reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)
    endwhile        reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)
    endfor          reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)
    endforeach      reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)
    endswitch       reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)
    break           reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)
    default         reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)
    case            reduce using rule 60 (iteration_stmt -> while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON .)


state 358

    (61) iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 375


state 359

    (103) if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .

    COMMENT         reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    COMMENT_HASHTAG reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    COMMENT_MULTI   reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    empty           reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    include         reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    const           reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    print           reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    echo            reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    while           reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    do              reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    if              reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    function        reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    ID              reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    return          reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    class           reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    new             reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    CLOSE_TAG       reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    for             reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    foreach         reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    switch          reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    exit            reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    VARIABLE        reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    array           reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    pow             reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    POW             reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    abs             reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    cos             reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    deg2rad         reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    rad2deg         reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    die             reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    exp             reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    floor           reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    isset           reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    list            reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    log             reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    log10           reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    max             reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    min             reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    rand            reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    round           reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    sin             reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    sqrt            reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    unset           reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    CADENA          reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    $end            reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    RBLOCK          reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    endwhile        reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    endfor          reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    endforeach      reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    endswitch       reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    break           reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    default         reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    case            reduce using rule 103 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)


state 360

    (104) else_part -> elseif . LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part

    LPAREN          shift and go to state 376


state 361

    (105) else_part -> else . LBLOCK declaration_list RBLOCK

    LBLOCK          shift and go to state 377


state 362

    (106) else_part -> endif .

    COMMENT         reduce using rule 106 (else_part -> endif .)
    COMMENT_HASHTAG reduce using rule 106 (else_part -> endif .)
    COMMENT_MULTI   reduce using rule 106 (else_part -> endif .)
    empty           reduce using rule 106 (else_part -> endif .)
    include         reduce using rule 106 (else_part -> endif .)
    const           reduce using rule 106 (else_part -> endif .)
    print           reduce using rule 106 (else_part -> endif .)
    echo            reduce using rule 106 (else_part -> endif .)
    while           reduce using rule 106 (else_part -> endif .)
    do              reduce using rule 106 (else_part -> endif .)
    if              reduce using rule 106 (else_part -> endif .)
    function        reduce using rule 106 (else_part -> endif .)
    ID              reduce using rule 106 (else_part -> endif .)
    return          reduce using rule 106 (else_part -> endif .)
    class           reduce using rule 106 (else_part -> endif .)
    new             reduce using rule 106 (else_part -> endif .)
    CLOSE_TAG       reduce using rule 106 (else_part -> endif .)
    for             reduce using rule 106 (else_part -> endif .)
    foreach         reduce using rule 106 (else_part -> endif .)
    switch          reduce using rule 106 (else_part -> endif .)
    exit            reduce using rule 106 (else_part -> endif .)
    VARIABLE        reduce using rule 106 (else_part -> endif .)
    array           reduce using rule 106 (else_part -> endif .)
    pow             reduce using rule 106 (else_part -> endif .)
    POW             reduce using rule 106 (else_part -> endif .)
    abs             reduce using rule 106 (else_part -> endif .)
    cos             reduce using rule 106 (else_part -> endif .)
    deg2rad         reduce using rule 106 (else_part -> endif .)
    rad2deg         reduce using rule 106 (else_part -> endif .)
    die             reduce using rule 106 (else_part -> endif .)
    exp             reduce using rule 106 (else_part -> endif .)
    floor           reduce using rule 106 (else_part -> endif .)
    isset           reduce using rule 106 (else_part -> endif .)
    list            reduce using rule 106 (else_part -> endif .)
    log             reduce using rule 106 (else_part -> endif .)
    log10           reduce using rule 106 (else_part -> endif .)
    max             reduce using rule 106 (else_part -> endif .)
    min             reduce using rule 106 (else_part -> endif .)
    rand            reduce using rule 106 (else_part -> endif .)
    round           reduce using rule 106 (else_part -> endif .)
    sin             reduce using rule 106 (else_part -> endif .)
    sqrt            reduce using rule 106 (else_part -> endif .)
    unset           reduce using rule 106 (else_part -> endif .)
    CADENA          reduce using rule 106 (else_part -> endif .)
    $end            reduce using rule 106 (else_part -> endif .)
    RBLOCK          reduce using rule 106 (else_part -> endif .)
    endwhile        reduce using rule 106 (else_part -> endif .)
    endfor          reduce using rule 106 (else_part -> endif .)
    endforeach      reduce using rule 106 (else_part -> endif .)
    endswitch       reduce using rule 106 (else_part -> endif .)
    break           reduce using rule 106 (else_part -> endif .)
    default         reduce using rule 106 (else_part -> endif .)
    case            reduce using rule 106 (else_part -> endif .)


state 363

    (107) else_part -> empty_function .

    COMMENT         reduce using rule 107 (else_part -> empty_function .)
    COMMENT_HASHTAG reduce using rule 107 (else_part -> empty_function .)
    COMMENT_MULTI   reduce using rule 107 (else_part -> empty_function .)
    empty           reduce using rule 107 (else_part -> empty_function .)
    include         reduce using rule 107 (else_part -> empty_function .)
    const           reduce using rule 107 (else_part -> empty_function .)
    print           reduce using rule 107 (else_part -> empty_function .)
    echo            reduce using rule 107 (else_part -> empty_function .)
    while           reduce using rule 107 (else_part -> empty_function .)
    do              reduce using rule 107 (else_part -> empty_function .)
    if              reduce using rule 107 (else_part -> empty_function .)
    function        reduce using rule 107 (else_part -> empty_function .)
    ID              reduce using rule 107 (else_part -> empty_function .)
    return          reduce using rule 107 (else_part -> empty_function .)
    class           reduce using rule 107 (else_part -> empty_function .)
    new             reduce using rule 107 (else_part -> empty_function .)
    CLOSE_TAG       reduce using rule 107 (else_part -> empty_function .)
    for             reduce using rule 107 (else_part -> empty_function .)
    foreach         reduce using rule 107 (else_part -> empty_function .)
    switch          reduce using rule 107 (else_part -> empty_function .)
    exit            reduce using rule 107 (else_part -> empty_function .)
    VARIABLE        reduce using rule 107 (else_part -> empty_function .)
    array           reduce using rule 107 (else_part -> empty_function .)
    pow             reduce using rule 107 (else_part -> empty_function .)
    POW             reduce using rule 107 (else_part -> empty_function .)
    abs             reduce using rule 107 (else_part -> empty_function .)
    cos             reduce using rule 107 (else_part -> empty_function .)
    deg2rad         reduce using rule 107 (else_part -> empty_function .)
    rad2deg         reduce using rule 107 (else_part -> empty_function .)
    die             reduce using rule 107 (else_part -> empty_function .)
    exp             reduce using rule 107 (else_part -> empty_function .)
    floor           reduce using rule 107 (else_part -> empty_function .)
    isset           reduce using rule 107 (else_part -> empty_function .)
    list            reduce using rule 107 (else_part -> empty_function .)
    log             reduce using rule 107 (else_part -> empty_function .)
    log10           reduce using rule 107 (else_part -> empty_function .)
    max             reduce using rule 107 (else_part -> empty_function .)
    min             reduce using rule 107 (else_part -> empty_function .)
    rand            reduce using rule 107 (else_part -> empty_function .)
    round           reduce using rule 107 (else_part -> empty_function .)
    sin             reduce using rule 107 (else_part -> empty_function .)
    sqrt            reduce using rule 107 (else_part -> empty_function .)
    unset           reduce using rule 107 (else_part -> empty_function .)
    CADENA          reduce using rule 107 (else_part -> empty_function .)
    $end            reduce using rule 107 (else_part -> empty_function .)
    RBLOCK          reduce using rule 107 (else_part -> empty_function .)
    endwhile        reduce using rule 107 (else_part -> empty_function .)
    endfor          reduce using rule 107 (else_part -> empty_function .)
    endforeach      reduce using rule 107 (else_part -> empty_function .)
    endswitch       reduce using rule 107 (else_part -> empty_function .)
    break           reduce using rule 107 (else_part -> empty_function .)
    default         reduce using rule 107 (else_part -> empty_function .)
    case            reduce using rule 107 (else_part -> empty_function .)


state 364

    (108) fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .

    COMMENT         reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)
    COMMENT_HASHTAG reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)
    COMMENT_MULTI   reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)
    empty           reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)
    include         reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)
    const           reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)
    print           reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)
    echo            reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)
    while           reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)
    do              reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)
    if              reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)
    function        reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)
    ID              reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)
    return          reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)
    class           reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)
    new             reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)
    CLOSE_TAG       reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)
    for             reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)
    foreach         reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)
    switch          reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)
    exit            reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)
    VARIABLE        reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)
    array           reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)
    pow             reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)
    POW             reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)
    abs             reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)
    cos             reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)
    deg2rad         reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)
    rad2deg         reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)
    die             reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)
    exp             reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)
    floor           reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)
    isset           reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)
    list            reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)
    log             reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)
    log10           reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)
    max             reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)
    min             reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)
    rand            reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)
    round           reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)
    sin             reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)
    sqrt            reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)
    unset           reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)
    CADENA          reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)
    $end            reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)
    RBLOCK          reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)
    endwhile        reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)
    endfor          reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)
    endforeach      reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)
    endswitch       reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)
    break           reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)
    default         reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)
    case            reduce using rule 108 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK .)


state 365

    (109) fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement . RBLOCK
    (18) declaration -> return_statement .

  ! shift/reduce conflict for RBLOCK resolved as shift
    RBLOCK          shift and go to state 378
    return          reduce using rule 18 (declaration -> return_statement .)
    COMMENT         reduce using rule 18 (declaration -> return_statement .)
    COMMENT_HASHTAG reduce using rule 18 (declaration -> return_statement .)
    COMMENT_MULTI   reduce using rule 18 (declaration -> return_statement .)
    empty           reduce using rule 18 (declaration -> return_statement .)
    include         reduce using rule 18 (declaration -> return_statement .)
    const           reduce using rule 18 (declaration -> return_statement .)
    print           reduce using rule 18 (declaration -> return_statement .)
    echo            reduce using rule 18 (declaration -> return_statement .)
    while           reduce using rule 18 (declaration -> return_statement .)
    do              reduce using rule 18 (declaration -> return_statement .)
    if              reduce using rule 18 (declaration -> return_statement .)
    function        reduce using rule 18 (declaration -> return_statement .)
    ID              reduce using rule 18 (declaration -> return_statement .)
    class           reduce using rule 18 (declaration -> return_statement .)
    new             reduce using rule 18 (declaration -> return_statement .)
    CLOSE_TAG       reduce using rule 18 (declaration -> return_statement .)
    for             reduce using rule 18 (declaration -> return_statement .)
    foreach         reduce using rule 18 (declaration -> return_statement .)
    switch          reduce using rule 18 (declaration -> return_statement .)
    exit            reduce using rule 18 (declaration -> return_statement .)
    VARIABLE        reduce using rule 18 (declaration -> return_statement .)
    array           reduce using rule 18 (declaration -> return_statement .)
    pow             reduce using rule 18 (declaration -> return_statement .)
    POW             reduce using rule 18 (declaration -> return_statement .)
    abs             reduce using rule 18 (declaration -> return_statement .)
    cos             reduce using rule 18 (declaration -> return_statement .)
    deg2rad         reduce using rule 18 (declaration -> return_statement .)
    rad2deg         reduce using rule 18 (declaration -> return_statement .)
    die             reduce using rule 18 (declaration -> return_statement .)
    exp             reduce using rule 18 (declaration -> return_statement .)
    floor           reduce using rule 18 (declaration -> return_statement .)
    isset           reduce using rule 18 (declaration -> return_statement .)
    list            reduce using rule 18 (declaration -> return_statement .)
    log             reduce using rule 18 (declaration -> return_statement .)
    log10           reduce using rule 18 (declaration -> return_statement .)
    max             reduce using rule 18 (declaration -> return_statement .)
    min             reduce using rule 18 (declaration -> return_statement .)
    rand            reduce using rule 18 (declaration -> return_statement .)
    round           reduce using rule 18 (declaration -> return_statement .)
    sin             reduce using rule 18 (declaration -> return_statement .)
    sqrt            reduce using rule 18 (declaration -> return_statement .)
    unset           reduce using rule 18 (declaration -> return_statement .)
    CADENA          reduce using rule 18 (declaration -> return_statement .)

  ! RBLOCK          [ reduce using rule 18 (declaration -> return_statement .) ]


state 366

    (66) expression -> additive_expression comp_op additive_expression logical_op additive_expression comp_op additive_expression .

    SEMICOLON       reduce using rule 66 (expression -> additive_expression comp_op additive_expression logical_op additive_expression comp_op additive_expression .)
    RPAREN          reduce using rule 66 (expression -> additive_expression comp_op additive_expression logical_op additive_expression comp_op additive_expression .)
    as              reduce using rule 66 (expression -> additive_expression comp_op additive_expression logical_op additive_expression comp_op additive_expression .)
    COMMA           reduce using rule 66 (expression -> additive_expression comp_op additive_expression logical_op additive_expression comp_op additive_expression .)
    RBRACKET        reduce using rule 66 (expression -> additive_expression comp_op additive_expression logical_op additive_expression comp_op additive_expression .)
    RBLOCK          reduce using rule 66 (expression -> additive_expression comp_op additive_expression logical_op additive_expression comp_op additive_expression .)
    COLON           reduce using rule 66 (expression -> additive_expression comp_op additive_expression logical_op additive_expression comp_op additive_expression .)


state 367

    (121) for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list . RBLOCK
    (5) declaration_list -> declaration_list . declaration
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . return_statement
    (19) declaration -> . obj_declaration
    (20) declaration -> . create_obj_declaration
    (21) declaration -> . footer_declaration
    (22) declaration -> . for_loop
    (23) declaration -> . foreach_loop
    (24) declaration -> . switch_statement
    (25) declaration -> . exit_statement
    (26) declaration -> . empty
    (29) header_declaration -> . include CADENA SEMICOLON
    (39) var_declaration -> . var_declaration2 SEMICOLON
    (30) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (31) print_declaration -> . print var_declaration2 SEMICOLON
    (32) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (33) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (34) print_declaration -> . print data_type SEMICOLON
    (35) echo_declaration -> . echo var_declaration2 SEMICOLON
    (36) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (37) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (38) echo_declaration -> . echo data_type SEMICOLON
    (59) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (60) iteration_stmt -> . while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON
    (61) iteration_stmt -> . do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON
    (62) iteration_stmt -> . do COLON declaration endwhile SEMICOLON
    (103) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (108) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK
    (109) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK
    (110) fun_call -> . ID LPAREN params RPAREN
    (111) return_statement -> . return expression SEMICOLON
    (112) return_statement -> . return params SEMICOLON
    (113) return_statement -> . return SEMICOLON
    (114) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (115) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (121) for_loop -> . for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK
    (122) for_loop -> . for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON
    (127) foreach_loop -> . foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK
    (128) foreach_loop -> . foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON
    (129) switch_statement -> . switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK
    (130) switch_statement -> . switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON
    (126) exit_statement -> . exit LPAREN expression RPAREN SEMICOLON
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    RBLOCK          shift and go to state 379
    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 26
    include         shift and go to state 27
    const           shift and go to state 30
    print           shift and go to state 32
    echo            shift and go to state 33
    while           shift and go to state 34
    do              shift and go to state 35
    if              shift and go to state 36
    function        shift and go to state 37
    ID              shift and go to state 31
    return          shift and go to state 38
    class           shift and go to state 39
    new             shift and go to state 40
    CLOSE_TAG       shift and go to state 41
    for             shift and go to state 42
    foreach         shift and go to state 43
    switch          shift and go to state 44
    exit            shift and go to state 45
    VARIABLE        shift and go to state 46
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69
    CADENA          shift and go to state 28

    declaration                    shift and go to state 70
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    return_statement               shift and go to state 18
    obj_declaration                shift and go to state 19
    create_obj_declaration         shift and go to state 20
    footer_declaration             shift and go to state 21
    for_loop                       shift and go to state 22
    foreach_loop                   shift and go to state 23
    switch_statement               shift and go to state 24
    exit_statement                 shift and go to state 25
    var_declaration2               shift and go to state 29
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 368

    (122) for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list . endfor SEMICOLON
    (5) declaration_list -> declaration_list . declaration
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . return_statement
    (19) declaration -> . obj_declaration
    (20) declaration -> . create_obj_declaration
    (21) declaration -> . footer_declaration
    (22) declaration -> . for_loop
    (23) declaration -> . foreach_loop
    (24) declaration -> . switch_statement
    (25) declaration -> . exit_statement
    (26) declaration -> . empty
    (29) header_declaration -> . include CADENA SEMICOLON
    (39) var_declaration -> . var_declaration2 SEMICOLON
    (30) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (31) print_declaration -> . print var_declaration2 SEMICOLON
    (32) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (33) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (34) print_declaration -> . print data_type SEMICOLON
    (35) echo_declaration -> . echo var_declaration2 SEMICOLON
    (36) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (37) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (38) echo_declaration -> . echo data_type SEMICOLON
    (59) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (60) iteration_stmt -> . while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON
    (61) iteration_stmt -> . do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON
    (62) iteration_stmt -> . do COLON declaration endwhile SEMICOLON
    (103) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (108) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK
    (109) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK
    (110) fun_call -> . ID LPAREN params RPAREN
    (111) return_statement -> . return expression SEMICOLON
    (112) return_statement -> . return params SEMICOLON
    (113) return_statement -> . return SEMICOLON
    (114) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (115) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (121) for_loop -> . for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK
    (122) for_loop -> . for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON
    (127) foreach_loop -> . foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK
    (128) foreach_loop -> . foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON
    (129) switch_statement -> . switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK
    (130) switch_statement -> . switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON
    (126) exit_statement -> . exit LPAREN expression RPAREN SEMICOLON
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    endfor          shift and go to state 380
    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 26
    include         shift and go to state 27
    const           shift and go to state 30
    print           shift and go to state 32
    echo            shift and go to state 33
    while           shift and go to state 34
    do              shift and go to state 35
    if              shift and go to state 36
    function        shift and go to state 37
    ID              shift and go to state 31
    return          shift and go to state 38
    class           shift and go to state 39
    new             shift and go to state 40
    CLOSE_TAG       shift and go to state 41
    for             shift and go to state 42
    foreach         shift and go to state 43
    switch          shift and go to state 44
    exit            shift and go to state 45
    VARIABLE        shift and go to state 46
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69
    CADENA          shift and go to state 28

    declaration                    shift and go to state 70
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    return_statement               shift and go to state 18
    obj_declaration                shift and go to state 19
    create_obj_declaration         shift and go to state 20
    footer_declaration             shift and go to state 21
    for_loop                       shift and go to state 22
    foreach_loop                   shift and go to state 23
    switch_statement               shift and go to state 24
    exit_statement                 shift and go to state 25
    var_declaration2               shift and go to state 29
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 369

    (127) foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list . RBLOCK
    (5) declaration_list -> declaration_list . declaration
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . return_statement
    (19) declaration -> . obj_declaration
    (20) declaration -> . create_obj_declaration
    (21) declaration -> . footer_declaration
    (22) declaration -> . for_loop
    (23) declaration -> . foreach_loop
    (24) declaration -> . switch_statement
    (25) declaration -> . exit_statement
    (26) declaration -> . empty
    (29) header_declaration -> . include CADENA SEMICOLON
    (39) var_declaration -> . var_declaration2 SEMICOLON
    (30) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (31) print_declaration -> . print var_declaration2 SEMICOLON
    (32) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (33) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (34) print_declaration -> . print data_type SEMICOLON
    (35) echo_declaration -> . echo var_declaration2 SEMICOLON
    (36) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (37) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (38) echo_declaration -> . echo data_type SEMICOLON
    (59) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (60) iteration_stmt -> . while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON
    (61) iteration_stmt -> . do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON
    (62) iteration_stmt -> . do COLON declaration endwhile SEMICOLON
    (103) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (108) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK
    (109) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK
    (110) fun_call -> . ID LPAREN params RPAREN
    (111) return_statement -> . return expression SEMICOLON
    (112) return_statement -> . return params SEMICOLON
    (113) return_statement -> . return SEMICOLON
    (114) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (115) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (121) for_loop -> . for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK
    (122) for_loop -> . for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON
    (127) foreach_loop -> . foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK
    (128) foreach_loop -> . foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON
    (129) switch_statement -> . switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK
    (130) switch_statement -> . switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON
    (126) exit_statement -> . exit LPAREN expression RPAREN SEMICOLON
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    RBLOCK          shift and go to state 381
    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 26
    include         shift and go to state 27
    const           shift and go to state 30
    print           shift and go to state 32
    echo            shift and go to state 33
    while           shift and go to state 34
    do              shift and go to state 35
    if              shift and go to state 36
    function        shift and go to state 37
    ID              shift and go to state 31
    return          shift and go to state 38
    class           shift and go to state 39
    new             shift and go to state 40
    CLOSE_TAG       shift and go to state 41
    for             shift and go to state 42
    foreach         shift and go to state 43
    switch          shift and go to state 44
    exit            shift and go to state 45
    VARIABLE        shift and go to state 46
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69
    CADENA          shift and go to state 28

    declaration                    shift and go to state 70
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    return_statement               shift and go to state 18
    obj_declaration                shift and go to state 19
    create_obj_declaration         shift and go to state 20
    footer_declaration             shift and go to state 21
    for_loop                       shift and go to state 22
    foreach_loop                   shift and go to state 23
    switch_statement               shift and go to state 24
    exit_statement                 shift and go to state 25
    var_declaration2               shift and go to state 29
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 370

    (128) foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list . endforeach SEMICOLON
    (5) declaration_list -> declaration_list . declaration
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . return_statement
    (19) declaration -> . obj_declaration
    (20) declaration -> . create_obj_declaration
    (21) declaration -> . footer_declaration
    (22) declaration -> . for_loop
    (23) declaration -> . foreach_loop
    (24) declaration -> . switch_statement
    (25) declaration -> . exit_statement
    (26) declaration -> . empty
    (29) header_declaration -> . include CADENA SEMICOLON
    (39) var_declaration -> . var_declaration2 SEMICOLON
    (30) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (31) print_declaration -> . print var_declaration2 SEMICOLON
    (32) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (33) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (34) print_declaration -> . print data_type SEMICOLON
    (35) echo_declaration -> . echo var_declaration2 SEMICOLON
    (36) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (37) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (38) echo_declaration -> . echo data_type SEMICOLON
    (59) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (60) iteration_stmt -> . while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON
    (61) iteration_stmt -> . do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON
    (62) iteration_stmt -> . do COLON declaration endwhile SEMICOLON
    (103) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (108) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK
    (109) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK
    (110) fun_call -> . ID LPAREN params RPAREN
    (111) return_statement -> . return expression SEMICOLON
    (112) return_statement -> . return params SEMICOLON
    (113) return_statement -> . return SEMICOLON
    (114) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (115) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (121) for_loop -> . for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK
    (122) for_loop -> . for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON
    (127) foreach_loop -> . foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK
    (128) foreach_loop -> . foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON
    (129) switch_statement -> . switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK
    (130) switch_statement -> . switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON
    (126) exit_statement -> . exit LPAREN expression RPAREN SEMICOLON
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    endforeach      shift and go to state 382
    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 26
    include         shift and go to state 27
    const           shift and go to state 30
    print           shift and go to state 32
    echo            shift and go to state 33
    while           shift and go to state 34
    do              shift and go to state 35
    if              shift and go to state 36
    function        shift and go to state 37
    ID              shift and go to state 31
    return          shift and go to state 38
    class           shift and go to state 39
    new             shift and go to state 40
    CLOSE_TAG       shift and go to state 41
    for             shift and go to state 42
    foreach         shift and go to state 43
    switch          shift and go to state 44
    exit            shift and go to state 45
    VARIABLE        shift and go to state 46
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69
    CADENA          shift and go to state 28

    declaration                    shift and go to state 70
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    return_statement               shift and go to state 18
    obj_declaration                shift and go to state 19
    create_obj_declaration         shift and go to state 20
    footer_declaration             shift and go to state 21
    for_loop                       shift and go to state 22
    foreach_loop                   shift and go to state 23
    switch_statement               shift and go to state 24
    exit_statement                 shift and go to state 25
    var_declaration2               shift and go to state 29
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 371

    (129) switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .

    COMMENT         reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)
    COMMENT_HASHTAG reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)
    COMMENT_MULTI   reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)
    empty           reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)
    include         reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)
    const           reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)
    print           reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)
    echo            reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)
    while           reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)
    do              reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)
    if              reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)
    function        reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)
    ID              reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)
    return          reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)
    class           reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)
    new             reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)
    CLOSE_TAG       reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)
    for             reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)
    foreach         reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)
    switch          reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)
    exit            reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)
    VARIABLE        reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)
    array           reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)
    pow             reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)
    POW             reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)
    abs             reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)
    cos             reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)
    deg2rad         reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)
    rad2deg         reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)
    die             reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)
    exp             reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)
    floor           reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)
    isset           reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)
    list            reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)
    log             reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)
    log10           reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)
    max             reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)
    min             reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)
    rand            reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)
    round           reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)
    sin             reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)
    sqrt            reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)
    unset           reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)
    CADENA          reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)
    $end            reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)
    RBLOCK          reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)
    endwhile        reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)
    endfor          reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)
    endforeach      reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)
    endswitch       reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)
    break           reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)
    default         reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)
    case            reduce using rule 129 (switch_statement -> switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK .)


state 372

    (136) default_block -> default COLON . statement_list
    (138) statement_list -> . declaration
    (139) statement_list -> . statement_list declaration
    (140) statement_list -> . empty_function
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . return_statement
    (19) declaration -> . obj_declaration
    (20) declaration -> . create_obj_declaration
    (21) declaration -> . footer_declaration
    (22) declaration -> . for_loop
    (23) declaration -> . foreach_loop
    (24) declaration -> . switch_statement
    (25) declaration -> . exit_statement
    (26) declaration -> . empty
    (174) empty_function -> .
    (29) header_declaration -> . include CADENA SEMICOLON
    (39) var_declaration -> . var_declaration2 SEMICOLON
    (30) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (31) print_declaration -> . print var_declaration2 SEMICOLON
    (32) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (33) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (34) print_declaration -> . print data_type SEMICOLON
    (35) echo_declaration -> . echo var_declaration2 SEMICOLON
    (36) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (37) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (38) echo_declaration -> . echo data_type SEMICOLON
    (59) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (60) iteration_stmt -> . while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON
    (61) iteration_stmt -> . do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON
    (62) iteration_stmt -> . do COLON declaration endwhile SEMICOLON
    (103) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (108) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK
    (109) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK
    (110) fun_call -> . ID LPAREN params RPAREN
    (111) return_statement -> . return expression SEMICOLON
    (112) return_statement -> . return params SEMICOLON
    (113) return_statement -> . return SEMICOLON
    (114) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (115) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (121) for_loop -> . for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK
    (122) for_loop -> . for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON
    (127) foreach_loop -> . foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK
    (128) foreach_loop -> . foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON
    (129) switch_statement -> . switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK
    (130) switch_statement -> . switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON
    (126) exit_statement -> . exit LPAREN expression RPAREN SEMICOLON
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for COMMENT_HASHTAG resolved as shift
  ! shift/reduce conflict for COMMENT_MULTI resolved as shift
  ! shift/reduce conflict for empty resolved as shift
  ! shift/reduce conflict for include resolved as shift
  ! shift/reduce conflict for const resolved as shift
  ! shift/reduce conflict for print resolved as shift
  ! shift/reduce conflict for echo resolved as shift
  ! shift/reduce conflict for while resolved as shift
  ! shift/reduce conflict for do resolved as shift
  ! shift/reduce conflict for if resolved as shift
  ! shift/reduce conflict for function resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for return resolved as shift
  ! shift/reduce conflict for class resolved as shift
  ! shift/reduce conflict for new resolved as shift
  ! shift/reduce conflict for CLOSE_TAG resolved as shift
  ! shift/reduce conflict for for resolved as shift
  ! shift/reduce conflict for foreach resolved as shift
  ! shift/reduce conflict for switch resolved as shift
  ! shift/reduce conflict for exit resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for array resolved as shift
  ! shift/reduce conflict for pow resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for abs resolved as shift
  ! shift/reduce conflict for cos resolved as shift
  ! shift/reduce conflict for deg2rad resolved as shift
  ! shift/reduce conflict for rad2deg resolved as shift
  ! shift/reduce conflict for die resolved as shift
  ! shift/reduce conflict for exp resolved as shift
  ! shift/reduce conflict for floor resolved as shift
  ! shift/reduce conflict for isset resolved as shift
  ! shift/reduce conflict for list resolved as shift
  ! shift/reduce conflict for log resolved as shift
  ! shift/reduce conflict for log10 resolved as shift
  ! shift/reduce conflict for max resolved as shift
  ! shift/reduce conflict for min resolved as shift
  ! shift/reduce conflict for rand resolved as shift
  ! shift/reduce conflict for round resolved as shift
  ! shift/reduce conflict for sin resolved as shift
  ! shift/reduce conflict for sqrt resolved as shift
  ! shift/reduce conflict for unset resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 26
    RBLOCK          reduce using rule 174 (empty_function -> .)
    endswitch       reduce using rule 174 (empty_function -> .)
    include         shift and go to state 27
    const           shift and go to state 30
    print           shift and go to state 32
    echo            shift and go to state 33
    while           shift and go to state 34
    do              shift and go to state 35
    if              shift and go to state 36
    function        shift and go to state 37
    ID              shift and go to state 31
    return          shift and go to state 38
    class           shift and go to state 39
    new             shift and go to state 40
    CLOSE_TAG       shift and go to state 41
    for             shift and go to state 42
    foreach         shift and go to state 43
    switch          shift and go to state 44
    exit            shift and go to state 45
    VARIABLE        shift and go to state 46
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69
    CADENA          shift and go to state 28

  ! COMMENT         [ reduce using rule 174 (empty_function -> .) ]
  ! COMMENT_HASHTAG [ reduce using rule 174 (empty_function -> .) ]
  ! COMMENT_MULTI   [ reduce using rule 174 (empty_function -> .) ]
  ! empty           [ reduce using rule 174 (empty_function -> .) ]
  ! include         [ reduce using rule 174 (empty_function -> .) ]
  ! const           [ reduce using rule 174 (empty_function -> .) ]
  ! print           [ reduce using rule 174 (empty_function -> .) ]
  ! echo            [ reduce using rule 174 (empty_function -> .) ]
  ! while           [ reduce using rule 174 (empty_function -> .) ]
  ! do              [ reduce using rule 174 (empty_function -> .) ]
  ! if              [ reduce using rule 174 (empty_function -> .) ]
  ! function        [ reduce using rule 174 (empty_function -> .) ]
  ! ID              [ reduce using rule 174 (empty_function -> .) ]
  ! return          [ reduce using rule 174 (empty_function -> .) ]
  ! class           [ reduce using rule 174 (empty_function -> .) ]
  ! new             [ reduce using rule 174 (empty_function -> .) ]
  ! CLOSE_TAG       [ reduce using rule 174 (empty_function -> .) ]
  ! for             [ reduce using rule 174 (empty_function -> .) ]
  ! foreach         [ reduce using rule 174 (empty_function -> .) ]
  ! switch          [ reduce using rule 174 (empty_function -> .) ]
  ! exit            [ reduce using rule 174 (empty_function -> .) ]
  ! VARIABLE        [ reduce using rule 174 (empty_function -> .) ]
  ! array           [ reduce using rule 174 (empty_function -> .) ]
  ! pow             [ reduce using rule 174 (empty_function -> .) ]
  ! POW             [ reduce using rule 174 (empty_function -> .) ]
  ! abs             [ reduce using rule 174 (empty_function -> .) ]
  ! cos             [ reduce using rule 174 (empty_function -> .) ]
  ! deg2rad         [ reduce using rule 174 (empty_function -> .) ]
  ! rad2deg         [ reduce using rule 174 (empty_function -> .) ]
  ! die             [ reduce using rule 174 (empty_function -> .) ]
  ! exp             [ reduce using rule 174 (empty_function -> .) ]
  ! floor           [ reduce using rule 174 (empty_function -> .) ]
  ! isset           [ reduce using rule 174 (empty_function -> .) ]
  ! list            [ reduce using rule 174 (empty_function -> .) ]
  ! log             [ reduce using rule 174 (empty_function -> .) ]
  ! log10           [ reduce using rule 174 (empty_function -> .) ]
  ! max             [ reduce using rule 174 (empty_function -> .) ]
  ! min             [ reduce using rule 174 (empty_function -> .) ]
  ! rand            [ reduce using rule 174 (empty_function -> .) ]
  ! round           [ reduce using rule 174 (empty_function -> .) ]
  ! sin             [ reduce using rule 174 (empty_function -> .) ]
  ! sqrt            [ reduce using rule 174 (empty_function -> .) ]
  ! unset           [ reduce using rule 174 (empty_function -> .) ]
  ! CADENA          [ reduce using rule 174 (empty_function -> .) ]

    statement_list                 shift and go to state 383
    declaration                    shift and go to state 384
    empty_function                 shift and go to state 385
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    return_statement               shift and go to state 18
    obj_declaration                shift and go to state 19
    create_obj_declaration         shift and go to state 20
    footer_declaration             shift and go to state 21
    for_loop                       shift and go to state 22
    foreach_loop                   shift and go to state 23
    switch_statement               shift and go to state 24
    exit_statement                 shift and go to state 25
    var_declaration2               shift and go to state 29
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 373

    (134) case_block -> case expression COLON . statement_list
    (135) case_block -> case expression COLON . statement_list break SEMICOLON
    (138) statement_list -> . declaration
    (139) statement_list -> . statement_list declaration
    (140) statement_list -> . empty_function
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . return_statement
    (19) declaration -> . obj_declaration
    (20) declaration -> . create_obj_declaration
    (21) declaration -> . footer_declaration
    (22) declaration -> . for_loop
    (23) declaration -> . foreach_loop
    (24) declaration -> . switch_statement
    (25) declaration -> . exit_statement
    (26) declaration -> . empty
    (174) empty_function -> .
    (29) header_declaration -> . include CADENA SEMICOLON
    (39) var_declaration -> . var_declaration2 SEMICOLON
    (30) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (31) print_declaration -> . print var_declaration2 SEMICOLON
    (32) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (33) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (34) print_declaration -> . print data_type SEMICOLON
    (35) echo_declaration -> . echo var_declaration2 SEMICOLON
    (36) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (37) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (38) echo_declaration -> . echo data_type SEMICOLON
    (59) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (60) iteration_stmt -> . while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON
    (61) iteration_stmt -> . do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON
    (62) iteration_stmt -> . do COLON declaration endwhile SEMICOLON
    (103) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (108) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK
    (109) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK
    (110) fun_call -> . ID LPAREN params RPAREN
    (111) return_statement -> . return expression SEMICOLON
    (112) return_statement -> . return params SEMICOLON
    (113) return_statement -> . return SEMICOLON
    (114) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (115) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (121) for_loop -> . for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK
    (122) for_loop -> . for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON
    (127) foreach_loop -> . foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK
    (128) foreach_loop -> . foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON
    (129) switch_statement -> . switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK
    (130) switch_statement -> . switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON
    (126) exit_statement -> . exit LPAREN expression RPAREN SEMICOLON
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for COMMENT_HASHTAG resolved as shift
  ! shift/reduce conflict for COMMENT_MULTI resolved as shift
  ! shift/reduce conflict for empty resolved as shift
  ! shift/reduce conflict for include resolved as shift
  ! shift/reduce conflict for const resolved as shift
  ! shift/reduce conflict for print resolved as shift
  ! shift/reduce conflict for echo resolved as shift
  ! shift/reduce conflict for while resolved as shift
  ! shift/reduce conflict for do resolved as shift
  ! shift/reduce conflict for if resolved as shift
  ! shift/reduce conflict for function resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for return resolved as shift
  ! shift/reduce conflict for class resolved as shift
  ! shift/reduce conflict for new resolved as shift
  ! shift/reduce conflict for CLOSE_TAG resolved as shift
  ! shift/reduce conflict for for resolved as shift
  ! shift/reduce conflict for foreach resolved as shift
  ! shift/reduce conflict for switch resolved as shift
  ! shift/reduce conflict for exit resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for array resolved as shift
  ! shift/reduce conflict for pow resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for abs resolved as shift
  ! shift/reduce conflict for cos resolved as shift
  ! shift/reduce conflict for deg2rad resolved as shift
  ! shift/reduce conflict for rad2deg resolved as shift
  ! shift/reduce conflict for die resolved as shift
  ! shift/reduce conflict for exp resolved as shift
  ! shift/reduce conflict for floor resolved as shift
  ! shift/reduce conflict for isset resolved as shift
  ! shift/reduce conflict for list resolved as shift
  ! shift/reduce conflict for log resolved as shift
  ! shift/reduce conflict for log10 resolved as shift
  ! shift/reduce conflict for max resolved as shift
  ! shift/reduce conflict for min resolved as shift
  ! shift/reduce conflict for rand resolved as shift
  ! shift/reduce conflict for round resolved as shift
  ! shift/reduce conflict for sin resolved as shift
  ! shift/reduce conflict for sqrt resolved as shift
  ! shift/reduce conflict for unset resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 26
    break           reduce using rule 174 (empty_function -> .)
    default         reduce using rule 174 (empty_function -> .)
    case            reduce using rule 174 (empty_function -> .)
    RBLOCK          reduce using rule 174 (empty_function -> .)
    endswitch       reduce using rule 174 (empty_function -> .)
    include         shift and go to state 27
    const           shift and go to state 30
    print           shift and go to state 32
    echo            shift and go to state 33
    while           shift and go to state 34
    do              shift and go to state 35
    if              shift and go to state 36
    function        shift and go to state 37
    ID              shift and go to state 31
    return          shift and go to state 38
    class           shift and go to state 39
    new             shift and go to state 40
    CLOSE_TAG       shift and go to state 41
    for             shift and go to state 42
    foreach         shift and go to state 43
    switch          shift and go to state 44
    exit            shift and go to state 45
    VARIABLE        shift and go to state 46
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69
    CADENA          shift and go to state 28

  ! COMMENT         [ reduce using rule 174 (empty_function -> .) ]
  ! COMMENT_HASHTAG [ reduce using rule 174 (empty_function -> .) ]
  ! COMMENT_MULTI   [ reduce using rule 174 (empty_function -> .) ]
  ! empty           [ reduce using rule 174 (empty_function -> .) ]
  ! include         [ reduce using rule 174 (empty_function -> .) ]
  ! const           [ reduce using rule 174 (empty_function -> .) ]
  ! print           [ reduce using rule 174 (empty_function -> .) ]
  ! echo            [ reduce using rule 174 (empty_function -> .) ]
  ! while           [ reduce using rule 174 (empty_function -> .) ]
  ! do              [ reduce using rule 174 (empty_function -> .) ]
  ! if              [ reduce using rule 174 (empty_function -> .) ]
  ! function        [ reduce using rule 174 (empty_function -> .) ]
  ! ID              [ reduce using rule 174 (empty_function -> .) ]
  ! return          [ reduce using rule 174 (empty_function -> .) ]
  ! class           [ reduce using rule 174 (empty_function -> .) ]
  ! new             [ reduce using rule 174 (empty_function -> .) ]
  ! CLOSE_TAG       [ reduce using rule 174 (empty_function -> .) ]
  ! for             [ reduce using rule 174 (empty_function -> .) ]
  ! foreach         [ reduce using rule 174 (empty_function -> .) ]
  ! switch          [ reduce using rule 174 (empty_function -> .) ]
  ! exit            [ reduce using rule 174 (empty_function -> .) ]
  ! VARIABLE        [ reduce using rule 174 (empty_function -> .) ]
  ! array           [ reduce using rule 174 (empty_function -> .) ]
  ! pow             [ reduce using rule 174 (empty_function -> .) ]
  ! POW             [ reduce using rule 174 (empty_function -> .) ]
  ! abs             [ reduce using rule 174 (empty_function -> .) ]
  ! cos             [ reduce using rule 174 (empty_function -> .) ]
  ! deg2rad         [ reduce using rule 174 (empty_function -> .) ]
  ! rad2deg         [ reduce using rule 174 (empty_function -> .) ]
  ! die             [ reduce using rule 174 (empty_function -> .) ]
  ! exp             [ reduce using rule 174 (empty_function -> .) ]
  ! floor           [ reduce using rule 174 (empty_function -> .) ]
  ! isset           [ reduce using rule 174 (empty_function -> .) ]
  ! list            [ reduce using rule 174 (empty_function -> .) ]
  ! log             [ reduce using rule 174 (empty_function -> .) ]
  ! log10           [ reduce using rule 174 (empty_function -> .) ]
  ! max             [ reduce using rule 174 (empty_function -> .) ]
  ! min             [ reduce using rule 174 (empty_function -> .) ]
  ! rand            [ reduce using rule 174 (empty_function -> .) ]
  ! round           [ reduce using rule 174 (empty_function -> .) ]
  ! sin             [ reduce using rule 174 (empty_function -> .) ]
  ! sqrt            [ reduce using rule 174 (empty_function -> .) ]
  ! unset           [ reduce using rule 174 (empty_function -> .) ]
  ! CADENA          [ reduce using rule 174 (empty_function -> .) ]

    statement_list                 shift and go to state 386
    declaration                    shift and go to state 384
    empty_function                 shift and go to state 385
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    return_statement               shift and go to state 18
    obj_declaration                shift and go to state 19
    create_obj_declaration         shift and go to state 20
    footer_declaration             shift and go to state 21
    for_loop                       shift and go to state 22
    foreach_loop                   shift and go to state 23
    switch_statement               shift and go to state 24
    exit_statement                 shift and go to state 25
    var_declaration2               shift and go to state 29
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 374

    (130) switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch . SEMICOLON

    SEMICOLON       shift and go to state 387


state 375

    (61) iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .

    COMMENT         reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)
    COMMENT_HASHTAG reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)
    COMMENT_MULTI   reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)
    empty           reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)
    include         reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)
    const           reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)
    print           reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)
    echo            reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)
    while           reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)
    do              reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)
    if              reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)
    function        reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)
    ID              reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)
    return          reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)
    class           reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)
    new             reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)
    CLOSE_TAG       reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)
    for             reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)
    foreach         reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)
    switch          reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)
    exit            reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)
    VARIABLE        reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)
    array           reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)
    pow             reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)
    POW             reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)
    abs             reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)
    cos             reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)
    deg2rad         reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)
    rad2deg         reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)
    die             reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)
    exp             reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)
    floor           reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)
    isset           reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)
    list            reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)
    log             reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)
    log10           reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)
    max             reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)
    min             reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)
    rand            reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)
    round           reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)
    sin             reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)
    sqrt            reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)
    unset           reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)
    CADENA          reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)
    $end            reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)
    RBLOCK          reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)
    endwhile        reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)
    endfor          reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)
    endforeach      reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)
    endswitch       reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)
    break           reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)
    default         reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)
    case            reduce using rule 61 (iteration_stmt -> do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON .)


state 376

    (104) else_part -> elseif LPAREN . expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (63) expression -> . additive_expression
    (64) expression -> . additive_expression logical_op additive_expression
    (65) expression -> . additive_expression comp_op additive_expression
    (66) expression -> . additive_expression comp_op additive_expression logical_op additive_expression comp_op additive_expression
    (67) expression -> . additive_expression bits_op additive_expression
    (68) additive_expression -> . term
    (69) additive_expression -> . term math_op term
    (70) term -> . MINUS term
    (71) term -> . factor
    (72) term -> . factor increment_decrement_op
    (73) term -> . increment_decrement_op factor
    (74) factor -> . NUMBER
    (75) factor -> . VARIABLE
    (76) factor -> . LPAREN expression RPAREN
    (77) increment_decrement_op -> . PLUSPLUS
    (78) increment_decrement_op -> . MINUSMINUS

    MINUS           shift and go to state 98
    NUMBER          shift and go to state 160
    VARIABLE        shift and go to state 161
    LPAREN          shift and go to state 103
    PLUSPLUS        shift and go to state 104
    MINUSMINUS      shift and go to state 105

    expression                     shift and go to state 388
    additive_expression            shift and go to state 92
    term                           shift and go to state 94
    factor                         shift and go to state 99
    increment_decrement_op         shift and go to state 100

state 377

    (105) else_part -> else LBLOCK . declaration_list RBLOCK
    (4) declaration_list -> . declaration
    (5) declaration_list -> . declaration_list declaration
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . return_statement
    (19) declaration -> . obj_declaration
    (20) declaration -> . create_obj_declaration
    (21) declaration -> . footer_declaration
    (22) declaration -> . for_loop
    (23) declaration -> . foreach_loop
    (24) declaration -> . switch_statement
    (25) declaration -> . exit_statement
    (26) declaration -> . empty
    (29) header_declaration -> . include CADENA SEMICOLON
    (39) var_declaration -> . var_declaration2 SEMICOLON
    (30) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (31) print_declaration -> . print var_declaration2 SEMICOLON
    (32) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (33) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (34) print_declaration -> . print data_type SEMICOLON
    (35) echo_declaration -> . echo var_declaration2 SEMICOLON
    (36) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (37) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (38) echo_declaration -> . echo data_type SEMICOLON
    (59) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (60) iteration_stmt -> . while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON
    (61) iteration_stmt -> . do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON
    (62) iteration_stmt -> . do COLON declaration endwhile SEMICOLON
    (103) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (108) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK
    (109) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK
    (110) fun_call -> . ID LPAREN params RPAREN
    (111) return_statement -> . return expression SEMICOLON
    (112) return_statement -> . return params SEMICOLON
    (113) return_statement -> . return SEMICOLON
    (114) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (115) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (121) for_loop -> . for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK
    (122) for_loop -> . for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON
    (127) foreach_loop -> . foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK
    (128) foreach_loop -> . foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON
    (129) switch_statement -> . switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK
    (130) switch_statement -> . switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON
    (126) exit_statement -> . exit LPAREN expression RPAREN SEMICOLON
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 26
    include         shift and go to state 27
    const           shift and go to state 30
    print           shift and go to state 32
    echo            shift and go to state 33
    while           shift and go to state 34
    do              shift and go to state 35
    if              shift and go to state 36
    function        shift and go to state 37
    ID              shift and go to state 31
    return          shift and go to state 38
    class           shift and go to state 39
    new             shift and go to state 40
    CLOSE_TAG       shift and go to state 41
    for             shift and go to state 42
    foreach         shift and go to state 43
    switch          shift and go to state 44
    exit            shift and go to state 45
    VARIABLE        shift and go to state 46
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69
    CADENA          shift and go to state 28

    declaration_list               shift and go to state 389
    declaration                    shift and go to state 5
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    return_statement               shift and go to state 18
    obj_declaration                shift and go to state 19
    create_obj_declaration         shift and go to state 20
    footer_declaration             shift and go to state 21
    for_loop                       shift and go to state 22
    foreach_loop                   shift and go to state 23
    switch_statement               shift and go to state 24
    exit_statement                 shift and go to state 25
    var_declaration2               shift and go to state 29
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 378

    (109) fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .

    COMMENT         reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)
    COMMENT_HASHTAG reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)
    COMMENT_MULTI   reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)
    empty           reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)
    include         reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)
    const           reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)
    print           reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)
    echo            reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)
    while           reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)
    do              reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)
    if              reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)
    function        reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)
    ID              reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)
    return          reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)
    class           reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)
    new             reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)
    CLOSE_TAG       reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)
    for             reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)
    foreach         reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)
    switch          reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)
    exit            reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)
    VARIABLE        reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)
    array           reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)
    pow             reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)
    POW             reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)
    abs             reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)
    cos             reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)
    deg2rad         reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)
    rad2deg         reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)
    die             reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)
    exp             reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)
    floor           reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)
    isset           reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)
    list            reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)
    log             reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)
    log10           reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)
    max             reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)
    min             reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)
    rand            reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)
    round           reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)
    sin             reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)
    sqrt            reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)
    unset           reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)
    CADENA          reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)
    $end            reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)
    RBLOCK          reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)
    endwhile        reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)
    endfor          reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)
    endforeach      reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)
    endswitch       reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)
    break           reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)
    default         reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)
    case            reduce using rule 109 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK .)


state 379

    (121) for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .

    COMMENT         reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    COMMENT_HASHTAG reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    COMMENT_MULTI   reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    empty           reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    include         reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    const           reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    print           reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    echo            reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    while           reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    do              reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    if              reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    function        reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    ID              reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    return          reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    class           reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    new             reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    CLOSE_TAG       reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    for             reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    foreach         reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    switch          reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    exit            reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    VARIABLE        reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    array           reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    pow             reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    POW             reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    abs             reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    cos             reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    deg2rad         reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    rad2deg         reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    die             reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    exp             reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    floor           reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    isset           reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    list            reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    log             reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    log10           reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    max             reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    min             reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    rand            reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    round           reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    sin             reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    sqrt            reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    unset           reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    CADENA          reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    $end            reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    RBLOCK          reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    endwhile        reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    endfor          reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    endforeach      reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    endswitch       reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    break           reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    default         reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    case            reduce using rule 121 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)


state 380

    (122) for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor . SEMICOLON

    SEMICOLON       shift and go to state 390


state 381

    (127) foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .

    COMMENT         reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    COMMENT_HASHTAG reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    COMMENT_MULTI   reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    empty           reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    include         reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    const           reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    print           reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    echo            reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    while           reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    do              reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    if              reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    function        reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    ID              reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    return          reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    class           reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    new             reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    CLOSE_TAG       reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    for             reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    foreach         reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    switch          reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    exit            reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    VARIABLE        reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    array           reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    pow             reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    POW             reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    abs             reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    cos             reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    deg2rad         reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    rad2deg         reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    die             reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    exp             reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    floor           reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    isset           reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    list            reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    log             reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    log10           reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    max             reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    min             reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    rand            reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    round           reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    sin             reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    sqrt            reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    unset           reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    CADENA          reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    $end            reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    RBLOCK          reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    endwhile        reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    endfor          reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    endforeach      reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    endswitch       reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    break           reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    default         reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    case            reduce using rule 127 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)


state 382

    (128) foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach . SEMICOLON

    SEMICOLON       shift and go to state 391


state 383

    (136) default_block -> default COLON statement_list .
    (139) statement_list -> statement_list . declaration
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . return_statement
    (19) declaration -> . obj_declaration
    (20) declaration -> . create_obj_declaration
    (21) declaration -> . footer_declaration
    (22) declaration -> . for_loop
    (23) declaration -> . foreach_loop
    (24) declaration -> . switch_statement
    (25) declaration -> . exit_statement
    (26) declaration -> . empty
    (29) header_declaration -> . include CADENA SEMICOLON
    (39) var_declaration -> . var_declaration2 SEMICOLON
    (30) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (31) print_declaration -> . print var_declaration2 SEMICOLON
    (32) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (33) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (34) print_declaration -> . print data_type SEMICOLON
    (35) echo_declaration -> . echo var_declaration2 SEMICOLON
    (36) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (37) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (38) echo_declaration -> . echo data_type SEMICOLON
    (59) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (60) iteration_stmt -> . while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON
    (61) iteration_stmt -> . do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON
    (62) iteration_stmt -> . do COLON declaration endwhile SEMICOLON
    (103) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (108) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK
    (109) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK
    (110) fun_call -> . ID LPAREN params RPAREN
    (111) return_statement -> . return expression SEMICOLON
    (112) return_statement -> . return params SEMICOLON
    (113) return_statement -> . return SEMICOLON
    (114) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (115) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (121) for_loop -> . for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK
    (122) for_loop -> . for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON
    (127) foreach_loop -> . foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK
    (128) foreach_loop -> . foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON
    (129) switch_statement -> . switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK
    (130) switch_statement -> . switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON
    (126) exit_statement -> . exit LPAREN expression RPAREN SEMICOLON
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    RBLOCK          reduce using rule 136 (default_block -> default COLON statement_list .)
    endswitch       reduce using rule 136 (default_block -> default COLON statement_list .)
    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 26
    include         shift and go to state 27
    const           shift and go to state 30
    print           shift and go to state 32
    echo            shift and go to state 33
    while           shift and go to state 34
    do              shift and go to state 35
    if              shift and go to state 36
    function        shift and go to state 37
    ID              shift and go to state 31
    return          shift and go to state 38
    class           shift and go to state 39
    new             shift and go to state 40
    CLOSE_TAG       shift and go to state 41
    for             shift and go to state 42
    foreach         shift and go to state 43
    switch          shift and go to state 44
    exit            shift and go to state 45
    VARIABLE        shift and go to state 46
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69
    CADENA          shift and go to state 28

    declaration                    shift and go to state 392
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    return_statement               shift and go to state 18
    obj_declaration                shift and go to state 19
    create_obj_declaration         shift and go to state 20
    footer_declaration             shift and go to state 21
    for_loop                       shift and go to state 22
    foreach_loop                   shift and go to state 23
    switch_statement               shift and go to state 24
    exit_statement                 shift and go to state 25
    var_declaration2               shift and go to state 29
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 384

    (138) statement_list -> declaration .

    COMMENT         reduce using rule 138 (statement_list -> declaration .)
    COMMENT_HASHTAG reduce using rule 138 (statement_list -> declaration .)
    COMMENT_MULTI   reduce using rule 138 (statement_list -> declaration .)
    empty           reduce using rule 138 (statement_list -> declaration .)
    include         reduce using rule 138 (statement_list -> declaration .)
    const           reduce using rule 138 (statement_list -> declaration .)
    print           reduce using rule 138 (statement_list -> declaration .)
    echo            reduce using rule 138 (statement_list -> declaration .)
    while           reduce using rule 138 (statement_list -> declaration .)
    do              reduce using rule 138 (statement_list -> declaration .)
    if              reduce using rule 138 (statement_list -> declaration .)
    function        reduce using rule 138 (statement_list -> declaration .)
    ID              reduce using rule 138 (statement_list -> declaration .)
    return          reduce using rule 138 (statement_list -> declaration .)
    class           reduce using rule 138 (statement_list -> declaration .)
    new             reduce using rule 138 (statement_list -> declaration .)
    CLOSE_TAG       reduce using rule 138 (statement_list -> declaration .)
    for             reduce using rule 138 (statement_list -> declaration .)
    foreach         reduce using rule 138 (statement_list -> declaration .)
    switch          reduce using rule 138 (statement_list -> declaration .)
    exit            reduce using rule 138 (statement_list -> declaration .)
    VARIABLE        reduce using rule 138 (statement_list -> declaration .)
    array           reduce using rule 138 (statement_list -> declaration .)
    pow             reduce using rule 138 (statement_list -> declaration .)
    POW             reduce using rule 138 (statement_list -> declaration .)
    abs             reduce using rule 138 (statement_list -> declaration .)
    cos             reduce using rule 138 (statement_list -> declaration .)
    deg2rad         reduce using rule 138 (statement_list -> declaration .)
    rad2deg         reduce using rule 138 (statement_list -> declaration .)
    die             reduce using rule 138 (statement_list -> declaration .)
    exp             reduce using rule 138 (statement_list -> declaration .)
    floor           reduce using rule 138 (statement_list -> declaration .)
    isset           reduce using rule 138 (statement_list -> declaration .)
    list            reduce using rule 138 (statement_list -> declaration .)
    log             reduce using rule 138 (statement_list -> declaration .)
    log10           reduce using rule 138 (statement_list -> declaration .)
    max             reduce using rule 138 (statement_list -> declaration .)
    min             reduce using rule 138 (statement_list -> declaration .)
    rand            reduce using rule 138 (statement_list -> declaration .)
    round           reduce using rule 138 (statement_list -> declaration .)
    sin             reduce using rule 138 (statement_list -> declaration .)
    sqrt            reduce using rule 138 (statement_list -> declaration .)
    unset           reduce using rule 138 (statement_list -> declaration .)
    CADENA          reduce using rule 138 (statement_list -> declaration .)
    RBLOCK          reduce using rule 138 (statement_list -> declaration .)
    endswitch       reduce using rule 138 (statement_list -> declaration .)
    break           reduce using rule 138 (statement_list -> declaration .)
    default         reduce using rule 138 (statement_list -> declaration .)
    case            reduce using rule 138 (statement_list -> declaration .)


state 385

    (140) statement_list -> empty_function .

    COMMENT         reduce using rule 140 (statement_list -> empty_function .)
    COMMENT_HASHTAG reduce using rule 140 (statement_list -> empty_function .)
    COMMENT_MULTI   reduce using rule 140 (statement_list -> empty_function .)
    empty           reduce using rule 140 (statement_list -> empty_function .)
    include         reduce using rule 140 (statement_list -> empty_function .)
    const           reduce using rule 140 (statement_list -> empty_function .)
    print           reduce using rule 140 (statement_list -> empty_function .)
    echo            reduce using rule 140 (statement_list -> empty_function .)
    while           reduce using rule 140 (statement_list -> empty_function .)
    do              reduce using rule 140 (statement_list -> empty_function .)
    if              reduce using rule 140 (statement_list -> empty_function .)
    function        reduce using rule 140 (statement_list -> empty_function .)
    ID              reduce using rule 140 (statement_list -> empty_function .)
    return          reduce using rule 140 (statement_list -> empty_function .)
    class           reduce using rule 140 (statement_list -> empty_function .)
    new             reduce using rule 140 (statement_list -> empty_function .)
    CLOSE_TAG       reduce using rule 140 (statement_list -> empty_function .)
    for             reduce using rule 140 (statement_list -> empty_function .)
    foreach         reduce using rule 140 (statement_list -> empty_function .)
    switch          reduce using rule 140 (statement_list -> empty_function .)
    exit            reduce using rule 140 (statement_list -> empty_function .)
    VARIABLE        reduce using rule 140 (statement_list -> empty_function .)
    array           reduce using rule 140 (statement_list -> empty_function .)
    pow             reduce using rule 140 (statement_list -> empty_function .)
    POW             reduce using rule 140 (statement_list -> empty_function .)
    abs             reduce using rule 140 (statement_list -> empty_function .)
    cos             reduce using rule 140 (statement_list -> empty_function .)
    deg2rad         reduce using rule 140 (statement_list -> empty_function .)
    rad2deg         reduce using rule 140 (statement_list -> empty_function .)
    die             reduce using rule 140 (statement_list -> empty_function .)
    exp             reduce using rule 140 (statement_list -> empty_function .)
    floor           reduce using rule 140 (statement_list -> empty_function .)
    isset           reduce using rule 140 (statement_list -> empty_function .)
    list            reduce using rule 140 (statement_list -> empty_function .)
    log             reduce using rule 140 (statement_list -> empty_function .)
    log10           reduce using rule 140 (statement_list -> empty_function .)
    max             reduce using rule 140 (statement_list -> empty_function .)
    min             reduce using rule 140 (statement_list -> empty_function .)
    rand            reduce using rule 140 (statement_list -> empty_function .)
    round           reduce using rule 140 (statement_list -> empty_function .)
    sin             reduce using rule 140 (statement_list -> empty_function .)
    sqrt            reduce using rule 140 (statement_list -> empty_function .)
    unset           reduce using rule 140 (statement_list -> empty_function .)
    CADENA          reduce using rule 140 (statement_list -> empty_function .)
    RBLOCK          reduce using rule 140 (statement_list -> empty_function .)
    endswitch       reduce using rule 140 (statement_list -> empty_function .)
    break           reduce using rule 140 (statement_list -> empty_function .)
    default         reduce using rule 140 (statement_list -> empty_function .)
    case            reduce using rule 140 (statement_list -> empty_function .)


state 386

    (134) case_block -> case expression COLON statement_list .
    (135) case_block -> case expression COLON statement_list . break SEMICOLON
    (139) statement_list -> statement_list . declaration
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . return_statement
    (19) declaration -> . obj_declaration
    (20) declaration -> . create_obj_declaration
    (21) declaration -> . footer_declaration
    (22) declaration -> . for_loop
    (23) declaration -> . foreach_loop
    (24) declaration -> . switch_statement
    (25) declaration -> . exit_statement
    (26) declaration -> . empty
    (29) header_declaration -> . include CADENA SEMICOLON
    (39) var_declaration -> . var_declaration2 SEMICOLON
    (30) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (31) print_declaration -> . print var_declaration2 SEMICOLON
    (32) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (33) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (34) print_declaration -> . print data_type SEMICOLON
    (35) echo_declaration -> . echo var_declaration2 SEMICOLON
    (36) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (37) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (38) echo_declaration -> . echo data_type SEMICOLON
    (59) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (60) iteration_stmt -> . while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON
    (61) iteration_stmt -> . do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON
    (62) iteration_stmt -> . do COLON declaration endwhile SEMICOLON
    (103) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (108) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK
    (109) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK
    (110) fun_call -> . ID LPAREN params RPAREN
    (111) return_statement -> . return expression SEMICOLON
    (112) return_statement -> . return params SEMICOLON
    (113) return_statement -> . return SEMICOLON
    (114) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (115) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (121) for_loop -> . for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK
    (122) for_loop -> . for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON
    (127) foreach_loop -> . foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK
    (128) foreach_loop -> . foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON
    (129) switch_statement -> . switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK
    (130) switch_statement -> . switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON
    (126) exit_statement -> . exit LPAREN expression RPAREN SEMICOLON
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    default         reduce using rule 134 (case_block -> case expression COLON statement_list .)
    case            reduce using rule 134 (case_block -> case expression COLON statement_list .)
    RBLOCK          reduce using rule 134 (case_block -> case expression COLON statement_list .)
    endswitch       reduce using rule 134 (case_block -> case expression COLON statement_list .)
    break           shift and go to state 393
    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 26
    include         shift and go to state 27
    const           shift and go to state 30
    print           shift and go to state 32
    echo            shift and go to state 33
    while           shift and go to state 34
    do              shift and go to state 35
    if              shift and go to state 36
    function        shift and go to state 37
    ID              shift and go to state 31
    return          shift and go to state 38
    class           shift and go to state 39
    new             shift and go to state 40
    CLOSE_TAG       shift and go to state 41
    for             shift and go to state 42
    foreach         shift and go to state 43
    switch          shift and go to state 44
    exit            shift and go to state 45
    VARIABLE        shift and go to state 46
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69
    CADENA          shift and go to state 28

    declaration                    shift and go to state 392
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    return_statement               shift and go to state 18
    obj_declaration                shift and go to state 19
    create_obj_declaration         shift and go to state 20
    footer_declaration             shift and go to state 21
    for_loop                       shift and go to state 22
    foreach_loop                   shift and go to state 23
    switch_statement               shift and go to state 24
    exit_statement                 shift and go to state 25
    var_declaration2               shift and go to state 29
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 387

    (130) switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .

    COMMENT         reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)
    COMMENT_HASHTAG reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)
    COMMENT_MULTI   reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)
    empty           reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)
    include         reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)
    const           reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)
    print           reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)
    echo            reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)
    while           reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)
    do              reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)
    if              reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)
    function        reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)
    ID              reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)
    return          reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)
    class           reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)
    new             reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)
    CLOSE_TAG       reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)
    for             reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)
    foreach         reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)
    switch          reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)
    exit            reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)
    VARIABLE        reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)
    array           reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)
    pow             reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)
    POW             reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)
    abs             reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)
    cos             reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)
    deg2rad         reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)
    rad2deg         reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)
    die             reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)
    exp             reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)
    floor           reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)
    isset           reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)
    list            reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)
    log             reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)
    log10           reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)
    max             reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)
    min             reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)
    rand            reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)
    round           reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)
    sin             reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)
    sqrt            reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)
    unset           reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)
    CADENA          reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)
    $end            reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)
    RBLOCK          reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)
    endwhile        reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)
    endfor          reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)
    endforeach      reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)
    endswitch       reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)
    break           reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)
    default         reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)
    case            reduce using rule 130 (switch_statement -> switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON .)


state 388

    (104) else_part -> elseif LPAREN expression . RPAREN LBLOCK declaration_list RBLOCK else_part

    RPAREN          shift and go to state 394


state 389

    (105) else_part -> else LBLOCK declaration_list . RBLOCK
    (5) declaration_list -> declaration_list . declaration
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . return_statement
    (19) declaration -> . obj_declaration
    (20) declaration -> . create_obj_declaration
    (21) declaration -> . footer_declaration
    (22) declaration -> . for_loop
    (23) declaration -> . foreach_loop
    (24) declaration -> . switch_statement
    (25) declaration -> . exit_statement
    (26) declaration -> . empty
    (29) header_declaration -> . include CADENA SEMICOLON
    (39) var_declaration -> . var_declaration2 SEMICOLON
    (30) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (31) print_declaration -> . print var_declaration2 SEMICOLON
    (32) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (33) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (34) print_declaration -> . print data_type SEMICOLON
    (35) echo_declaration -> . echo var_declaration2 SEMICOLON
    (36) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (37) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (38) echo_declaration -> . echo data_type SEMICOLON
    (59) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (60) iteration_stmt -> . while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON
    (61) iteration_stmt -> . do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON
    (62) iteration_stmt -> . do COLON declaration endwhile SEMICOLON
    (103) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (108) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK
    (109) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK
    (110) fun_call -> . ID LPAREN params RPAREN
    (111) return_statement -> . return expression SEMICOLON
    (112) return_statement -> . return params SEMICOLON
    (113) return_statement -> . return SEMICOLON
    (114) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (115) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (121) for_loop -> . for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK
    (122) for_loop -> . for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON
    (127) foreach_loop -> . foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK
    (128) foreach_loop -> . foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON
    (129) switch_statement -> . switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK
    (130) switch_statement -> . switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON
    (126) exit_statement -> . exit LPAREN expression RPAREN SEMICOLON
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    RBLOCK          shift and go to state 395
    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 26
    include         shift and go to state 27
    const           shift and go to state 30
    print           shift and go to state 32
    echo            shift and go to state 33
    while           shift and go to state 34
    do              shift and go to state 35
    if              shift and go to state 36
    function        shift and go to state 37
    ID              shift and go to state 31
    return          shift and go to state 38
    class           shift and go to state 39
    new             shift and go to state 40
    CLOSE_TAG       shift and go to state 41
    for             shift and go to state 42
    foreach         shift and go to state 43
    switch          shift and go to state 44
    exit            shift and go to state 45
    VARIABLE        shift and go to state 46
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69
    CADENA          shift and go to state 28

    declaration                    shift and go to state 70
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    return_statement               shift and go to state 18
    obj_declaration                shift and go to state 19
    create_obj_declaration         shift and go to state 20
    footer_declaration             shift and go to state 21
    for_loop                       shift and go to state 22
    foreach_loop                   shift and go to state 23
    switch_statement               shift and go to state 24
    exit_statement                 shift and go to state 25
    var_declaration2               shift and go to state 29
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 390

    (122) for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .

    COMMENT         reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)
    COMMENT_HASHTAG reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)
    COMMENT_MULTI   reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)
    empty           reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)
    include         reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)
    const           reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)
    print           reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)
    echo            reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)
    while           reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)
    do              reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)
    if              reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)
    function        reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)
    ID              reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)
    return          reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)
    class           reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)
    new             reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)
    CLOSE_TAG       reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)
    for             reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)
    foreach         reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)
    switch          reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)
    exit            reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)
    VARIABLE        reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)
    array           reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)
    pow             reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)
    POW             reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)
    abs             reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)
    cos             reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)
    deg2rad         reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)
    rad2deg         reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)
    die             reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)
    exp             reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)
    floor           reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)
    isset           reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)
    list            reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)
    log             reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)
    log10           reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)
    max             reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)
    min             reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)
    rand            reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)
    round           reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)
    sin             reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)
    sqrt            reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)
    unset           reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)
    CADENA          reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)
    $end            reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)
    RBLOCK          reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)
    endwhile        reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)
    endfor          reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)
    endforeach      reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)
    endswitch       reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)
    break           reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)
    default         reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)
    case            reduce using rule 122 (for_loop -> for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON .)


state 391

    (128) foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .

    COMMENT         reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)
    COMMENT_HASHTAG reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)
    COMMENT_MULTI   reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)
    empty           reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)
    include         reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)
    const           reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)
    print           reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)
    echo            reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)
    while           reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)
    do              reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)
    if              reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)
    function        reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)
    ID              reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)
    return          reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)
    class           reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)
    new             reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)
    CLOSE_TAG       reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)
    for             reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)
    foreach         reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)
    switch          reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)
    exit            reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)
    VARIABLE        reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)
    array           reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)
    pow             reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)
    POW             reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)
    abs             reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)
    cos             reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)
    deg2rad         reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)
    rad2deg         reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)
    die             reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)
    exp             reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)
    floor           reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)
    isset           reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)
    list            reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)
    log             reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)
    log10           reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)
    max             reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)
    min             reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)
    rand            reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)
    round           reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)
    sin             reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)
    sqrt            reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)
    unset           reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)
    CADENA          reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)
    $end            reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)
    RBLOCK          reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)
    endwhile        reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)
    endfor          reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)
    endforeach      reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)
    endswitch       reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)
    break           reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)
    default         reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)
    case            reduce using rule 128 (foreach_loop -> foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON .)


state 392

    (139) statement_list -> statement_list declaration .

    COMMENT         reduce using rule 139 (statement_list -> statement_list declaration .)
    COMMENT_HASHTAG reduce using rule 139 (statement_list -> statement_list declaration .)
    COMMENT_MULTI   reduce using rule 139 (statement_list -> statement_list declaration .)
    empty           reduce using rule 139 (statement_list -> statement_list declaration .)
    include         reduce using rule 139 (statement_list -> statement_list declaration .)
    const           reduce using rule 139 (statement_list -> statement_list declaration .)
    print           reduce using rule 139 (statement_list -> statement_list declaration .)
    echo            reduce using rule 139 (statement_list -> statement_list declaration .)
    while           reduce using rule 139 (statement_list -> statement_list declaration .)
    do              reduce using rule 139 (statement_list -> statement_list declaration .)
    if              reduce using rule 139 (statement_list -> statement_list declaration .)
    function        reduce using rule 139 (statement_list -> statement_list declaration .)
    ID              reduce using rule 139 (statement_list -> statement_list declaration .)
    return          reduce using rule 139 (statement_list -> statement_list declaration .)
    class           reduce using rule 139 (statement_list -> statement_list declaration .)
    new             reduce using rule 139 (statement_list -> statement_list declaration .)
    CLOSE_TAG       reduce using rule 139 (statement_list -> statement_list declaration .)
    for             reduce using rule 139 (statement_list -> statement_list declaration .)
    foreach         reduce using rule 139 (statement_list -> statement_list declaration .)
    switch          reduce using rule 139 (statement_list -> statement_list declaration .)
    exit            reduce using rule 139 (statement_list -> statement_list declaration .)
    VARIABLE        reduce using rule 139 (statement_list -> statement_list declaration .)
    array           reduce using rule 139 (statement_list -> statement_list declaration .)
    pow             reduce using rule 139 (statement_list -> statement_list declaration .)
    POW             reduce using rule 139 (statement_list -> statement_list declaration .)
    abs             reduce using rule 139 (statement_list -> statement_list declaration .)
    cos             reduce using rule 139 (statement_list -> statement_list declaration .)
    deg2rad         reduce using rule 139 (statement_list -> statement_list declaration .)
    rad2deg         reduce using rule 139 (statement_list -> statement_list declaration .)
    die             reduce using rule 139 (statement_list -> statement_list declaration .)
    exp             reduce using rule 139 (statement_list -> statement_list declaration .)
    floor           reduce using rule 139 (statement_list -> statement_list declaration .)
    isset           reduce using rule 139 (statement_list -> statement_list declaration .)
    list            reduce using rule 139 (statement_list -> statement_list declaration .)
    log             reduce using rule 139 (statement_list -> statement_list declaration .)
    log10           reduce using rule 139 (statement_list -> statement_list declaration .)
    max             reduce using rule 139 (statement_list -> statement_list declaration .)
    min             reduce using rule 139 (statement_list -> statement_list declaration .)
    rand            reduce using rule 139 (statement_list -> statement_list declaration .)
    round           reduce using rule 139 (statement_list -> statement_list declaration .)
    sin             reduce using rule 139 (statement_list -> statement_list declaration .)
    sqrt            reduce using rule 139 (statement_list -> statement_list declaration .)
    unset           reduce using rule 139 (statement_list -> statement_list declaration .)
    CADENA          reduce using rule 139 (statement_list -> statement_list declaration .)
    RBLOCK          reduce using rule 139 (statement_list -> statement_list declaration .)
    endswitch       reduce using rule 139 (statement_list -> statement_list declaration .)
    break           reduce using rule 139 (statement_list -> statement_list declaration .)
    default         reduce using rule 139 (statement_list -> statement_list declaration .)
    case            reduce using rule 139 (statement_list -> statement_list declaration .)


state 393

    (135) case_block -> case expression COLON statement_list break . SEMICOLON

    SEMICOLON       shift and go to state 396


state 394

    (104) else_part -> elseif LPAREN expression RPAREN . LBLOCK declaration_list RBLOCK else_part

    LBLOCK          shift and go to state 397


state 395

    (105) else_part -> else LBLOCK declaration_list RBLOCK .

    COMMENT         reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)
    COMMENT_HASHTAG reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)
    COMMENT_MULTI   reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)
    empty           reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)
    include         reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)
    const           reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)
    print           reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)
    echo            reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)
    while           reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)
    do              reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)
    if              reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)
    function        reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)
    ID              reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)
    return          reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)
    class           reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)
    new             reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)
    CLOSE_TAG       reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)
    for             reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)
    foreach         reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)
    switch          reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)
    exit            reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)
    VARIABLE        reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)
    array           reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)
    pow             reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)
    POW             reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)
    abs             reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)
    cos             reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)
    deg2rad         reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)
    rad2deg         reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)
    die             reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)
    exp             reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)
    floor           reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)
    isset           reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)
    list            reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)
    log             reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)
    log10           reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)
    max             reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)
    min             reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)
    rand            reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)
    round           reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)
    sin             reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)
    sqrt            reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)
    unset           reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)
    CADENA          reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)
    $end            reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)
    RBLOCK          reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)
    endwhile        reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)
    endfor          reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)
    endforeach      reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)
    endswitch       reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)
    break           reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)
    default         reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)
    case            reduce using rule 105 (else_part -> else LBLOCK declaration_list RBLOCK .)


state 396

    (135) case_block -> case expression COLON statement_list break SEMICOLON .

    default         reduce using rule 135 (case_block -> case expression COLON statement_list break SEMICOLON .)
    case            reduce using rule 135 (case_block -> case expression COLON statement_list break SEMICOLON .)
    RBLOCK          reduce using rule 135 (case_block -> case expression COLON statement_list break SEMICOLON .)
    endswitch       reduce using rule 135 (case_block -> case expression COLON statement_list break SEMICOLON .)


state 397

    (104) else_part -> elseif LPAREN expression RPAREN LBLOCK . declaration_list RBLOCK else_part
    (4) declaration_list -> . declaration
    (5) declaration_list -> . declaration_list declaration
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . return_statement
    (19) declaration -> . obj_declaration
    (20) declaration -> . create_obj_declaration
    (21) declaration -> . footer_declaration
    (22) declaration -> . for_loop
    (23) declaration -> . foreach_loop
    (24) declaration -> . switch_statement
    (25) declaration -> . exit_statement
    (26) declaration -> . empty
    (29) header_declaration -> . include CADENA SEMICOLON
    (39) var_declaration -> . var_declaration2 SEMICOLON
    (30) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (31) print_declaration -> . print var_declaration2 SEMICOLON
    (32) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (33) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (34) print_declaration -> . print data_type SEMICOLON
    (35) echo_declaration -> . echo var_declaration2 SEMICOLON
    (36) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (37) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (38) echo_declaration -> . echo data_type SEMICOLON
    (59) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (60) iteration_stmt -> . while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON
    (61) iteration_stmt -> . do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON
    (62) iteration_stmt -> . do COLON declaration endwhile SEMICOLON
    (103) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (108) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK
    (109) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK
    (110) fun_call -> . ID LPAREN params RPAREN
    (111) return_statement -> . return expression SEMICOLON
    (112) return_statement -> . return params SEMICOLON
    (113) return_statement -> . return SEMICOLON
    (114) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (115) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (121) for_loop -> . for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK
    (122) for_loop -> . for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON
    (127) foreach_loop -> . foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK
    (128) foreach_loop -> . foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON
    (129) switch_statement -> . switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK
    (130) switch_statement -> . switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON
    (126) exit_statement -> . exit LPAREN expression RPAREN SEMICOLON
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 26
    include         shift and go to state 27
    const           shift and go to state 30
    print           shift and go to state 32
    echo            shift and go to state 33
    while           shift and go to state 34
    do              shift and go to state 35
    if              shift and go to state 36
    function        shift and go to state 37
    ID              shift and go to state 31
    return          shift and go to state 38
    class           shift and go to state 39
    new             shift and go to state 40
    CLOSE_TAG       shift and go to state 41
    for             shift and go to state 42
    foreach         shift and go to state 43
    switch          shift and go to state 44
    exit            shift and go to state 45
    VARIABLE        shift and go to state 46
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69
    CADENA          shift and go to state 28

    declaration_list               shift and go to state 398
    declaration                    shift and go to state 5
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    return_statement               shift and go to state 18
    obj_declaration                shift and go to state 19
    create_obj_declaration         shift and go to state 20
    footer_declaration             shift and go to state 21
    for_loop                       shift and go to state 22
    foreach_loop                   shift and go to state 23
    switch_statement               shift and go to state 24
    exit_statement                 shift and go to state 25
    var_declaration2               shift and go to state 29
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 398

    (104) else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list . RBLOCK else_part
    (5) declaration_list -> declaration_list . declaration
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . return_statement
    (19) declaration -> . obj_declaration
    (20) declaration -> . create_obj_declaration
    (21) declaration -> . footer_declaration
    (22) declaration -> . for_loop
    (23) declaration -> . foreach_loop
    (24) declaration -> . switch_statement
    (25) declaration -> . exit_statement
    (26) declaration -> . empty
    (29) header_declaration -> . include CADENA SEMICOLON
    (39) var_declaration -> . var_declaration2 SEMICOLON
    (30) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (31) print_declaration -> . print var_declaration2 SEMICOLON
    (32) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (33) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (34) print_declaration -> . print data_type SEMICOLON
    (35) echo_declaration -> . echo var_declaration2 SEMICOLON
    (36) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (37) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (38) echo_declaration -> . echo data_type SEMICOLON
    (59) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (60) iteration_stmt -> . while LPAREN expression RPAREN COLON declaration endwhile SEMICOLON
    (61) iteration_stmt -> . do LBLOCK declaration RBLOCK while LPAREN expression RPAREN SEMICOLON
    (62) iteration_stmt -> . do COLON declaration endwhile SEMICOLON
    (103) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (108) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list RBLOCK
    (109) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration_list return_statement RBLOCK
    (110) fun_call -> . ID LPAREN params RPAREN
    (111) return_statement -> . return expression SEMICOLON
    (112) return_statement -> . return params SEMICOLON
    (113) return_statement -> . return SEMICOLON
    (114) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (115) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (121) for_loop -> . for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK
    (122) for_loop -> . for LPAREN for_init for_expr for_update RPAREN COLON declaration_list endfor SEMICOLON
    (127) foreach_loop -> . foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK
    (128) foreach_loop -> . foreach LPAREN expression as expression RPAREN COLON declaration_list endforeach SEMICOLON
    (129) switch_statement -> . switch LPAREN expression RPAREN LBLOCK case_blocks default_block RBLOCK
    (130) switch_statement -> . switch LPAREN expression RPAREN COLON case_blocks default_block endswitch SEMICOLON
    (126) exit_statement -> . exit LPAREN expression RPAREN SEMICOLON
    (40) var_declaration2 -> . VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (42) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (43) var_declaration2 -> . VARIABLE EQUAL CADENA
    (44) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (45) var_declaration2 -> . VARIABLE EQUAL expression
    (46) var_declaration2 -> . VARIABLE assignation VARIABLE
    (47) var_declaration2 -> . VARIABLE assignation NUMBER
    (48) var_declaration2 -> . Built_In_Declaration
    (49) var_declaration2 -> . Concatenar_Cadenas_declaration
    (50) var_declaration2 -> . VARIABLE EQUAL ID LPAREN params RPAREN
    (51) var_declaration2 -> . VARIABLE assignment_tail
    (52) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (141) Built_In_Declaration -> . array LPAREN params RPAREN
    (142) Built_In_Declaration -> . pow LPAREN params RPAREN
    (143) Built_In_Declaration -> . POW LPAREN params RPAREN
    (144) Built_In_Declaration -> . abs LPAREN params RPAREN
    (145) Built_In_Declaration -> . cos LPAREN params RPAREN
    (146) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (147) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (148) Built_In_Declaration -> . die LPAREN params RPAREN
    (149) Built_In_Declaration -> . exp LPAREN params RPAREN
    (150) Built_In_Declaration -> . floor LPAREN params RPAREN
    (151) Built_In_Declaration -> . isset LPAREN params RPAREN
    (152) Built_In_Declaration -> . list LPAREN params RPAREN
    (153) Built_In_Declaration -> . log LPAREN params RPAREN
    (154) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (155) Built_In_Declaration -> . max LPAREN params RPAREN
    (156) Built_In_Declaration -> . min LPAREN params RPAREN
    (157) Built_In_Declaration -> . rand LPAREN params RPAREN
    (158) Built_In_Declaration -> . round LPAREN params RPAREN
    (159) Built_In_Declaration -> . sin LPAREN params RPAREN
    (160) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (161) Built_In_Declaration -> . unset LPAREN params RPAREN
    (162) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (163) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (164) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (165) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    RBLOCK          shift and go to state 399
    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 26
    include         shift and go to state 27
    const           shift and go to state 30
    print           shift and go to state 32
    echo            shift and go to state 33
    while           shift and go to state 34
    do              shift and go to state 35
    if              shift and go to state 36
    function        shift and go to state 37
    ID              shift and go to state 31
    return          shift and go to state 38
    class           shift and go to state 39
    new             shift and go to state 40
    CLOSE_TAG       shift and go to state 41
    for             shift and go to state 42
    foreach         shift and go to state 43
    switch          shift and go to state 44
    exit            shift and go to state 45
    VARIABLE        shift and go to state 46
    array           shift and go to state 49
    pow             shift and go to state 50
    POW             shift and go to state 51
    abs             shift and go to state 52
    cos             shift and go to state 53
    deg2rad         shift and go to state 54
    rad2deg         shift and go to state 55
    die             shift and go to state 56
    exp             shift and go to state 57
    floor           shift and go to state 58
    isset           shift and go to state 59
    list            shift and go to state 60
    log             shift and go to state 61
    log10           shift and go to state 62
    max             shift and go to state 63
    min             shift and go to state 64
    rand            shift and go to state 65
    round           shift and go to state 66
    sin             shift and go to state 67
    sqrt            shift and go to state 68
    unset           shift and go to state 69
    CADENA          shift and go to state 28

    declaration                    shift and go to state 70
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    return_statement               shift and go to state 18
    obj_declaration                shift and go to state 19
    create_obj_declaration         shift and go to state 20
    footer_declaration             shift and go to state 21
    for_loop                       shift and go to state 22
    foreach_loop                   shift and go to state 23
    switch_statement               shift and go to state 24
    exit_statement                 shift and go to state 25
    var_declaration2               shift and go to state 29
    Built_In_Declaration           shift and go to state 47
    Concatenar_Cadenas_declaration shift and go to state 48

state 399

    (104) else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK . else_part
    (104) else_part -> . elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (105) else_part -> . else LBLOCK declaration_list RBLOCK
    (106) else_part -> . endif
    (107) else_part -> . empty_function
    (174) empty_function -> .

    elseif          shift and go to state 360
    else            shift and go to state 361
    endif           shift and go to state 362
    COMMENT         reduce using rule 174 (empty_function -> .)
    COMMENT_HASHTAG reduce using rule 174 (empty_function -> .)
    COMMENT_MULTI   reduce using rule 174 (empty_function -> .)
    empty           reduce using rule 174 (empty_function -> .)
    include         reduce using rule 174 (empty_function -> .)
    const           reduce using rule 174 (empty_function -> .)
    print           reduce using rule 174 (empty_function -> .)
    echo            reduce using rule 174 (empty_function -> .)
    while           reduce using rule 174 (empty_function -> .)
    do              reduce using rule 174 (empty_function -> .)
    if              reduce using rule 174 (empty_function -> .)
    function        reduce using rule 174 (empty_function -> .)
    ID              reduce using rule 174 (empty_function -> .)
    return          reduce using rule 174 (empty_function -> .)
    class           reduce using rule 174 (empty_function -> .)
    new             reduce using rule 174 (empty_function -> .)
    CLOSE_TAG       reduce using rule 174 (empty_function -> .)
    for             reduce using rule 174 (empty_function -> .)
    foreach         reduce using rule 174 (empty_function -> .)
    switch          reduce using rule 174 (empty_function -> .)
    exit            reduce using rule 174 (empty_function -> .)
    VARIABLE        reduce using rule 174 (empty_function -> .)
    array           reduce using rule 174 (empty_function -> .)
    pow             reduce using rule 174 (empty_function -> .)
    POW             reduce using rule 174 (empty_function -> .)
    abs             reduce using rule 174 (empty_function -> .)
    cos             reduce using rule 174 (empty_function -> .)
    deg2rad         reduce using rule 174 (empty_function -> .)
    rad2deg         reduce using rule 174 (empty_function -> .)
    die             reduce using rule 174 (empty_function -> .)
    exp             reduce using rule 174 (empty_function -> .)
    floor           reduce using rule 174 (empty_function -> .)
    isset           reduce using rule 174 (empty_function -> .)
    list            reduce using rule 174 (empty_function -> .)
    log             reduce using rule 174 (empty_function -> .)
    log10           reduce using rule 174 (empty_function -> .)
    max             reduce using rule 174 (empty_function -> .)
    min             reduce using rule 174 (empty_function -> .)
    rand            reduce using rule 174 (empty_function -> .)
    round           reduce using rule 174 (empty_function -> .)
    sin             reduce using rule 174 (empty_function -> .)
    sqrt            reduce using rule 174 (empty_function -> .)
    unset           reduce using rule 174 (empty_function -> .)
    CADENA          reduce using rule 174 (empty_function -> .)
    $end            reduce using rule 174 (empty_function -> .)
    RBLOCK          reduce using rule 174 (empty_function -> .)
    endwhile        reduce using rule 174 (empty_function -> .)
    endfor          reduce using rule 174 (empty_function -> .)
    endforeach      reduce using rule 174 (empty_function -> .)
    endswitch       reduce using rule 174 (empty_function -> .)
    break           reduce using rule 174 (empty_function -> .)
    default         reduce using rule 174 (empty_function -> .)
    case            reduce using rule 174 (empty_function -> .)

    else_part                      shift and go to state 400
    empty_function                 shift and go to state 363

state 400

    (104) else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .

    COMMENT         reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    COMMENT_HASHTAG reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    COMMENT_MULTI   reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    empty           reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    include         reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    const           reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    print           reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    echo            reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    while           reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    do              reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    if              reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    function        reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    ID              reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    return          reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    class           reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    new             reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    CLOSE_TAG       reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    for             reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    foreach         reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    switch          reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    exit            reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    VARIABLE        reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    array           reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    pow             reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    POW             reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    abs             reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    cos             reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    deg2rad         reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    rad2deg         reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    die             reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    exp             reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    floor           reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    isset           reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    list            reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    log             reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    log10           reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    max             reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    min             reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    rand            reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    round           reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    sin             reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    sqrt            reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    unset           reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    CADENA          reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    $end            reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    RBLOCK          reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    endwhile        reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    endfor          reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    endforeach      reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    endswitch       reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    break           reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    default         reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    case            reduce using rule 104 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SEMICOLON in state 38 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 46 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 101 resolved as shift
WARNING: shift/reduce conflict for case in state 319 resolved as shift
WARNING: shift/reduce conflict for case in state 320 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 339 resolved as shift
WARNING: shift/reduce conflict for RBLOCK in state 365 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 372 resolved as shift
WARNING: shift/reduce conflict for COMMENT_HASHTAG in state 372 resolved as shift
WARNING: shift/reduce conflict for COMMENT_MULTI in state 372 resolved as shift
WARNING: shift/reduce conflict for empty in state 372 resolved as shift
WARNING: shift/reduce conflict for include in state 372 resolved as shift
WARNING: shift/reduce conflict for const in state 372 resolved as shift
WARNING: shift/reduce conflict for print in state 372 resolved as shift
WARNING: shift/reduce conflict for echo in state 372 resolved as shift
WARNING: shift/reduce conflict for while in state 372 resolved as shift
WARNING: shift/reduce conflict for do in state 372 resolved as shift
WARNING: shift/reduce conflict for if in state 372 resolved as shift
WARNING: shift/reduce conflict for function in state 372 resolved as shift
WARNING: shift/reduce conflict for ID in state 372 resolved as shift
WARNING: shift/reduce conflict for return in state 372 resolved as shift
WARNING: shift/reduce conflict for class in state 372 resolved as shift
WARNING: shift/reduce conflict for new in state 372 resolved as shift
WARNING: shift/reduce conflict for CLOSE_TAG in state 372 resolved as shift
WARNING: shift/reduce conflict for for in state 372 resolved as shift
WARNING: shift/reduce conflict for foreach in state 372 resolved as shift
WARNING: shift/reduce conflict for switch in state 372 resolved as shift
WARNING: shift/reduce conflict for exit in state 372 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 372 resolved as shift
WARNING: shift/reduce conflict for array in state 372 resolved as shift
WARNING: shift/reduce conflict for pow in state 372 resolved as shift
WARNING: shift/reduce conflict for POW in state 372 resolved as shift
WARNING: shift/reduce conflict for abs in state 372 resolved as shift
WARNING: shift/reduce conflict for cos in state 372 resolved as shift
WARNING: shift/reduce conflict for deg2rad in state 372 resolved as shift
WARNING: shift/reduce conflict for rad2deg in state 372 resolved as shift
WARNING: shift/reduce conflict for die in state 372 resolved as shift
WARNING: shift/reduce conflict for exp in state 372 resolved as shift
WARNING: shift/reduce conflict for floor in state 372 resolved as shift
WARNING: shift/reduce conflict for isset in state 372 resolved as shift
WARNING: shift/reduce conflict for list in state 372 resolved as shift
WARNING: shift/reduce conflict for log in state 372 resolved as shift
WARNING: shift/reduce conflict for log10 in state 372 resolved as shift
WARNING: shift/reduce conflict for max in state 372 resolved as shift
WARNING: shift/reduce conflict for min in state 372 resolved as shift
WARNING: shift/reduce conflict for rand in state 372 resolved as shift
WARNING: shift/reduce conflict for round in state 372 resolved as shift
WARNING: shift/reduce conflict for sin in state 372 resolved as shift
WARNING: shift/reduce conflict for sqrt in state 372 resolved as shift
WARNING: shift/reduce conflict for unset in state 372 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 372 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 373 resolved as shift
WARNING: shift/reduce conflict for COMMENT_HASHTAG in state 373 resolved as shift
WARNING: shift/reduce conflict for COMMENT_MULTI in state 373 resolved as shift
WARNING: shift/reduce conflict for empty in state 373 resolved as shift
WARNING: shift/reduce conflict for include in state 373 resolved as shift
WARNING: shift/reduce conflict for const in state 373 resolved as shift
WARNING: shift/reduce conflict for print in state 373 resolved as shift
WARNING: shift/reduce conflict for echo in state 373 resolved as shift
WARNING: shift/reduce conflict for while in state 373 resolved as shift
WARNING: shift/reduce conflict for do in state 373 resolved as shift
WARNING: shift/reduce conflict for if in state 373 resolved as shift
WARNING: shift/reduce conflict for function in state 373 resolved as shift
WARNING: shift/reduce conflict for ID in state 373 resolved as shift
WARNING: shift/reduce conflict for return in state 373 resolved as shift
WARNING: shift/reduce conflict for class in state 373 resolved as shift
WARNING: shift/reduce conflict for new in state 373 resolved as shift
WARNING: shift/reduce conflict for CLOSE_TAG in state 373 resolved as shift
WARNING: shift/reduce conflict for for in state 373 resolved as shift
WARNING: shift/reduce conflict for foreach in state 373 resolved as shift
WARNING: shift/reduce conflict for switch in state 373 resolved as shift
WARNING: shift/reduce conflict for exit in state 373 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 373 resolved as shift
WARNING: shift/reduce conflict for array in state 373 resolved as shift
WARNING: shift/reduce conflict for pow in state 373 resolved as shift
WARNING: shift/reduce conflict for POW in state 373 resolved as shift
WARNING: shift/reduce conflict for abs in state 373 resolved as shift
WARNING: shift/reduce conflict for cos in state 373 resolved as shift
WARNING: shift/reduce conflict for deg2rad in state 373 resolved as shift
WARNING: shift/reduce conflict for rad2deg in state 373 resolved as shift
WARNING: shift/reduce conflict for die in state 373 resolved as shift
WARNING: shift/reduce conflict for exp in state 373 resolved as shift
WARNING: shift/reduce conflict for floor in state 373 resolved as shift
WARNING: shift/reduce conflict for isset in state 373 resolved as shift
WARNING: shift/reduce conflict for list in state 373 resolved as shift
WARNING: shift/reduce conflict for log in state 373 resolved as shift
WARNING: shift/reduce conflict for log10 in state 373 resolved as shift
WARNING: shift/reduce conflict for max in state 373 resolved as shift
WARNING: shift/reduce conflict for min in state 373 resolved as shift
WARNING: shift/reduce conflict for rand in state 373 resolved as shift
WARNING: shift/reduce conflict for round in state 373 resolved as shift
WARNING: shift/reduce conflict for sin in state 373 resolved as shift
WARNING: shift/reduce conflict for sqrt in state 373 resolved as shift
WARNING: shift/reduce conflict for unset in state 373 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 373 resolved as shift
WARNING: reduce/reduce conflict in state 101 resolved using rule (var_declaration2 -> VARIABLE)
WARNING: rejected rule (factor -> VARIABLE) in state 101
WARNING: reduce/reduce conflict in state 102 resolved using rule (data_type -> NUMBER)
WARNING: rejected rule (factor -> NUMBER) in state 102
WARNING: reduce/reduce conflict in state 213 resolved using rule (var_declaration2 -> VARIABLE EQUAL VARIABLE)
WARNING: rejected rule (factor -> VARIABLE) in state 213
WARNING: reduce/reduce conflict in state 214 resolved using rule (var_declaration2 -> VARIABLE EQUAL NUMBER)
WARNING: rejected rule (factor -> NUMBER) in state 214
