Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AMPERSANT
    ANDEQUAL
    ASSIGN
    BACKSLASH
    COLON
    COMILLASDOBLES
    COMILLASIMPLE
    HASHTAG
    INVALID_NUMBER_SEQUENCE
    INVALID_VARIABLE
    QUESTIONMARK
    SL
    SLEQUAL
    SR
    SREQUAL
    XOREQUAL
    abstract
    break
    callable
    case
    catch
    ceil
    clone
    continue
    declare
    default
    do
    endclare
    endfor
    endforeach
    endswitch
    endwhile
    eval
    extends
    final
    finally
    global
    goto
    implements
    include_once
    instanceof
    insteadof
    interface
    match
    namespace
    objectoperator
    php
    private
    protected
    public
    readonly
    require
    require_once
    return
    static
    switch
    throw
    trait
    try
    use
    var
    xor

Grammar

Rule 0     S' -> program
Rule 1     program -> header declaration_list
Rule 2     header -> OPEN_TAG
Rule 3     footer_declaration -> CLOSE_TAG
Rule 4     declaration_list -> declaration
Rule 5     declaration_list -> declaration_list declaration
Rule 6     declaration -> COMMENT
Rule 7     declaration -> COMMENT_HASHTAG
Rule 8     declaration -> COMMENT_MULTI
Rule 9     declaration -> header_declaration
Rule 10    declaration -> var_declaration
Rule 11    declaration -> constant_declaration
Rule 12    declaration -> print_declaration
Rule 13    declaration -> echo_declaration
Rule 14    declaration -> iteration_stmt
Rule 15    declaration -> if_statement
Rule 16    declaration -> fun_declaration
Rule 17    declaration -> fun_call
Rule 18    declaration -> obj_declaration
Rule 19    declaration -> create_obj_declaration
Rule 20    declaration -> footer_declaration
Rule 21    declaration -> for_loop
Rule 22    declaration -> foreach_loop
Rule 23    declaration -> exit_statement
Rule 24    declaration -> empty
Rule 25    data_type -> NUMBER
Rule 26    data_type -> CADENA
Rule 27    header_declaration -> include CADENA SEMICOLON
Rule 28    constant_declaration -> const ID EQUAL data_type SEMICOLON
Rule 29    print_declaration -> print var_declaration2 SEMICOLON
Rule 30    print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON
Rule 31    print_declaration -> print LPAREN data_type RPAREN SEMICOLON
Rule 32    print_declaration -> print data_type SEMICOLON
Rule 33    echo_declaration -> echo var_declaration2 SEMICOLON
Rule 34    echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON
Rule 35    echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON
Rule 36    echo_declaration -> echo data_type SEMICOLON
Rule 37    var_declaration -> var_declaration2 SEMICOLON
Rule 38    var_declaration2 -> VARIABLE
Rule 39    var_declaration2 -> VARIABLE EQUAL NUMBER
Rule 40    var_declaration2 -> VARIABLE EQUAL VARIABLE
Rule 41    var_declaration2 -> VARIABLE EQUAL CADENA
Rule 42    var_declaration2 -> VARIABLE EQUAL Built_In_Declaration
Rule 43    var_declaration2 -> VARIABLE EQUAL expression
Rule 44    var_declaration2 -> Built_In_Declaration
Rule 45    var_declaration2 -> Concatenar_Cadenas_declaration
Rule 46    var_declaration2 -> VARIABLE assignment_tail
Rule 47    var_declaration2 -> VARIABLE EQUAL assignment_tail
Rule 48    assignment_tail -> COMMA var_declaration2
Rule 49    assignment_tail -> LBRACKET params RBRACKET
Rule 50    assignment_tail -> LBLOCK params RBLOCK
Rule 51    assignment_tail -> VARIABLE LBRACKET expression COMMA params
Rule 52    assignment_tail -> VARIABLE LBRACKET params RBRACKET
Rule 53    assignment_tail -> VARIABLE LBLOCK params RBLOCK
Rule 54    iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK
Rule 55    expression -> additive_expression
Rule 56    expression -> additive_expression logical_op additive_expression
Rule 57    expression -> additive_expression comp_op additive_expression
Rule 58    expression -> additive_expression comp_op additive_expression logical_op additive_expression comp_op additive_expression
Rule 59    additive_expression -> term
Rule 60    additive_expression -> term math_op term
Rule 61    term -> factor
Rule 62    term -> factor increment_decrement_op
Rule 63    term -> increment_decrement_op factor
Rule 64    factor -> NUMBER
Rule 65    factor -> VARIABLE
Rule 66    factor -> LPAREN expression RPAREN
Rule 67    increment_decrement_op -> PLUSPLUS
Rule 68    increment_decrement_op -> MINUSMINUS
Rule 69    math_op -> PLUS
Rule 70    math_op -> MINUS
Rule 71    math_op -> TIMES
Rule 72    math_op -> DIVIDE
Rule 73    math_op -> MULEQUAL
Rule 74    math_op -> PLUSEQUAL
Rule 75    math_op -> MINUSEQUAL
Rule 76    math_op -> MOD
Rule 77    comp_op -> LESS
Rule 78    comp_op -> LESSEQUAL
Rule 79    comp_op -> GREATER
Rule 80    comp_op -> GREATEREQUAL
Rule 81    comp_op -> DEQUAL
Rule 82    comp_op -> DISTINT
Rule 83    comp_op -> DIVEQUAL
Rule 84    comp_op -> ISEQUAL
Rule 85    comp_op -> ISIDENTICAL
Rule 86    comp_op -> ISNOTIDENTICAL
Rule 87    logical_op -> BOOL_OR
Rule 88    logical_op -> BOOL_AND
Rule 89    logical_op -> NOT
Rule 90    logical_op -> or
Rule 91    logical_op -> and
Rule 92    if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
Rule 93    else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
Rule 94    else_part -> else LBLOCK declaration_list RBLOCK
Rule 95    else_part -> endif
Rule 96    else_part -> empty
Rule 97    fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK
Rule 98    fun_call -> ID LPAREN params RPAREN
Rule 99    obj_declaration -> class ID LBLOCK declaration RBLOCK
Rule 100   create_obj_declaration -> new ID LPAREN params RPAREN
Rule 101   params -> single_param
Rule 102   params -> params COMMA single_param
Rule 103   single_param -> var_declaration2
Rule 104   single_param -> data_type
Rule 105   single_param -> empty_function
Rule 106   for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK
Rule 107   for_init -> var_declaration2 SEMICOLON
Rule 108   for_expr -> expression SEMICOLON
Rule 109   for_update -> expression
Rule 110   exit_statement -> exit LPAREN expression RPAREN SEMICOLON
Rule 111   foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK
Rule 112   Built_In_Declaration -> array LPAREN params RPAREN
Rule 113   Built_In_Declaration -> pow LPAREN params RPAREN
Rule 114   Built_In_Declaration -> POW LPAREN params RPAREN
Rule 115   Built_In_Declaration -> abs LPAREN params RPAREN
Rule 116   Built_In_Declaration -> cos LPAREN params RPAREN
Rule 117   Built_In_Declaration -> deg2rad LPAREN params RPAREN
Rule 118   Built_In_Declaration -> rad2deg LPAREN params RPAREN
Rule 119   Built_In_Declaration -> die LPAREN params RPAREN
Rule 120   Built_In_Declaration -> exp LPAREN params RPAREN
Rule 121   Built_In_Declaration -> floor LPAREN params RPAREN
Rule 122   Built_In_Declaration -> isset LPAREN params RPAREN
Rule 123   Built_In_Declaration -> list LPAREN params RPAREN
Rule 124   Built_In_Declaration -> log LPAREN params RPAREN
Rule 125   Built_In_Declaration -> log10 LPAREN params RPAREN
Rule 126   Built_In_Declaration -> max LPAREN params RPAREN
Rule 127   Built_In_Declaration -> min LPAREN params RPAREN
Rule 128   Built_In_Declaration -> rand LPAREN params RPAREN
Rule 129   Built_In_Declaration -> round LPAREN params RPAREN
Rule 130   Built_In_Declaration -> sin LPAREN params RPAREN
Rule 131   Built_In_Declaration -> sqrt LPAREN params RPAREN
Rule 132   Built_In_Declaration -> unset LPAREN params RPAREN
Rule 133   Concatenar_Cadenas_declaration -> VARIABLE DOT VARIABLE
Rule 134   Concatenar_Cadenas_declaration -> CADENA DOT CADENA
Rule 135   Concatenar_Cadenas_declaration -> CADENA DOT VARIABLE
Rule 136   Concatenar_Cadenas_declaration -> VARIABLE DOT CADENA
Rule 137   empty_function -> <empty>

Terminals, with rules where they appear

AMPERSANT            : 
ANDEQUAL             : 
ASSIGN               : 
BACKSLASH            : 
BOOL_AND             : 88
BOOL_OR              : 87
CADENA               : 26 27 41 134 134 135 136
CLOSE_TAG            : 3
COLON                : 
COMILLASDOBLES       : 
COMILLASIMPLE        : 
COMMA                : 48 51 102
COMMENT              : 6
COMMENT_HASHTAG      : 7
COMMENT_MULTI        : 8
DEQUAL               : 81
DISTINT              : 82
DIVEQUAL             : 83
DIVIDE               : 72
DOT                  : 133 134 135 136
EQUAL                : 28 39 40 41 42 43 47
GREATER              : 79
GREATEREQUAL         : 80
HASHTAG              : 
ID                   : 28 97 98 99 100
INVALID_NUMBER_SEQUENCE : 
INVALID_VARIABLE     : 
ISEQUAL              : 84
ISIDENTICAL          : 85
ISNOTIDENTICAL       : 86
LBLOCK               : 50 53 54 92 93 94 97 99 106 111
LBRACKET             : 49 51 52
LESS                 : 77
LESSEQUAL            : 78
LPAREN               : 30 31 34 35 54 66 92 93 97 98 100 106 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132
MINUS                : 70
MINUSEQUAL           : 75
MINUSMINUS           : 68
MOD                  : 76
MULEQUAL             : 73
NOT                  : 89
NUMBER               : 25 39 64
OPEN_TAG             : 2
PLUS                 : 69
PLUSEQUAL            : 74
PLUSPLUS             : 67
POW                  : 114
QUESTIONMARK         : 
RBLOCK               : 50 53 54 92 93 94 97 99 106 111
RBRACKET             : 49 52
RPAREN               : 30 31 34 35 54 66 92 93 97 98 100 106 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132
SEMICOLON            : 27 28 29 30 31 32 33 34 35 36 37 107 108 110
SL                   : 
SLEQUAL              : 
SR                   : 
SREQUAL              : 
TIMES                : 71
VARIABLE             : 38 39 40 40 41 42 43 46 47 51 52 53 65 133 133 135 136
XOREQUAL             : 
abs                  : 115
abstract             : 
and                  : 91
array                : 112
as                   : 111
break                : 
callable             : 
case                 : 
catch                : 
ceil                 : 
class                : 99
clone                : 
const                : 28
continue             : 
cos                  : 116
declare              : 
default              : 
deg2rad              : 117
die                  : 119
do                   : 
echo                 : 33 34 35 36
else                 : 94
elseif               : 93
empty                : 24 96
endclare             : 
endfor               : 
endforeach           : 
endif                : 95
endswitch            : 
endwhile             : 
error                : 
eval                 : 
exit                 : 110
exp                  : 120
extends              : 
final                : 
finally              : 
floor                : 121
for                  : 106
foreach              : 111
function             : 97
global               : 
goto                 : 
if                   : 92
implements           : 
include              : 27
include_once         : 
instanceof           : 
insteadof            : 
interface            : 
isset                : 122
list                 : 123
log                  : 124
log10                : 125
match                : 
max                  : 126
min                  : 127
namespace            : 
new                  : 100
objectoperator       : 
or                   : 90
php                  : 
pow                  : 113
print                : 29 30 31 32
private              : 
protected            : 
public               : 
rad2deg              : 118
rand                 : 128
readonly             : 
require              : 
require_once         : 
return               : 
round                : 129
sin                  : 130
sqrt                 : 131
static               : 
switch               : 
throw                : 
trait                : 
try                  : 
unset                : 132
use                  : 
var                  : 
while                : 54
xor                  : 

Nonterminals, with rules where they appear

Built_In_Declaration : 42 44
Concatenar_Cadenas_declaration : 45
additive_expression  : 55 56 56 57 57 58 58 58 58
assignment_tail      : 46 47
comp_op              : 57 58 58
constant_declaration : 11
create_obj_declaration : 19
data_type            : 28 31 32 35 36 104
declaration          : 4 5 54 97 99
declaration_list     : 1 5 92 93 94 106 111
echo_declaration     : 13
else_part            : 92 93
empty_function       : 105
exit_statement       : 23
expression           : 43 51 54 66 92 93 108 109 110 111 111
factor               : 61 62 63
footer_declaration   : 20
for_expr             : 106
for_init             : 106
for_loop             : 21
for_update           : 106
foreach_loop         : 22
fun_call             : 17
fun_declaration      : 16
header               : 1
header_declaration   : 9
if_statement         : 15
increment_decrement_op : 62 63
iteration_stmt       : 14
logical_op           : 56 58
math_op              : 60
obj_declaration      : 18
params               : 49 50 51 52 53 97 98 100 102 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132
print_declaration    : 12
program              : 0
single_param         : 101 102
term                 : 59 60 60
var_declaration      : 10
var_declaration2     : 29 30 33 34 37 48 103 107

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . header declaration_list
    (2) header -> . OPEN_TAG

    OPEN_TAG        shift and go to state 3

    program                        shift and go to state 1
    header                         shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> header . declaration_list
    (4) declaration_list -> . declaration
    (5) declaration_list -> . declaration_list declaration
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . obj_declaration
    (19) declaration -> . create_obj_declaration
    (20) declaration -> . footer_declaration
    (21) declaration -> . for_loop
    (22) declaration -> . foreach_loop
    (23) declaration -> . exit_statement
    (24) declaration -> . empty
    (27) header_declaration -> . include CADENA SEMICOLON
    (37) var_declaration -> . var_declaration2 SEMICOLON
    (28) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (29) print_declaration -> . print var_declaration2 SEMICOLON
    (30) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (31) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (32) print_declaration -> . print data_type SEMICOLON
    (33) echo_declaration -> . echo var_declaration2 SEMICOLON
    (34) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (35) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (36) echo_declaration -> . echo data_type SEMICOLON
    (54) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (92) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (97) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration RBLOCK
    (98) fun_call -> . ID LPAREN params RPAREN
    (99) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (100) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (106) for_loop -> . for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK
    (111) foreach_loop -> . foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK
    (110) exit_statement -> . exit LPAREN expression RPAREN SEMICOLON
    (38) var_declaration2 -> . VARIABLE
    (39) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (40) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL CADENA
    (42) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (43) var_declaration2 -> . VARIABLE EQUAL expression
    (44) var_declaration2 -> . Built_In_Declaration
    (45) var_declaration2 -> . Concatenar_Cadenas_declaration
    (46) var_declaration2 -> . VARIABLE assignment_tail
    (47) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (112) Built_In_Declaration -> . array LPAREN params RPAREN
    (113) Built_In_Declaration -> . pow LPAREN params RPAREN
    (114) Built_In_Declaration -> . POW LPAREN params RPAREN
    (115) Built_In_Declaration -> . abs LPAREN params RPAREN
    (116) Built_In_Declaration -> . cos LPAREN params RPAREN
    (117) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (118) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (119) Built_In_Declaration -> . die LPAREN params RPAREN
    (120) Built_In_Declaration -> . exp LPAREN params RPAREN
    (121) Built_In_Declaration -> . floor LPAREN params RPAREN
    (122) Built_In_Declaration -> . isset LPAREN params RPAREN
    (123) Built_In_Declaration -> . list LPAREN params RPAREN
    (124) Built_In_Declaration -> . log LPAREN params RPAREN
    (125) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (126) Built_In_Declaration -> . max LPAREN params RPAREN
    (127) Built_In_Declaration -> . min LPAREN params RPAREN
    (128) Built_In_Declaration -> . rand LPAREN params RPAREN
    (129) Built_In_Declaration -> . round LPAREN params RPAREN
    (130) Built_In_Declaration -> . sin LPAREN params RPAREN
    (131) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (132) Built_In_Declaration -> . unset LPAREN params RPAREN
    (133) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (134) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (135) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 24
    include         shift and go to state 25
    const           shift and go to state 28
    print           shift and go to state 30
    echo            shift and go to state 31
    while           shift and go to state 32
    if              shift and go to state 33
    function        shift and go to state 34
    ID              shift and go to state 29
    class           shift and go to state 35
    new             shift and go to state 36
    CLOSE_TAG       shift and go to state 37
    for             shift and go to state 38
    foreach         shift and go to state 39
    exit            shift and go to state 40
    VARIABLE        shift and go to state 41
    array           shift and go to state 44
    pow             shift and go to state 45
    POW             shift and go to state 46
    abs             shift and go to state 47
    cos             shift and go to state 48
    deg2rad         shift and go to state 49
    rad2deg         shift and go to state 50
    die             shift and go to state 51
    exp             shift and go to state 52
    floor           shift and go to state 53
    isset           shift and go to state 54
    list            shift and go to state 55
    log             shift and go to state 56
    log10           shift and go to state 57
    max             shift and go to state 58
    min             shift and go to state 59
    rand            shift and go to state 60
    round           shift and go to state 61
    sin             shift and go to state 62
    sqrt            shift and go to state 63
    unset           shift and go to state 64
    CADENA          shift and go to state 26

    declaration_list               shift and go to state 4
    declaration                    shift and go to state 5
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    obj_declaration                shift and go to state 18
    create_obj_declaration         shift and go to state 19
    footer_declaration             shift and go to state 20
    for_loop                       shift and go to state 21
    foreach_loop                   shift and go to state 22
    exit_statement                 shift and go to state 23
    var_declaration2               shift and go to state 27
    Built_In_Declaration           shift and go to state 42
    Concatenar_Cadenas_declaration shift and go to state 43

state 3

    (2) header -> OPEN_TAG .

    COMMENT         reduce using rule 2 (header -> OPEN_TAG .)
    COMMENT_HASHTAG reduce using rule 2 (header -> OPEN_TAG .)
    COMMENT_MULTI   reduce using rule 2 (header -> OPEN_TAG .)
    empty           reduce using rule 2 (header -> OPEN_TAG .)
    include         reduce using rule 2 (header -> OPEN_TAG .)
    const           reduce using rule 2 (header -> OPEN_TAG .)
    print           reduce using rule 2 (header -> OPEN_TAG .)
    echo            reduce using rule 2 (header -> OPEN_TAG .)
    while           reduce using rule 2 (header -> OPEN_TAG .)
    if              reduce using rule 2 (header -> OPEN_TAG .)
    function        reduce using rule 2 (header -> OPEN_TAG .)
    ID              reduce using rule 2 (header -> OPEN_TAG .)
    class           reduce using rule 2 (header -> OPEN_TAG .)
    new             reduce using rule 2 (header -> OPEN_TAG .)
    CLOSE_TAG       reduce using rule 2 (header -> OPEN_TAG .)
    for             reduce using rule 2 (header -> OPEN_TAG .)
    foreach         reduce using rule 2 (header -> OPEN_TAG .)
    exit            reduce using rule 2 (header -> OPEN_TAG .)
    VARIABLE        reduce using rule 2 (header -> OPEN_TAG .)
    array           reduce using rule 2 (header -> OPEN_TAG .)
    pow             reduce using rule 2 (header -> OPEN_TAG .)
    POW             reduce using rule 2 (header -> OPEN_TAG .)
    abs             reduce using rule 2 (header -> OPEN_TAG .)
    cos             reduce using rule 2 (header -> OPEN_TAG .)
    deg2rad         reduce using rule 2 (header -> OPEN_TAG .)
    rad2deg         reduce using rule 2 (header -> OPEN_TAG .)
    die             reduce using rule 2 (header -> OPEN_TAG .)
    exp             reduce using rule 2 (header -> OPEN_TAG .)
    floor           reduce using rule 2 (header -> OPEN_TAG .)
    isset           reduce using rule 2 (header -> OPEN_TAG .)
    list            reduce using rule 2 (header -> OPEN_TAG .)
    log             reduce using rule 2 (header -> OPEN_TAG .)
    log10           reduce using rule 2 (header -> OPEN_TAG .)
    max             reduce using rule 2 (header -> OPEN_TAG .)
    min             reduce using rule 2 (header -> OPEN_TAG .)
    rand            reduce using rule 2 (header -> OPEN_TAG .)
    round           reduce using rule 2 (header -> OPEN_TAG .)
    sin             reduce using rule 2 (header -> OPEN_TAG .)
    sqrt            reduce using rule 2 (header -> OPEN_TAG .)
    unset           reduce using rule 2 (header -> OPEN_TAG .)
    CADENA          reduce using rule 2 (header -> OPEN_TAG .)


state 4

    (1) program -> header declaration_list .
    (5) declaration_list -> declaration_list . declaration
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . obj_declaration
    (19) declaration -> . create_obj_declaration
    (20) declaration -> . footer_declaration
    (21) declaration -> . for_loop
    (22) declaration -> . foreach_loop
    (23) declaration -> . exit_statement
    (24) declaration -> . empty
    (27) header_declaration -> . include CADENA SEMICOLON
    (37) var_declaration -> . var_declaration2 SEMICOLON
    (28) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (29) print_declaration -> . print var_declaration2 SEMICOLON
    (30) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (31) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (32) print_declaration -> . print data_type SEMICOLON
    (33) echo_declaration -> . echo var_declaration2 SEMICOLON
    (34) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (35) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (36) echo_declaration -> . echo data_type SEMICOLON
    (54) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (92) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (97) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration RBLOCK
    (98) fun_call -> . ID LPAREN params RPAREN
    (99) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (100) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (106) for_loop -> . for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK
    (111) foreach_loop -> . foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK
    (110) exit_statement -> . exit LPAREN expression RPAREN SEMICOLON
    (38) var_declaration2 -> . VARIABLE
    (39) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (40) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL CADENA
    (42) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (43) var_declaration2 -> . VARIABLE EQUAL expression
    (44) var_declaration2 -> . Built_In_Declaration
    (45) var_declaration2 -> . Concatenar_Cadenas_declaration
    (46) var_declaration2 -> . VARIABLE assignment_tail
    (47) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (112) Built_In_Declaration -> . array LPAREN params RPAREN
    (113) Built_In_Declaration -> . pow LPAREN params RPAREN
    (114) Built_In_Declaration -> . POW LPAREN params RPAREN
    (115) Built_In_Declaration -> . abs LPAREN params RPAREN
    (116) Built_In_Declaration -> . cos LPAREN params RPAREN
    (117) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (118) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (119) Built_In_Declaration -> . die LPAREN params RPAREN
    (120) Built_In_Declaration -> . exp LPAREN params RPAREN
    (121) Built_In_Declaration -> . floor LPAREN params RPAREN
    (122) Built_In_Declaration -> . isset LPAREN params RPAREN
    (123) Built_In_Declaration -> . list LPAREN params RPAREN
    (124) Built_In_Declaration -> . log LPAREN params RPAREN
    (125) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (126) Built_In_Declaration -> . max LPAREN params RPAREN
    (127) Built_In_Declaration -> . min LPAREN params RPAREN
    (128) Built_In_Declaration -> . rand LPAREN params RPAREN
    (129) Built_In_Declaration -> . round LPAREN params RPAREN
    (130) Built_In_Declaration -> . sin LPAREN params RPAREN
    (131) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (132) Built_In_Declaration -> . unset LPAREN params RPAREN
    (133) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (134) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (135) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    $end            reduce using rule 1 (program -> header declaration_list .)
    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 24
    include         shift and go to state 25
    const           shift and go to state 28
    print           shift and go to state 30
    echo            shift and go to state 31
    while           shift and go to state 32
    if              shift and go to state 33
    function        shift and go to state 34
    ID              shift and go to state 29
    class           shift and go to state 35
    new             shift and go to state 36
    CLOSE_TAG       shift and go to state 37
    for             shift and go to state 38
    foreach         shift and go to state 39
    exit            shift and go to state 40
    VARIABLE        shift and go to state 41
    array           shift and go to state 44
    pow             shift and go to state 45
    POW             shift and go to state 46
    abs             shift and go to state 47
    cos             shift and go to state 48
    deg2rad         shift and go to state 49
    rad2deg         shift and go to state 50
    die             shift and go to state 51
    exp             shift and go to state 52
    floor           shift and go to state 53
    isset           shift and go to state 54
    list            shift and go to state 55
    log             shift and go to state 56
    log10           shift and go to state 57
    max             shift and go to state 58
    min             shift and go to state 59
    rand            shift and go to state 60
    round           shift and go to state 61
    sin             shift and go to state 62
    sqrt            shift and go to state 63
    unset           shift and go to state 64
    CADENA          shift and go to state 26

    declaration                    shift and go to state 65
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    obj_declaration                shift and go to state 18
    create_obj_declaration         shift and go to state 19
    footer_declaration             shift and go to state 20
    for_loop                       shift and go to state 21
    foreach_loop                   shift and go to state 22
    exit_statement                 shift and go to state 23
    var_declaration2               shift and go to state 27
    Built_In_Declaration           shift and go to state 42
    Concatenar_Cadenas_declaration shift and go to state 43

state 5

    (4) declaration_list -> declaration .

    COMMENT         reduce using rule 4 (declaration_list -> declaration .)
    COMMENT_HASHTAG reduce using rule 4 (declaration_list -> declaration .)
    COMMENT_MULTI   reduce using rule 4 (declaration_list -> declaration .)
    empty           reduce using rule 4 (declaration_list -> declaration .)
    include         reduce using rule 4 (declaration_list -> declaration .)
    const           reduce using rule 4 (declaration_list -> declaration .)
    print           reduce using rule 4 (declaration_list -> declaration .)
    echo            reduce using rule 4 (declaration_list -> declaration .)
    while           reduce using rule 4 (declaration_list -> declaration .)
    if              reduce using rule 4 (declaration_list -> declaration .)
    function        reduce using rule 4 (declaration_list -> declaration .)
    ID              reduce using rule 4 (declaration_list -> declaration .)
    class           reduce using rule 4 (declaration_list -> declaration .)
    new             reduce using rule 4 (declaration_list -> declaration .)
    CLOSE_TAG       reduce using rule 4 (declaration_list -> declaration .)
    for             reduce using rule 4 (declaration_list -> declaration .)
    foreach         reduce using rule 4 (declaration_list -> declaration .)
    exit            reduce using rule 4 (declaration_list -> declaration .)
    VARIABLE        reduce using rule 4 (declaration_list -> declaration .)
    array           reduce using rule 4 (declaration_list -> declaration .)
    pow             reduce using rule 4 (declaration_list -> declaration .)
    POW             reduce using rule 4 (declaration_list -> declaration .)
    abs             reduce using rule 4 (declaration_list -> declaration .)
    cos             reduce using rule 4 (declaration_list -> declaration .)
    deg2rad         reduce using rule 4 (declaration_list -> declaration .)
    rad2deg         reduce using rule 4 (declaration_list -> declaration .)
    die             reduce using rule 4 (declaration_list -> declaration .)
    exp             reduce using rule 4 (declaration_list -> declaration .)
    floor           reduce using rule 4 (declaration_list -> declaration .)
    isset           reduce using rule 4 (declaration_list -> declaration .)
    list            reduce using rule 4 (declaration_list -> declaration .)
    log             reduce using rule 4 (declaration_list -> declaration .)
    log10           reduce using rule 4 (declaration_list -> declaration .)
    max             reduce using rule 4 (declaration_list -> declaration .)
    min             reduce using rule 4 (declaration_list -> declaration .)
    rand            reduce using rule 4 (declaration_list -> declaration .)
    round           reduce using rule 4 (declaration_list -> declaration .)
    sin             reduce using rule 4 (declaration_list -> declaration .)
    sqrt            reduce using rule 4 (declaration_list -> declaration .)
    unset           reduce using rule 4 (declaration_list -> declaration .)
    CADENA          reduce using rule 4 (declaration_list -> declaration .)
    $end            reduce using rule 4 (declaration_list -> declaration .)
    RBLOCK          reduce using rule 4 (declaration_list -> declaration .)


state 6

    (6) declaration -> COMMENT .

    COMMENT         reduce using rule 6 (declaration -> COMMENT .)
    COMMENT_HASHTAG reduce using rule 6 (declaration -> COMMENT .)
    COMMENT_MULTI   reduce using rule 6 (declaration -> COMMENT .)
    empty           reduce using rule 6 (declaration -> COMMENT .)
    include         reduce using rule 6 (declaration -> COMMENT .)
    const           reduce using rule 6 (declaration -> COMMENT .)
    print           reduce using rule 6 (declaration -> COMMENT .)
    echo            reduce using rule 6 (declaration -> COMMENT .)
    while           reduce using rule 6 (declaration -> COMMENT .)
    if              reduce using rule 6 (declaration -> COMMENT .)
    function        reduce using rule 6 (declaration -> COMMENT .)
    ID              reduce using rule 6 (declaration -> COMMENT .)
    class           reduce using rule 6 (declaration -> COMMENT .)
    new             reduce using rule 6 (declaration -> COMMENT .)
    CLOSE_TAG       reduce using rule 6 (declaration -> COMMENT .)
    for             reduce using rule 6 (declaration -> COMMENT .)
    foreach         reduce using rule 6 (declaration -> COMMENT .)
    exit            reduce using rule 6 (declaration -> COMMENT .)
    VARIABLE        reduce using rule 6 (declaration -> COMMENT .)
    array           reduce using rule 6 (declaration -> COMMENT .)
    pow             reduce using rule 6 (declaration -> COMMENT .)
    POW             reduce using rule 6 (declaration -> COMMENT .)
    abs             reduce using rule 6 (declaration -> COMMENT .)
    cos             reduce using rule 6 (declaration -> COMMENT .)
    deg2rad         reduce using rule 6 (declaration -> COMMENT .)
    rad2deg         reduce using rule 6 (declaration -> COMMENT .)
    die             reduce using rule 6 (declaration -> COMMENT .)
    exp             reduce using rule 6 (declaration -> COMMENT .)
    floor           reduce using rule 6 (declaration -> COMMENT .)
    isset           reduce using rule 6 (declaration -> COMMENT .)
    list            reduce using rule 6 (declaration -> COMMENT .)
    log             reduce using rule 6 (declaration -> COMMENT .)
    log10           reduce using rule 6 (declaration -> COMMENT .)
    max             reduce using rule 6 (declaration -> COMMENT .)
    min             reduce using rule 6 (declaration -> COMMENT .)
    rand            reduce using rule 6 (declaration -> COMMENT .)
    round           reduce using rule 6 (declaration -> COMMENT .)
    sin             reduce using rule 6 (declaration -> COMMENT .)
    sqrt            reduce using rule 6 (declaration -> COMMENT .)
    unset           reduce using rule 6 (declaration -> COMMENT .)
    CADENA          reduce using rule 6 (declaration -> COMMENT .)
    $end            reduce using rule 6 (declaration -> COMMENT .)
    RBLOCK          reduce using rule 6 (declaration -> COMMENT .)


state 7

    (7) declaration -> COMMENT_HASHTAG .

    COMMENT         reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    COMMENT_HASHTAG reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    COMMENT_MULTI   reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    empty           reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    include         reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    const           reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    print           reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    echo            reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    while           reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    if              reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    function        reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    ID              reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    class           reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    new             reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    CLOSE_TAG       reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    for             reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    foreach         reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    exit            reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    VARIABLE        reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    array           reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    pow             reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    POW             reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    abs             reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    cos             reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    deg2rad         reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    rad2deg         reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    die             reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    exp             reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    floor           reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    isset           reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    list            reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    log             reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    log10           reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    max             reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    min             reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    rand            reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    round           reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    sin             reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    sqrt            reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    unset           reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    CADENA          reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    $end            reduce using rule 7 (declaration -> COMMENT_HASHTAG .)
    RBLOCK          reduce using rule 7 (declaration -> COMMENT_HASHTAG .)


state 8

    (8) declaration -> COMMENT_MULTI .

    COMMENT         reduce using rule 8 (declaration -> COMMENT_MULTI .)
    COMMENT_HASHTAG reduce using rule 8 (declaration -> COMMENT_MULTI .)
    COMMENT_MULTI   reduce using rule 8 (declaration -> COMMENT_MULTI .)
    empty           reduce using rule 8 (declaration -> COMMENT_MULTI .)
    include         reduce using rule 8 (declaration -> COMMENT_MULTI .)
    const           reduce using rule 8 (declaration -> COMMENT_MULTI .)
    print           reduce using rule 8 (declaration -> COMMENT_MULTI .)
    echo            reduce using rule 8 (declaration -> COMMENT_MULTI .)
    while           reduce using rule 8 (declaration -> COMMENT_MULTI .)
    if              reduce using rule 8 (declaration -> COMMENT_MULTI .)
    function        reduce using rule 8 (declaration -> COMMENT_MULTI .)
    ID              reduce using rule 8 (declaration -> COMMENT_MULTI .)
    class           reduce using rule 8 (declaration -> COMMENT_MULTI .)
    new             reduce using rule 8 (declaration -> COMMENT_MULTI .)
    CLOSE_TAG       reduce using rule 8 (declaration -> COMMENT_MULTI .)
    for             reduce using rule 8 (declaration -> COMMENT_MULTI .)
    foreach         reduce using rule 8 (declaration -> COMMENT_MULTI .)
    exit            reduce using rule 8 (declaration -> COMMENT_MULTI .)
    VARIABLE        reduce using rule 8 (declaration -> COMMENT_MULTI .)
    array           reduce using rule 8 (declaration -> COMMENT_MULTI .)
    pow             reduce using rule 8 (declaration -> COMMENT_MULTI .)
    POW             reduce using rule 8 (declaration -> COMMENT_MULTI .)
    abs             reduce using rule 8 (declaration -> COMMENT_MULTI .)
    cos             reduce using rule 8 (declaration -> COMMENT_MULTI .)
    deg2rad         reduce using rule 8 (declaration -> COMMENT_MULTI .)
    rad2deg         reduce using rule 8 (declaration -> COMMENT_MULTI .)
    die             reduce using rule 8 (declaration -> COMMENT_MULTI .)
    exp             reduce using rule 8 (declaration -> COMMENT_MULTI .)
    floor           reduce using rule 8 (declaration -> COMMENT_MULTI .)
    isset           reduce using rule 8 (declaration -> COMMENT_MULTI .)
    list            reduce using rule 8 (declaration -> COMMENT_MULTI .)
    log             reduce using rule 8 (declaration -> COMMENT_MULTI .)
    log10           reduce using rule 8 (declaration -> COMMENT_MULTI .)
    max             reduce using rule 8 (declaration -> COMMENT_MULTI .)
    min             reduce using rule 8 (declaration -> COMMENT_MULTI .)
    rand            reduce using rule 8 (declaration -> COMMENT_MULTI .)
    round           reduce using rule 8 (declaration -> COMMENT_MULTI .)
    sin             reduce using rule 8 (declaration -> COMMENT_MULTI .)
    sqrt            reduce using rule 8 (declaration -> COMMENT_MULTI .)
    unset           reduce using rule 8 (declaration -> COMMENT_MULTI .)
    CADENA          reduce using rule 8 (declaration -> COMMENT_MULTI .)
    $end            reduce using rule 8 (declaration -> COMMENT_MULTI .)
    RBLOCK          reduce using rule 8 (declaration -> COMMENT_MULTI .)


state 9

    (9) declaration -> header_declaration .

    COMMENT         reduce using rule 9 (declaration -> header_declaration .)
    COMMENT_HASHTAG reduce using rule 9 (declaration -> header_declaration .)
    COMMENT_MULTI   reduce using rule 9 (declaration -> header_declaration .)
    empty           reduce using rule 9 (declaration -> header_declaration .)
    include         reduce using rule 9 (declaration -> header_declaration .)
    const           reduce using rule 9 (declaration -> header_declaration .)
    print           reduce using rule 9 (declaration -> header_declaration .)
    echo            reduce using rule 9 (declaration -> header_declaration .)
    while           reduce using rule 9 (declaration -> header_declaration .)
    if              reduce using rule 9 (declaration -> header_declaration .)
    function        reduce using rule 9 (declaration -> header_declaration .)
    ID              reduce using rule 9 (declaration -> header_declaration .)
    class           reduce using rule 9 (declaration -> header_declaration .)
    new             reduce using rule 9 (declaration -> header_declaration .)
    CLOSE_TAG       reduce using rule 9 (declaration -> header_declaration .)
    for             reduce using rule 9 (declaration -> header_declaration .)
    foreach         reduce using rule 9 (declaration -> header_declaration .)
    exit            reduce using rule 9 (declaration -> header_declaration .)
    VARIABLE        reduce using rule 9 (declaration -> header_declaration .)
    array           reduce using rule 9 (declaration -> header_declaration .)
    pow             reduce using rule 9 (declaration -> header_declaration .)
    POW             reduce using rule 9 (declaration -> header_declaration .)
    abs             reduce using rule 9 (declaration -> header_declaration .)
    cos             reduce using rule 9 (declaration -> header_declaration .)
    deg2rad         reduce using rule 9 (declaration -> header_declaration .)
    rad2deg         reduce using rule 9 (declaration -> header_declaration .)
    die             reduce using rule 9 (declaration -> header_declaration .)
    exp             reduce using rule 9 (declaration -> header_declaration .)
    floor           reduce using rule 9 (declaration -> header_declaration .)
    isset           reduce using rule 9 (declaration -> header_declaration .)
    list            reduce using rule 9 (declaration -> header_declaration .)
    log             reduce using rule 9 (declaration -> header_declaration .)
    log10           reduce using rule 9 (declaration -> header_declaration .)
    max             reduce using rule 9 (declaration -> header_declaration .)
    min             reduce using rule 9 (declaration -> header_declaration .)
    rand            reduce using rule 9 (declaration -> header_declaration .)
    round           reduce using rule 9 (declaration -> header_declaration .)
    sin             reduce using rule 9 (declaration -> header_declaration .)
    sqrt            reduce using rule 9 (declaration -> header_declaration .)
    unset           reduce using rule 9 (declaration -> header_declaration .)
    CADENA          reduce using rule 9 (declaration -> header_declaration .)
    $end            reduce using rule 9 (declaration -> header_declaration .)
    RBLOCK          reduce using rule 9 (declaration -> header_declaration .)


state 10

    (10) declaration -> var_declaration .

    COMMENT         reduce using rule 10 (declaration -> var_declaration .)
    COMMENT_HASHTAG reduce using rule 10 (declaration -> var_declaration .)
    COMMENT_MULTI   reduce using rule 10 (declaration -> var_declaration .)
    empty           reduce using rule 10 (declaration -> var_declaration .)
    include         reduce using rule 10 (declaration -> var_declaration .)
    const           reduce using rule 10 (declaration -> var_declaration .)
    print           reduce using rule 10 (declaration -> var_declaration .)
    echo            reduce using rule 10 (declaration -> var_declaration .)
    while           reduce using rule 10 (declaration -> var_declaration .)
    if              reduce using rule 10 (declaration -> var_declaration .)
    function        reduce using rule 10 (declaration -> var_declaration .)
    ID              reduce using rule 10 (declaration -> var_declaration .)
    class           reduce using rule 10 (declaration -> var_declaration .)
    new             reduce using rule 10 (declaration -> var_declaration .)
    CLOSE_TAG       reduce using rule 10 (declaration -> var_declaration .)
    for             reduce using rule 10 (declaration -> var_declaration .)
    foreach         reduce using rule 10 (declaration -> var_declaration .)
    exit            reduce using rule 10 (declaration -> var_declaration .)
    VARIABLE        reduce using rule 10 (declaration -> var_declaration .)
    array           reduce using rule 10 (declaration -> var_declaration .)
    pow             reduce using rule 10 (declaration -> var_declaration .)
    POW             reduce using rule 10 (declaration -> var_declaration .)
    abs             reduce using rule 10 (declaration -> var_declaration .)
    cos             reduce using rule 10 (declaration -> var_declaration .)
    deg2rad         reduce using rule 10 (declaration -> var_declaration .)
    rad2deg         reduce using rule 10 (declaration -> var_declaration .)
    die             reduce using rule 10 (declaration -> var_declaration .)
    exp             reduce using rule 10 (declaration -> var_declaration .)
    floor           reduce using rule 10 (declaration -> var_declaration .)
    isset           reduce using rule 10 (declaration -> var_declaration .)
    list            reduce using rule 10 (declaration -> var_declaration .)
    log             reduce using rule 10 (declaration -> var_declaration .)
    log10           reduce using rule 10 (declaration -> var_declaration .)
    max             reduce using rule 10 (declaration -> var_declaration .)
    min             reduce using rule 10 (declaration -> var_declaration .)
    rand            reduce using rule 10 (declaration -> var_declaration .)
    round           reduce using rule 10 (declaration -> var_declaration .)
    sin             reduce using rule 10 (declaration -> var_declaration .)
    sqrt            reduce using rule 10 (declaration -> var_declaration .)
    unset           reduce using rule 10 (declaration -> var_declaration .)
    CADENA          reduce using rule 10 (declaration -> var_declaration .)
    $end            reduce using rule 10 (declaration -> var_declaration .)
    RBLOCK          reduce using rule 10 (declaration -> var_declaration .)


state 11

    (11) declaration -> constant_declaration .

    COMMENT         reduce using rule 11 (declaration -> constant_declaration .)
    COMMENT_HASHTAG reduce using rule 11 (declaration -> constant_declaration .)
    COMMENT_MULTI   reduce using rule 11 (declaration -> constant_declaration .)
    empty           reduce using rule 11 (declaration -> constant_declaration .)
    include         reduce using rule 11 (declaration -> constant_declaration .)
    const           reduce using rule 11 (declaration -> constant_declaration .)
    print           reduce using rule 11 (declaration -> constant_declaration .)
    echo            reduce using rule 11 (declaration -> constant_declaration .)
    while           reduce using rule 11 (declaration -> constant_declaration .)
    if              reduce using rule 11 (declaration -> constant_declaration .)
    function        reduce using rule 11 (declaration -> constant_declaration .)
    ID              reduce using rule 11 (declaration -> constant_declaration .)
    class           reduce using rule 11 (declaration -> constant_declaration .)
    new             reduce using rule 11 (declaration -> constant_declaration .)
    CLOSE_TAG       reduce using rule 11 (declaration -> constant_declaration .)
    for             reduce using rule 11 (declaration -> constant_declaration .)
    foreach         reduce using rule 11 (declaration -> constant_declaration .)
    exit            reduce using rule 11 (declaration -> constant_declaration .)
    VARIABLE        reduce using rule 11 (declaration -> constant_declaration .)
    array           reduce using rule 11 (declaration -> constant_declaration .)
    pow             reduce using rule 11 (declaration -> constant_declaration .)
    POW             reduce using rule 11 (declaration -> constant_declaration .)
    abs             reduce using rule 11 (declaration -> constant_declaration .)
    cos             reduce using rule 11 (declaration -> constant_declaration .)
    deg2rad         reduce using rule 11 (declaration -> constant_declaration .)
    rad2deg         reduce using rule 11 (declaration -> constant_declaration .)
    die             reduce using rule 11 (declaration -> constant_declaration .)
    exp             reduce using rule 11 (declaration -> constant_declaration .)
    floor           reduce using rule 11 (declaration -> constant_declaration .)
    isset           reduce using rule 11 (declaration -> constant_declaration .)
    list            reduce using rule 11 (declaration -> constant_declaration .)
    log             reduce using rule 11 (declaration -> constant_declaration .)
    log10           reduce using rule 11 (declaration -> constant_declaration .)
    max             reduce using rule 11 (declaration -> constant_declaration .)
    min             reduce using rule 11 (declaration -> constant_declaration .)
    rand            reduce using rule 11 (declaration -> constant_declaration .)
    round           reduce using rule 11 (declaration -> constant_declaration .)
    sin             reduce using rule 11 (declaration -> constant_declaration .)
    sqrt            reduce using rule 11 (declaration -> constant_declaration .)
    unset           reduce using rule 11 (declaration -> constant_declaration .)
    CADENA          reduce using rule 11 (declaration -> constant_declaration .)
    $end            reduce using rule 11 (declaration -> constant_declaration .)
    RBLOCK          reduce using rule 11 (declaration -> constant_declaration .)


state 12

    (12) declaration -> print_declaration .

    COMMENT         reduce using rule 12 (declaration -> print_declaration .)
    COMMENT_HASHTAG reduce using rule 12 (declaration -> print_declaration .)
    COMMENT_MULTI   reduce using rule 12 (declaration -> print_declaration .)
    empty           reduce using rule 12 (declaration -> print_declaration .)
    include         reduce using rule 12 (declaration -> print_declaration .)
    const           reduce using rule 12 (declaration -> print_declaration .)
    print           reduce using rule 12 (declaration -> print_declaration .)
    echo            reduce using rule 12 (declaration -> print_declaration .)
    while           reduce using rule 12 (declaration -> print_declaration .)
    if              reduce using rule 12 (declaration -> print_declaration .)
    function        reduce using rule 12 (declaration -> print_declaration .)
    ID              reduce using rule 12 (declaration -> print_declaration .)
    class           reduce using rule 12 (declaration -> print_declaration .)
    new             reduce using rule 12 (declaration -> print_declaration .)
    CLOSE_TAG       reduce using rule 12 (declaration -> print_declaration .)
    for             reduce using rule 12 (declaration -> print_declaration .)
    foreach         reduce using rule 12 (declaration -> print_declaration .)
    exit            reduce using rule 12 (declaration -> print_declaration .)
    VARIABLE        reduce using rule 12 (declaration -> print_declaration .)
    array           reduce using rule 12 (declaration -> print_declaration .)
    pow             reduce using rule 12 (declaration -> print_declaration .)
    POW             reduce using rule 12 (declaration -> print_declaration .)
    abs             reduce using rule 12 (declaration -> print_declaration .)
    cos             reduce using rule 12 (declaration -> print_declaration .)
    deg2rad         reduce using rule 12 (declaration -> print_declaration .)
    rad2deg         reduce using rule 12 (declaration -> print_declaration .)
    die             reduce using rule 12 (declaration -> print_declaration .)
    exp             reduce using rule 12 (declaration -> print_declaration .)
    floor           reduce using rule 12 (declaration -> print_declaration .)
    isset           reduce using rule 12 (declaration -> print_declaration .)
    list            reduce using rule 12 (declaration -> print_declaration .)
    log             reduce using rule 12 (declaration -> print_declaration .)
    log10           reduce using rule 12 (declaration -> print_declaration .)
    max             reduce using rule 12 (declaration -> print_declaration .)
    min             reduce using rule 12 (declaration -> print_declaration .)
    rand            reduce using rule 12 (declaration -> print_declaration .)
    round           reduce using rule 12 (declaration -> print_declaration .)
    sin             reduce using rule 12 (declaration -> print_declaration .)
    sqrt            reduce using rule 12 (declaration -> print_declaration .)
    unset           reduce using rule 12 (declaration -> print_declaration .)
    CADENA          reduce using rule 12 (declaration -> print_declaration .)
    $end            reduce using rule 12 (declaration -> print_declaration .)
    RBLOCK          reduce using rule 12 (declaration -> print_declaration .)


state 13

    (13) declaration -> echo_declaration .

    COMMENT         reduce using rule 13 (declaration -> echo_declaration .)
    COMMENT_HASHTAG reduce using rule 13 (declaration -> echo_declaration .)
    COMMENT_MULTI   reduce using rule 13 (declaration -> echo_declaration .)
    empty           reduce using rule 13 (declaration -> echo_declaration .)
    include         reduce using rule 13 (declaration -> echo_declaration .)
    const           reduce using rule 13 (declaration -> echo_declaration .)
    print           reduce using rule 13 (declaration -> echo_declaration .)
    echo            reduce using rule 13 (declaration -> echo_declaration .)
    while           reduce using rule 13 (declaration -> echo_declaration .)
    if              reduce using rule 13 (declaration -> echo_declaration .)
    function        reduce using rule 13 (declaration -> echo_declaration .)
    ID              reduce using rule 13 (declaration -> echo_declaration .)
    class           reduce using rule 13 (declaration -> echo_declaration .)
    new             reduce using rule 13 (declaration -> echo_declaration .)
    CLOSE_TAG       reduce using rule 13 (declaration -> echo_declaration .)
    for             reduce using rule 13 (declaration -> echo_declaration .)
    foreach         reduce using rule 13 (declaration -> echo_declaration .)
    exit            reduce using rule 13 (declaration -> echo_declaration .)
    VARIABLE        reduce using rule 13 (declaration -> echo_declaration .)
    array           reduce using rule 13 (declaration -> echo_declaration .)
    pow             reduce using rule 13 (declaration -> echo_declaration .)
    POW             reduce using rule 13 (declaration -> echo_declaration .)
    abs             reduce using rule 13 (declaration -> echo_declaration .)
    cos             reduce using rule 13 (declaration -> echo_declaration .)
    deg2rad         reduce using rule 13 (declaration -> echo_declaration .)
    rad2deg         reduce using rule 13 (declaration -> echo_declaration .)
    die             reduce using rule 13 (declaration -> echo_declaration .)
    exp             reduce using rule 13 (declaration -> echo_declaration .)
    floor           reduce using rule 13 (declaration -> echo_declaration .)
    isset           reduce using rule 13 (declaration -> echo_declaration .)
    list            reduce using rule 13 (declaration -> echo_declaration .)
    log             reduce using rule 13 (declaration -> echo_declaration .)
    log10           reduce using rule 13 (declaration -> echo_declaration .)
    max             reduce using rule 13 (declaration -> echo_declaration .)
    min             reduce using rule 13 (declaration -> echo_declaration .)
    rand            reduce using rule 13 (declaration -> echo_declaration .)
    round           reduce using rule 13 (declaration -> echo_declaration .)
    sin             reduce using rule 13 (declaration -> echo_declaration .)
    sqrt            reduce using rule 13 (declaration -> echo_declaration .)
    unset           reduce using rule 13 (declaration -> echo_declaration .)
    CADENA          reduce using rule 13 (declaration -> echo_declaration .)
    $end            reduce using rule 13 (declaration -> echo_declaration .)
    RBLOCK          reduce using rule 13 (declaration -> echo_declaration .)


state 14

    (14) declaration -> iteration_stmt .

    COMMENT         reduce using rule 14 (declaration -> iteration_stmt .)
    COMMENT_HASHTAG reduce using rule 14 (declaration -> iteration_stmt .)
    COMMENT_MULTI   reduce using rule 14 (declaration -> iteration_stmt .)
    empty           reduce using rule 14 (declaration -> iteration_stmt .)
    include         reduce using rule 14 (declaration -> iteration_stmt .)
    const           reduce using rule 14 (declaration -> iteration_stmt .)
    print           reduce using rule 14 (declaration -> iteration_stmt .)
    echo            reduce using rule 14 (declaration -> iteration_stmt .)
    while           reduce using rule 14 (declaration -> iteration_stmt .)
    if              reduce using rule 14 (declaration -> iteration_stmt .)
    function        reduce using rule 14 (declaration -> iteration_stmt .)
    ID              reduce using rule 14 (declaration -> iteration_stmt .)
    class           reduce using rule 14 (declaration -> iteration_stmt .)
    new             reduce using rule 14 (declaration -> iteration_stmt .)
    CLOSE_TAG       reduce using rule 14 (declaration -> iteration_stmt .)
    for             reduce using rule 14 (declaration -> iteration_stmt .)
    foreach         reduce using rule 14 (declaration -> iteration_stmt .)
    exit            reduce using rule 14 (declaration -> iteration_stmt .)
    VARIABLE        reduce using rule 14 (declaration -> iteration_stmt .)
    array           reduce using rule 14 (declaration -> iteration_stmt .)
    pow             reduce using rule 14 (declaration -> iteration_stmt .)
    POW             reduce using rule 14 (declaration -> iteration_stmt .)
    abs             reduce using rule 14 (declaration -> iteration_stmt .)
    cos             reduce using rule 14 (declaration -> iteration_stmt .)
    deg2rad         reduce using rule 14 (declaration -> iteration_stmt .)
    rad2deg         reduce using rule 14 (declaration -> iteration_stmt .)
    die             reduce using rule 14 (declaration -> iteration_stmt .)
    exp             reduce using rule 14 (declaration -> iteration_stmt .)
    floor           reduce using rule 14 (declaration -> iteration_stmt .)
    isset           reduce using rule 14 (declaration -> iteration_stmt .)
    list            reduce using rule 14 (declaration -> iteration_stmt .)
    log             reduce using rule 14 (declaration -> iteration_stmt .)
    log10           reduce using rule 14 (declaration -> iteration_stmt .)
    max             reduce using rule 14 (declaration -> iteration_stmt .)
    min             reduce using rule 14 (declaration -> iteration_stmt .)
    rand            reduce using rule 14 (declaration -> iteration_stmt .)
    round           reduce using rule 14 (declaration -> iteration_stmt .)
    sin             reduce using rule 14 (declaration -> iteration_stmt .)
    sqrt            reduce using rule 14 (declaration -> iteration_stmt .)
    unset           reduce using rule 14 (declaration -> iteration_stmt .)
    CADENA          reduce using rule 14 (declaration -> iteration_stmt .)
    $end            reduce using rule 14 (declaration -> iteration_stmt .)
    RBLOCK          reduce using rule 14 (declaration -> iteration_stmt .)


state 15

    (15) declaration -> if_statement .

    COMMENT         reduce using rule 15 (declaration -> if_statement .)
    COMMENT_HASHTAG reduce using rule 15 (declaration -> if_statement .)
    COMMENT_MULTI   reduce using rule 15 (declaration -> if_statement .)
    empty           reduce using rule 15 (declaration -> if_statement .)
    include         reduce using rule 15 (declaration -> if_statement .)
    const           reduce using rule 15 (declaration -> if_statement .)
    print           reduce using rule 15 (declaration -> if_statement .)
    echo            reduce using rule 15 (declaration -> if_statement .)
    while           reduce using rule 15 (declaration -> if_statement .)
    if              reduce using rule 15 (declaration -> if_statement .)
    function        reduce using rule 15 (declaration -> if_statement .)
    ID              reduce using rule 15 (declaration -> if_statement .)
    class           reduce using rule 15 (declaration -> if_statement .)
    new             reduce using rule 15 (declaration -> if_statement .)
    CLOSE_TAG       reduce using rule 15 (declaration -> if_statement .)
    for             reduce using rule 15 (declaration -> if_statement .)
    foreach         reduce using rule 15 (declaration -> if_statement .)
    exit            reduce using rule 15 (declaration -> if_statement .)
    VARIABLE        reduce using rule 15 (declaration -> if_statement .)
    array           reduce using rule 15 (declaration -> if_statement .)
    pow             reduce using rule 15 (declaration -> if_statement .)
    POW             reduce using rule 15 (declaration -> if_statement .)
    abs             reduce using rule 15 (declaration -> if_statement .)
    cos             reduce using rule 15 (declaration -> if_statement .)
    deg2rad         reduce using rule 15 (declaration -> if_statement .)
    rad2deg         reduce using rule 15 (declaration -> if_statement .)
    die             reduce using rule 15 (declaration -> if_statement .)
    exp             reduce using rule 15 (declaration -> if_statement .)
    floor           reduce using rule 15 (declaration -> if_statement .)
    isset           reduce using rule 15 (declaration -> if_statement .)
    list            reduce using rule 15 (declaration -> if_statement .)
    log             reduce using rule 15 (declaration -> if_statement .)
    log10           reduce using rule 15 (declaration -> if_statement .)
    max             reduce using rule 15 (declaration -> if_statement .)
    min             reduce using rule 15 (declaration -> if_statement .)
    rand            reduce using rule 15 (declaration -> if_statement .)
    round           reduce using rule 15 (declaration -> if_statement .)
    sin             reduce using rule 15 (declaration -> if_statement .)
    sqrt            reduce using rule 15 (declaration -> if_statement .)
    unset           reduce using rule 15 (declaration -> if_statement .)
    CADENA          reduce using rule 15 (declaration -> if_statement .)
    $end            reduce using rule 15 (declaration -> if_statement .)
    RBLOCK          reduce using rule 15 (declaration -> if_statement .)


state 16

    (16) declaration -> fun_declaration .

    COMMENT         reduce using rule 16 (declaration -> fun_declaration .)
    COMMENT_HASHTAG reduce using rule 16 (declaration -> fun_declaration .)
    COMMENT_MULTI   reduce using rule 16 (declaration -> fun_declaration .)
    empty           reduce using rule 16 (declaration -> fun_declaration .)
    include         reduce using rule 16 (declaration -> fun_declaration .)
    const           reduce using rule 16 (declaration -> fun_declaration .)
    print           reduce using rule 16 (declaration -> fun_declaration .)
    echo            reduce using rule 16 (declaration -> fun_declaration .)
    while           reduce using rule 16 (declaration -> fun_declaration .)
    if              reduce using rule 16 (declaration -> fun_declaration .)
    function        reduce using rule 16 (declaration -> fun_declaration .)
    ID              reduce using rule 16 (declaration -> fun_declaration .)
    class           reduce using rule 16 (declaration -> fun_declaration .)
    new             reduce using rule 16 (declaration -> fun_declaration .)
    CLOSE_TAG       reduce using rule 16 (declaration -> fun_declaration .)
    for             reduce using rule 16 (declaration -> fun_declaration .)
    foreach         reduce using rule 16 (declaration -> fun_declaration .)
    exit            reduce using rule 16 (declaration -> fun_declaration .)
    VARIABLE        reduce using rule 16 (declaration -> fun_declaration .)
    array           reduce using rule 16 (declaration -> fun_declaration .)
    pow             reduce using rule 16 (declaration -> fun_declaration .)
    POW             reduce using rule 16 (declaration -> fun_declaration .)
    abs             reduce using rule 16 (declaration -> fun_declaration .)
    cos             reduce using rule 16 (declaration -> fun_declaration .)
    deg2rad         reduce using rule 16 (declaration -> fun_declaration .)
    rad2deg         reduce using rule 16 (declaration -> fun_declaration .)
    die             reduce using rule 16 (declaration -> fun_declaration .)
    exp             reduce using rule 16 (declaration -> fun_declaration .)
    floor           reduce using rule 16 (declaration -> fun_declaration .)
    isset           reduce using rule 16 (declaration -> fun_declaration .)
    list            reduce using rule 16 (declaration -> fun_declaration .)
    log             reduce using rule 16 (declaration -> fun_declaration .)
    log10           reduce using rule 16 (declaration -> fun_declaration .)
    max             reduce using rule 16 (declaration -> fun_declaration .)
    min             reduce using rule 16 (declaration -> fun_declaration .)
    rand            reduce using rule 16 (declaration -> fun_declaration .)
    round           reduce using rule 16 (declaration -> fun_declaration .)
    sin             reduce using rule 16 (declaration -> fun_declaration .)
    sqrt            reduce using rule 16 (declaration -> fun_declaration .)
    unset           reduce using rule 16 (declaration -> fun_declaration .)
    CADENA          reduce using rule 16 (declaration -> fun_declaration .)
    $end            reduce using rule 16 (declaration -> fun_declaration .)
    RBLOCK          reduce using rule 16 (declaration -> fun_declaration .)


state 17

    (17) declaration -> fun_call .

    COMMENT         reduce using rule 17 (declaration -> fun_call .)
    COMMENT_HASHTAG reduce using rule 17 (declaration -> fun_call .)
    COMMENT_MULTI   reduce using rule 17 (declaration -> fun_call .)
    empty           reduce using rule 17 (declaration -> fun_call .)
    include         reduce using rule 17 (declaration -> fun_call .)
    const           reduce using rule 17 (declaration -> fun_call .)
    print           reduce using rule 17 (declaration -> fun_call .)
    echo            reduce using rule 17 (declaration -> fun_call .)
    while           reduce using rule 17 (declaration -> fun_call .)
    if              reduce using rule 17 (declaration -> fun_call .)
    function        reduce using rule 17 (declaration -> fun_call .)
    ID              reduce using rule 17 (declaration -> fun_call .)
    class           reduce using rule 17 (declaration -> fun_call .)
    new             reduce using rule 17 (declaration -> fun_call .)
    CLOSE_TAG       reduce using rule 17 (declaration -> fun_call .)
    for             reduce using rule 17 (declaration -> fun_call .)
    foreach         reduce using rule 17 (declaration -> fun_call .)
    exit            reduce using rule 17 (declaration -> fun_call .)
    VARIABLE        reduce using rule 17 (declaration -> fun_call .)
    array           reduce using rule 17 (declaration -> fun_call .)
    pow             reduce using rule 17 (declaration -> fun_call .)
    POW             reduce using rule 17 (declaration -> fun_call .)
    abs             reduce using rule 17 (declaration -> fun_call .)
    cos             reduce using rule 17 (declaration -> fun_call .)
    deg2rad         reduce using rule 17 (declaration -> fun_call .)
    rad2deg         reduce using rule 17 (declaration -> fun_call .)
    die             reduce using rule 17 (declaration -> fun_call .)
    exp             reduce using rule 17 (declaration -> fun_call .)
    floor           reduce using rule 17 (declaration -> fun_call .)
    isset           reduce using rule 17 (declaration -> fun_call .)
    list            reduce using rule 17 (declaration -> fun_call .)
    log             reduce using rule 17 (declaration -> fun_call .)
    log10           reduce using rule 17 (declaration -> fun_call .)
    max             reduce using rule 17 (declaration -> fun_call .)
    min             reduce using rule 17 (declaration -> fun_call .)
    rand            reduce using rule 17 (declaration -> fun_call .)
    round           reduce using rule 17 (declaration -> fun_call .)
    sin             reduce using rule 17 (declaration -> fun_call .)
    sqrt            reduce using rule 17 (declaration -> fun_call .)
    unset           reduce using rule 17 (declaration -> fun_call .)
    CADENA          reduce using rule 17 (declaration -> fun_call .)
    $end            reduce using rule 17 (declaration -> fun_call .)
    RBLOCK          reduce using rule 17 (declaration -> fun_call .)


state 18

    (18) declaration -> obj_declaration .

    COMMENT         reduce using rule 18 (declaration -> obj_declaration .)
    COMMENT_HASHTAG reduce using rule 18 (declaration -> obj_declaration .)
    COMMENT_MULTI   reduce using rule 18 (declaration -> obj_declaration .)
    empty           reduce using rule 18 (declaration -> obj_declaration .)
    include         reduce using rule 18 (declaration -> obj_declaration .)
    const           reduce using rule 18 (declaration -> obj_declaration .)
    print           reduce using rule 18 (declaration -> obj_declaration .)
    echo            reduce using rule 18 (declaration -> obj_declaration .)
    while           reduce using rule 18 (declaration -> obj_declaration .)
    if              reduce using rule 18 (declaration -> obj_declaration .)
    function        reduce using rule 18 (declaration -> obj_declaration .)
    ID              reduce using rule 18 (declaration -> obj_declaration .)
    class           reduce using rule 18 (declaration -> obj_declaration .)
    new             reduce using rule 18 (declaration -> obj_declaration .)
    CLOSE_TAG       reduce using rule 18 (declaration -> obj_declaration .)
    for             reduce using rule 18 (declaration -> obj_declaration .)
    foreach         reduce using rule 18 (declaration -> obj_declaration .)
    exit            reduce using rule 18 (declaration -> obj_declaration .)
    VARIABLE        reduce using rule 18 (declaration -> obj_declaration .)
    array           reduce using rule 18 (declaration -> obj_declaration .)
    pow             reduce using rule 18 (declaration -> obj_declaration .)
    POW             reduce using rule 18 (declaration -> obj_declaration .)
    abs             reduce using rule 18 (declaration -> obj_declaration .)
    cos             reduce using rule 18 (declaration -> obj_declaration .)
    deg2rad         reduce using rule 18 (declaration -> obj_declaration .)
    rad2deg         reduce using rule 18 (declaration -> obj_declaration .)
    die             reduce using rule 18 (declaration -> obj_declaration .)
    exp             reduce using rule 18 (declaration -> obj_declaration .)
    floor           reduce using rule 18 (declaration -> obj_declaration .)
    isset           reduce using rule 18 (declaration -> obj_declaration .)
    list            reduce using rule 18 (declaration -> obj_declaration .)
    log             reduce using rule 18 (declaration -> obj_declaration .)
    log10           reduce using rule 18 (declaration -> obj_declaration .)
    max             reduce using rule 18 (declaration -> obj_declaration .)
    min             reduce using rule 18 (declaration -> obj_declaration .)
    rand            reduce using rule 18 (declaration -> obj_declaration .)
    round           reduce using rule 18 (declaration -> obj_declaration .)
    sin             reduce using rule 18 (declaration -> obj_declaration .)
    sqrt            reduce using rule 18 (declaration -> obj_declaration .)
    unset           reduce using rule 18 (declaration -> obj_declaration .)
    CADENA          reduce using rule 18 (declaration -> obj_declaration .)
    $end            reduce using rule 18 (declaration -> obj_declaration .)
    RBLOCK          reduce using rule 18 (declaration -> obj_declaration .)


state 19

    (19) declaration -> create_obj_declaration .

    COMMENT         reduce using rule 19 (declaration -> create_obj_declaration .)
    COMMENT_HASHTAG reduce using rule 19 (declaration -> create_obj_declaration .)
    COMMENT_MULTI   reduce using rule 19 (declaration -> create_obj_declaration .)
    empty           reduce using rule 19 (declaration -> create_obj_declaration .)
    include         reduce using rule 19 (declaration -> create_obj_declaration .)
    const           reduce using rule 19 (declaration -> create_obj_declaration .)
    print           reduce using rule 19 (declaration -> create_obj_declaration .)
    echo            reduce using rule 19 (declaration -> create_obj_declaration .)
    while           reduce using rule 19 (declaration -> create_obj_declaration .)
    if              reduce using rule 19 (declaration -> create_obj_declaration .)
    function        reduce using rule 19 (declaration -> create_obj_declaration .)
    ID              reduce using rule 19 (declaration -> create_obj_declaration .)
    class           reduce using rule 19 (declaration -> create_obj_declaration .)
    new             reduce using rule 19 (declaration -> create_obj_declaration .)
    CLOSE_TAG       reduce using rule 19 (declaration -> create_obj_declaration .)
    for             reduce using rule 19 (declaration -> create_obj_declaration .)
    foreach         reduce using rule 19 (declaration -> create_obj_declaration .)
    exit            reduce using rule 19 (declaration -> create_obj_declaration .)
    VARIABLE        reduce using rule 19 (declaration -> create_obj_declaration .)
    array           reduce using rule 19 (declaration -> create_obj_declaration .)
    pow             reduce using rule 19 (declaration -> create_obj_declaration .)
    POW             reduce using rule 19 (declaration -> create_obj_declaration .)
    abs             reduce using rule 19 (declaration -> create_obj_declaration .)
    cos             reduce using rule 19 (declaration -> create_obj_declaration .)
    deg2rad         reduce using rule 19 (declaration -> create_obj_declaration .)
    rad2deg         reduce using rule 19 (declaration -> create_obj_declaration .)
    die             reduce using rule 19 (declaration -> create_obj_declaration .)
    exp             reduce using rule 19 (declaration -> create_obj_declaration .)
    floor           reduce using rule 19 (declaration -> create_obj_declaration .)
    isset           reduce using rule 19 (declaration -> create_obj_declaration .)
    list            reduce using rule 19 (declaration -> create_obj_declaration .)
    log             reduce using rule 19 (declaration -> create_obj_declaration .)
    log10           reduce using rule 19 (declaration -> create_obj_declaration .)
    max             reduce using rule 19 (declaration -> create_obj_declaration .)
    min             reduce using rule 19 (declaration -> create_obj_declaration .)
    rand            reduce using rule 19 (declaration -> create_obj_declaration .)
    round           reduce using rule 19 (declaration -> create_obj_declaration .)
    sin             reduce using rule 19 (declaration -> create_obj_declaration .)
    sqrt            reduce using rule 19 (declaration -> create_obj_declaration .)
    unset           reduce using rule 19 (declaration -> create_obj_declaration .)
    CADENA          reduce using rule 19 (declaration -> create_obj_declaration .)
    $end            reduce using rule 19 (declaration -> create_obj_declaration .)
    RBLOCK          reduce using rule 19 (declaration -> create_obj_declaration .)


state 20

    (20) declaration -> footer_declaration .

    COMMENT         reduce using rule 20 (declaration -> footer_declaration .)
    COMMENT_HASHTAG reduce using rule 20 (declaration -> footer_declaration .)
    COMMENT_MULTI   reduce using rule 20 (declaration -> footer_declaration .)
    empty           reduce using rule 20 (declaration -> footer_declaration .)
    include         reduce using rule 20 (declaration -> footer_declaration .)
    const           reduce using rule 20 (declaration -> footer_declaration .)
    print           reduce using rule 20 (declaration -> footer_declaration .)
    echo            reduce using rule 20 (declaration -> footer_declaration .)
    while           reduce using rule 20 (declaration -> footer_declaration .)
    if              reduce using rule 20 (declaration -> footer_declaration .)
    function        reduce using rule 20 (declaration -> footer_declaration .)
    ID              reduce using rule 20 (declaration -> footer_declaration .)
    class           reduce using rule 20 (declaration -> footer_declaration .)
    new             reduce using rule 20 (declaration -> footer_declaration .)
    CLOSE_TAG       reduce using rule 20 (declaration -> footer_declaration .)
    for             reduce using rule 20 (declaration -> footer_declaration .)
    foreach         reduce using rule 20 (declaration -> footer_declaration .)
    exit            reduce using rule 20 (declaration -> footer_declaration .)
    VARIABLE        reduce using rule 20 (declaration -> footer_declaration .)
    array           reduce using rule 20 (declaration -> footer_declaration .)
    pow             reduce using rule 20 (declaration -> footer_declaration .)
    POW             reduce using rule 20 (declaration -> footer_declaration .)
    abs             reduce using rule 20 (declaration -> footer_declaration .)
    cos             reduce using rule 20 (declaration -> footer_declaration .)
    deg2rad         reduce using rule 20 (declaration -> footer_declaration .)
    rad2deg         reduce using rule 20 (declaration -> footer_declaration .)
    die             reduce using rule 20 (declaration -> footer_declaration .)
    exp             reduce using rule 20 (declaration -> footer_declaration .)
    floor           reduce using rule 20 (declaration -> footer_declaration .)
    isset           reduce using rule 20 (declaration -> footer_declaration .)
    list            reduce using rule 20 (declaration -> footer_declaration .)
    log             reduce using rule 20 (declaration -> footer_declaration .)
    log10           reduce using rule 20 (declaration -> footer_declaration .)
    max             reduce using rule 20 (declaration -> footer_declaration .)
    min             reduce using rule 20 (declaration -> footer_declaration .)
    rand            reduce using rule 20 (declaration -> footer_declaration .)
    round           reduce using rule 20 (declaration -> footer_declaration .)
    sin             reduce using rule 20 (declaration -> footer_declaration .)
    sqrt            reduce using rule 20 (declaration -> footer_declaration .)
    unset           reduce using rule 20 (declaration -> footer_declaration .)
    CADENA          reduce using rule 20 (declaration -> footer_declaration .)
    $end            reduce using rule 20 (declaration -> footer_declaration .)
    RBLOCK          reduce using rule 20 (declaration -> footer_declaration .)


state 21

    (21) declaration -> for_loop .

    COMMENT         reduce using rule 21 (declaration -> for_loop .)
    COMMENT_HASHTAG reduce using rule 21 (declaration -> for_loop .)
    COMMENT_MULTI   reduce using rule 21 (declaration -> for_loop .)
    empty           reduce using rule 21 (declaration -> for_loop .)
    include         reduce using rule 21 (declaration -> for_loop .)
    const           reduce using rule 21 (declaration -> for_loop .)
    print           reduce using rule 21 (declaration -> for_loop .)
    echo            reduce using rule 21 (declaration -> for_loop .)
    while           reduce using rule 21 (declaration -> for_loop .)
    if              reduce using rule 21 (declaration -> for_loop .)
    function        reduce using rule 21 (declaration -> for_loop .)
    ID              reduce using rule 21 (declaration -> for_loop .)
    class           reduce using rule 21 (declaration -> for_loop .)
    new             reduce using rule 21 (declaration -> for_loop .)
    CLOSE_TAG       reduce using rule 21 (declaration -> for_loop .)
    for             reduce using rule 21 (declaration -> for_loop .)
    foreach         reduce using rule 21 (declaration -> for_loop .)
    exit            reduce using rule 21 (declaration -> for_loop .)
    VARIABLE        reduce using rule 21 (declaration -> for_loop .)
    array           reduce using rule 21 (declaration -> for_loop .)
    pow             reduce using rule 21 (declaration -> for_loop .)
    POW             reduce using rule 21 (declaration -> for_loop .)
    abs             reduce using rule 21 (declaration -> for_loop .)
    cos             reduce using rule 21 (declaration -> for_loop .)
    deg2rad         reduce using rule 21 (declaration -> for_loop .)
    rad2deg         reduce using rule 21 (declaration -> for_loop .)
    die             reduce using rule 21 (declaration -> for_loop .)
    exp             reduce using rule 21 (declaration -> for_loop .)
    floor           reduce using rule 21 (declaration -> for_loop .)
    isset           reduce using rule 21 (declaration -> for_loop .)
    list            reduce using rule 21 (declaration -> for_loop .)
    log             reduce using rule 21 (declaration -> for_loop .)
    log10           reduce using rule 21 (declaration -> for_loop .)
    max             reduce using rule 21 (declaration -> for_loop .)
    min             reduce using rule 21 (declaration -> for_loop .)
    rand            reduce using rule 21 (declaration -> for_loop .)
    round           reduce using rule 21 (declaration -> for_loop .)
    sin             reduce using rule 21 (declaration -> for_loop .)
    sqrt            reduce using rule 21 (declaration -> for_loop .)
    unset           reduce using rule 21 (declaration -> for_loop .)
    CADENA          reduce using rule 21 (declaration -> for_loop .)
    $end            reduce using rule 21 (declaration -> for_loop .)
    RBLOCK          reduce using rule 21 (declaration -> for_loop .)


state 22

    (22) declaration -> foreach_loop .

    COMMENT         reduce using rule 22 (declaration -> foreach_loop .)
    COMMENT_HASHTAG reduce using rule 22 (declaration -> foreach_loop .)
    COMMENT_MULTI   reduce using rule 22 (declaration -> foreach_loop .)
    empty           reduce using rule 22 (declaration -> foreach_loop .)
    include         reduce using rule 22 (declaration -> foreach_loop .)
    const           reduce using rule 22 (declaration -> foreach_loop .)
    print           reduce using rule 22 (declaration -> foreach_loop .)
    echo            reduce using rule 22 (declaration -> foreach_loop .)
    while           reduce using rule 22 (declaration -> foreach_loop .)
    if              reduce using rule 22 (declaration -> foreach_loop .)
    function        reduce using rule 22 (declaration -> foreach_loop .)
    ID              reduce using rule 22 (declaration -> foreach_loop .)
    class           reduce using rule 22 (declaration -> foreach_loop .)
    new             reduce using rule 22 (declaration -> foreach_loop .)
    CLOSE_TAG       reduce using rule 22 (declaration -> foreach_loop .)
    for             reduce using rule 22 (declaration -> foreach_loop .)
    foreach         reduce using rule 22 (declaration -> foreach_loop .)
    exit            reduce using rule 22 (declaration -> foreach_loop .)
    VARIABLE        reduce using rule 22 (declaration -> foreach_loop .)
    array           reduce using rule 22 (declaration -> foreach_loop .)
    pow             reduce using rule 22 (declaration -> foreach_loop .)
    POW             reduce using rule 22 (declaration -> foreach_loop .)
    abs             reduce using rule 22 (declaration -> foreach_loop .)
    cos             reduce using rule 22 (declaration -> foreach_loop .)
    deg2rad         reduce using rule 22 (declaration -> foreach_loop .)
    rad2deg         reduce using rule 22 (declaration -> foreach_loop .)
    die             reduce using rule 22 (declaration -> foreach_loop .)
    exp             reduce using rule 22 (declaration -> foreach_loop .)
    floor           reduce using rule 22 (declaration -> foreach_loop .)
    isset           reduce using rule 22 (declaration -> foreach_loop .)
    list            reduce using rule 22 (declaration -> foreach_loop .)
    log             reduce using rule 22 (declaration -> foreach_loop .)
    log10           reduce using rule 22 (declaration -> foreach_loop .)
    max             reduce using rule 22 (declaration -> foreach_loop .)
    min             reduce using rule 22 (declaration -> foreach_loop .)
    rand            reduce using rule 22 (declaration -> foreach_loop .)
    round           reduce using rule 22 (declaration -> foreach_loop .)
    sin             reduce using rule 22 (declaration -> foreach_loop .)
    sqrt            reduce using rule 22 (declaration -> foreach_loop .)
    unset           reduce using rule 22 (declaration -> foreach_loop .)
    CADENA          reduce using rule 22 (declaration -> foreach_loop .)
    $end            reduce using rule 22 (declaration -> foreach_loop .)
    RBLOCK          reduce using rule 22 (declaration -> foreach_loop .)


state 23

    (23) declaration -> exit_statement .

    COMMENT         reduce using rule 23 (declaration -> exit_statement .)
    COMMENT_HASHTAG reduce using rule 23 (declaration -> exit_statement .)
    COMMENT_MULTI   reduce using rule 23 (declaration -> exit_statement .)
    empty           reduce using rule 23 (declaration -> exit_statement .)
    include         reduce using rule 23 (declaration -> exit_statement .)
    const           reduce using rule 23 (declaration -> exit_statement .)
    print           reduce using rule 23 (declaration -> exit_statement .)
    echo            reduce using rule 23 (declaration -> exit_statement .)
    while           reduce using rule 23 (declaration -> exit_statement .)
    if              reduce using rule 23 (declaration -> exit_statement .)
    function        reduce using rule 23 (declaration -> exit_statement .)
    ID              reduce using rule 23 (declaration -> exit_statement .)
    class           reduce using rule 23 (declaration -> exit_statement .)
    new             reduce using rule 23 (declaration -> exit_statement .)
    CLOSE_TAG       reduce using rule 23 (declaration -> exit_statement .)
    for             reduce using rule 23 (declaration -> exit_statement .)
    foreach         reduce using rule 23 (declaration -> exit_statement .)
    exit            reduce using rule 23 (declaration -> exit_statement .)
    VARIABLE        reduce using rule 23 (declaration -> exit_statement .)
    array           reduce using rule 23 (declaration -> exit_statement .)
    pow             reduce using rule 23 (declaration -> exit_statement .)
    POW             reduce using rule 23 (declaration -> exit_statement .)
    abs             reduce using rule 23 (declaration -> exit_statement .)
    cos             reduce using rule 23 (declaration -> exit_statement .)
    deg2rad         reduce using rule 23 (declaration -> exit_statement .)
    rad2deg         reduce using rule 23 (declaration -> exit_statement .)
    die             reduce using rule 23 (declaration -> exit_statement .)
    exp             reduce using rule 23 (declaration -> exit_statement .)
    floor           reduce using rule 23 (declaration -> exit_statement .)
    isset           reduce using rule 23 (declaration -> exit_statement .)
    list            reduce using rule 23 (declaration -> exit_statement .)
    log             reduce using rule 23 (declaration -> exit_statement .)
    log10           reduce using rule 23 (declaration -> exit_statement .)
    max             reduce using rule 23 (declaration -> exit_statement .)
    min             reduce using rule 23 (declaration -> exit_statement .)
    rand            reduce using rule 23 (declaration -> exit_statement .)
    round           reduce using rule 23 (declaration -> exit_statement .)
    sin             reduce using rule 23 (declaration -> exit_statement .)
    sqrt            reduce using rule 23 (declaration -> exit_statement .)
    unset           reduce using rule 23 (declaration -> exit_statement .)
    CADENA          reduce using rule 23 (declaration -> exit_statement .)
    $end            reduce using rule 23 (declaration -> exit_statement .)
    RBLOCK          reduce using rule 23 (declaration -> exit_statement .)


state 24

    (24) declaration -> empty .

    COMMENT         reduce using rule 24 (declaration -> empty .)
    COMMENT_HASHTAG reduce using rule 24 (declaration -> empty .)
    COMMENT_MULTI   reduce using rule 24 (declaration -> empty .)
    empty           reduce using rule 24 (declaration -> empty .)
    include         reduce using rule 24 (declaration -> empty .)
    const           reduce using rule 24 (declaration -> empty .)
    print           reduce using rule 24 (declaration -> empty .)
    echo            reduce using rule 24 (declaration -> empty .)
    while           reduce using rule 24 (declaration -> empty .)
    if              reduce using rule 24 (declaration -> empty .)
    function        reduce using rule 24 (declaration -> empty .)
    ID              reduce using rule 24 (declaration -> empty .)
    class           reduce using rule 24 (declaration -> empty .)
    new             reduce using rule 24 (declaration -> empty .)
    CLOSE_TAG       reduce using rule 24 (declaration -> empty .)
    for             reduce using rule 24 (declaration -> empty .)
    foreach         reduce using rule 24 (declaration -> empty .)
    exit            reduce using rule 24 (declaration -> empty .)
    VARIABLE        reduce using rule 24 (declaration -> empty .)
    array           reduce using rule 24 (declaration -> empty .)
    pow             reduce using rule 24 (declaration -> empty .)
    POW             reduce using rule 24 (declaration -> empty .)
    abs             reduce using rule 24 (declaration -> empty .)
    cos             reduce using rule 24 (declaration -> empty .)
    deg2rad         reduce using rule 24 (declaration -> empty .)
    rad2deg         reduce using rule 24 (declaration -> empty .)
    die             reduce using rule 24 (declaration -> empty .)
    exp             reduce using rule 24 (declaration -> empty .)
    floor           reduce using rule 24 (declaration -> empty .)
    isset           reduce using rule 24 (declaration -> empty .)
    list            reduce using rule 24 (declaration -> empty .)
    log             reduce using rule 24 (declaration -> empty .)
    log10           reduce using rule 24 (declaration -> empty .)
    max             reduce using rule 24 (declaration -> empty .)
    min             reduce using rule 24 (declaration -> empty .)
    rand            reduce using rule 24 (declaration -> empty .)
    round           reduce using rule 24 (declaration -> empty .)
    sin             reduce using rule 24 (declaration -> empty .)
    sqrt            reduce using rule 24 (declaration -> empty .)
    unset           reduce using rule 24 (declaration -> empty .)
    CADENA          reduce using rule 24 (declaration -> empty .)
    $end            reduce using rule 24 (declaration -> empty .)
    RBLOCK          reduce using rule 24 (declaration -> empty .)


state 25

    (27) header_declaration -> include . CADENA SEMICOLON

    CADENA          shift and go to state 66


state 26

    (134) Concatenar_Cadenas_declaration -> CADENA . DOT CADENA
    (135) Concatenar_Cadenas_declaration -> CADENA . DOT VARIABLE

    DOT             shift and go to state 67


state 27

    (37) var_declaration -> var_declaration2 . SEMICOLON

    SEMICOLON       shift and go to state 68


state 28

    (28) constant_declaration -> const . ID EQUAL data_type SEMICOLON

    ID              shift and go to state 69


state 29

    (98) fun_call -> ID . LPAREN params RPAREN

    LPAREN          shift and go to state 70


state 30

    (29) print_declaration -> print . var_declaration2 SEMICOLON
    (30) print_declaration -> print . LPAREN var_declaration2 RPAREN SEMICOLON
    (31) print_declaration -> print . LPAREN data_type RPAREN SEMICOLON
    (32) print_declaration -> print . data_type SEMICOLON
    (38) var_declaration2 -> . VARIABLE
    (39) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (40) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL CADENA
    (42) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (43) var_declaration2 -> . VARIABLE EQUAL expression
    (44) var_declaration2 -> . Built_In_Declaration
    (45) var_declaration2 -> . Concatenar_Cadenas_declaration
    (46) var_declaration2 -> . VARIABLE assignment_tail
    (47) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (25) data_type -> . NUMBER
    (26) data_type -> . CADENA
    (112) Built_In_Declaration -> . array LPAREN params RPAREN
    (113) Built_In_Declaration -> . pow LPAREN params RPAREN
    (114) Built_In_Declaration -> . POW LPAREN params RPAREN
    (115) Built_In_Declaration -> . abs LPAREN params RPAREN
    (116) Built_In_Declaration -> . cos LPAREN params RPAREN
    (117) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (118) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (119) Built_In_Declaration -> . die LPAREN params RPAREN
    (120) Built_In_Declaration -> . exp LPAREN params RPAREN
    (121) Built_In_Declaration -> . floor LPAREN params RPAREN
    (122) Built_In_Declaration -> . isset LPAREN params RPAREN
    (123) Built_In_Declaration -> . list LPAREN params RPAREN
    (124) Built_In_Declaration -> . log LPAREN params RPAREN
    (125) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (126) Built_In_Declaration -> . max LPAREN params RPAREN
    (127) Built_In_Declaration -> . min LPAREN params RPAREN
    (128) Built_In_Declaration -> . rand LPAREN params RPAREN
    (129) Built_In_Declaration -> . round LPAREN params RPAREN
    (130) Built_In_Declaration -> . sin LPAREN params RPAREN
    (131) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (132) Built_In_Declaration -> . unset LPAREN params RPAREN
    (133) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (134) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (135) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    LPAREN          shift and go to state 72
    VARIABLE        shift and go to state 41
    NUMBER          shift and go to state 74
    CADENA          shift and go to state 75
    array           shift and go to state 44
    pow             shift and go to state 45
    POW             shift and go to state 46
    abs             shift and go to state 47
    cos             shift and go to state 48
    deg2rad         shift and go to state 49
    rad2deg         shift and go to state 50
    die             shift and go to state 51
    exp             shift and go to state 52
    floor           shift and go to state 53
    isset           shift and go to state 54
    list            shift and go to state 55
    log             shift and go to state 56
    log10           shift and go to state 57
    max             shift and go to state 58
    min             shift and go to state 59
    rand            shift and go to state 60
    round           shift and go to state 61
    sin             shift and go to state 62
    sqrt            shift and go to state 63
    unset           shift and go to state 64

    var_declaration2               shift and go to state 71
    data_type                      shift and go to state 73
    Built_In_Declaration           shift and go to state 42
    Concatenar_Cadenas_declaration shift and go to state 43

state 31

    (33) echo_declaration -> echo . var_declaration2 SEMICOLON
    (34) echo_declaration -> echo . LPAREN var_declaration2 RPAREN SEMICOLON
    (35) echo_declaration -> echo . LPAREN data_type RPAREN SEMICOLON
    (36) echo_declaration -> echo . data_type SEMICOLON
    (38) var_declaration2 -> . VARIABLE
    (39) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (40) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL CADENA
    (42) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (43) var_declaration2 -> . VARIABLE EQUAL expression
    (44) var_declaration2 -> . Built_In_Declaration
    (45) var_declaration2 -> . Concatenar_Cadenas_declaration
    (46) var_declaration2 -> . VARIABLE assignment_tail
    (47) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (25) data_type -> . NUMBER
    (26) data_type -> . CADENA
    (112) Built_In_Declaration -> . array LPAREN params RPAREN
    (113) Built_In_Declaration -> . pow LPAREN params RPAREN
    (114) Built_In_Declaration -> . POW LPAREN params RPAREN
    (115) Built_In_Declaration -> . abs LPAREN params RPAREN
    (116) Built_In_Declaration -> . cos LPAREN params RPAREN
    (117) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (118) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (119) Built_In_Declaration -> . die LPAREN params RPAREN
    (120) Built_In_Declaration -> . exp LPAREN params RPAREN
    (121) Built_In_Declaration -> . floor LPAREN params RPAREN
    (122) Built_In_Declaration -> . isset LPAREN params RPAREN
    (123) Built_In_Declaration -> . list LPAREN params RPAREN
    (124) Built_In_Declaration -> . log LPAREN params RPAREN
    (125) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (126) Built_In_Declaration -> . max LPAREN params RPAREN
    (127) Built_In_Declaration -> . min LPAREN params RPAREN
    (128) Built_In_Declaration -> . rand LPAREN params RPAREN
    (129) Built_In_Declaration -> . round LPAREN params RPAREN
    (130) Built_In_Declaration -> . sin LPAREN params RPAREN
    (131) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (132) Built_In_Declaration -> . unset LPAREN params RPAREN
    (133) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (134) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (135) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    LPAREN          shift and go to state 77
    VARIABLE        shift and go to state 41
    NUMBER          shift and go to state 74
    CADENA          shift and go to state 75
    array           shift and go to state 44
    pow             shift and go to state 45
    POW             shift and go to state 46
    abs             shift and go to state 47
    cos             shift and go to state 48
    deg2rad         shift and go to state 49
    rad2deg         shift and go to state 50
    die             shift and go to state 51
    exp             shift and go to state 52
    floor           shift and go to state 53
    isset           shift and go to state 54
    list            shift and go to state 55
    log             shift and go to state 56
    log10           shift and go to state 57
    max             shift and go to state 58
    min             shift and go to state 59
    rand            shift and go to state 60
    round           shift and go to state 61
    sin             shift and go to state 62
    sqrt            shift and go to state 63
    unset           shift and go to state 64

    var_declaration2               shift and go to state 76
    data_type                      shift and go to state 78
    Built_In_Declaration           shift and go to state 42
    Concatenar_Cadenas_declaration shift and go to state 43

state 32

    (54) iteration_stmt -> while . LPAREN expression RPAREN LBLOCK declaration RBLOCK

    LPAREN          shift and go to state 79


state 33

    (92) if_statement -> if . LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part

    LPAREN          shift and go to state 80


state 34

    (97) fun_declaration -> function . ID LPAREN params RPAREN LBLOCK declaration RBLOCK

    ID              shift and go to state 81


state 35

    (99) obj_declaration -> class . ID LBLOCK declaration RBLOCK

    ID              shift and go to state 82


state 36

    (100) create_obj_declaration -> new . ID LPAREN params RPAREN

    ID              shift and go to state 83


state 37

    (3) footer_declaration -> CLOSE_TAG .

    COMMENT         reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    COMMENT_HASHTAG reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    COMMENT_MULTI   reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    empty           reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    include         reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    const           reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    print           reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    echo            reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    while           reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    if              reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    function        reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    ID              reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    class           reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    new             reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    CLOSE_TAG       reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    for             reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    foreach         reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    exit            reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    VARIABLE        reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    array           reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    pow             reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    POW             reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    abs             reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    cos             reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    deg2rad         reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    rad2deg         reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    die             reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    exp             reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    floor           reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    isset           reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    list            reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    log             reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    log10           reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    max             reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    min             reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    rand            reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    round           reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    sin             reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    sqrt            reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    unset           reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    CADENA          reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    $end            reduce using rule 3 (footer_declaration -> CLOSE_TAG .)
    RBLOCK          reduce using rule 3 (footer_declaration -> CLOSE_TAG .)


state 38

    (106) for_loop -> for . LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK

    LPAREN          shift and go to state 84


state 39

    (111) foreach_loop -> foreach . LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK

    LPAREN          shift and go to state 85


state 40

    (110) exit_statement -> exit . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 86


state 41

    (38) var_declaration2 -> VARIABLE .
    (39) var_declaration2 -> VARIABLE . EQUAL NUMBER
    (40) var_declaration2 -> VARIABLE . EQUAL VARIABLE
    (41) var_declaration2 -> VARIABLE . EQUAL CADENA
    (42) var_declaration2 -> VARIABLE . EQUAL Built_In_Declaration
    (43) var_declaration2 -> VARIABLE . EQUAL expression
    (46) var_declaration2 -> VARIABLE . assignment_tail
    (47) var_declaration2 -> VARIABLE . EQUAL assignment_tail
    (133) Concatenar_Cadenas_declaration -> VARIABLE . DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> VARIABLE . DOT CADENA
    (48) assignment_tail -> . COMMA var_declaration2
    (49) assignment_tail -> . LBRACKET params RBRACKET
    (50) assignment_tail -> . LBLOCK params RBLOCK
    (51) assignment_tail -> . VARIABLE LBRACKET expression COMMA params
    (52) assignment_tail -> . VARIABLE LBRACKET params RBRACKET
    (53) assignment_tail -> . VARIABLE LBLOCK params RBLOCK

  ! shift/reduce conflict for COMMA resolved as shift
    SEMICOLON       reduce using rule 38 (var_declaration2 -> VARIABLE .)
    RPAREN          reduce using rule 38 (var_declaration2 -> VARIABLE .)
    RBRACKET        reduce using rule 38 (var_declaration2 -> VARIABLE .)
    RBLOCK          reduce using rule 38 (var_declaration2 -> VARIABLE .)
    EQUAL           shift and go to state 88
    DOT             shift and go to state 90
    COMMA           shift and go to state 91
    LBRACKET        shift and go to state 92
    LBLOCK          shift and go to state 93
    VARIABLE        shift and go to state 87

  ! COMMA           [ reduce using rule 38 (var_declaration2 -> VARIABLE .) ]

    assignment_tail                shift and go to state 89

state 42

    (44) var_declaration2 -> Built_In_Declaration .

    SEMICOLON       reduce using rule 44 (var_declaration2 -> Built_In_Declaration .)
    RPAREN          reduce using rule 44 (var_declaration2 -> Built_In_Declaration .)
    COMMA           reduce using rule 44 (var_declaration2 -> Built_In_Declaration .)
    RBRACKET        reduce using rule 44 (var_declaration2 -> Built_In_Declaration .)
    RBLOCK          reduce using rule 44 (var_declaration2 -> Built_In_Declaration .)


state 43

    (45) var_declaration2 -> Concatenar_Cadenas_declaration .

    SEMICOLON       reduce using rule 45 (var_declaration2 -> Concatenar_Cadenas_declaration .)
    RPAREN          reduce using rule 45 (var_declaration2 -> Concatenar_Cadenas_declaration .)
    COMMA           reduce using rule 45 (var_declaration2 -> Concatenar_Cadenas_declaration .)
    RBRACKET        reduce using rule 45 (var_declaration2 -> Concatenar_Cadenas_declaration .)
    RBLOCK          reduce using rule 45 (var_declaration2 -> Concatenar_Cadenas_declaration .)


state 44

    (112) Built_In_Declaration -> array . LPAREN params RPAREN

    LPAREN          shift and go to state 94


state 45

    (113) Built_In_Declaration -> pow . LPAREN params RPAREN

    LPAREN          shift and go to state 95


state 46

    (114) Built_In_Declaration -> POW . LPAREN params RPAREN

    LPAREN          shift and go to state 96


state 47

    (115) Built_In_Declaration -> abs . LPAREN params RPAREN

    LPAREN          shift and go to state 97


state 48

    (116) Built_In_Declaration -> cos . LPAREN params RPAREN

    LPAREN          shift and go to state 98


state 49

    (117) Built_In_Declaration -> deg2rad . LPAREN params RPAREN

    LPAREN          shift and go to state 99


state 50

    (118) Built_In_Declaration -> rad2deg . LPAREN params RPAREN

    LPAREN          shift and go to state 100


state 51

    (119) Built_In_Declaration -> die . LPAREN params RPAREN

    LPAREN          shift and go to state 101


state 52

    (120) Built_In_Declaration -> exp . LPAREN params RPAREN

    LPAREN          shift and go to state 102


state 53

    (121) Built_In_Declaration -> floor . LPAREN params RPAREN

    LPAREN          shift and go to state 103


state 54

    (122) Built_In_Declaration -> isset . LPAREN params RPAREN

    LPAREN          shift and go to state 104


state 55

    (123) Built_In_Declaration -> list . LPAREN params RPAREN

    LPAREN          shift and go to state 105


state 56

    (124) Built_In_Declaration -> log . LPAREN params RPAREN

    LPAREN          shift and go to state 106


state 57

    (125) Built_In_Declaration -> log10 . LPAREN params RPAREN

    LPAREN          shift and go to state 107


state 58

    (126) Built_In_Declaration -> max . LPAREN params RPAREN

    LPAREN          shift and go to state 108


state 59

    (127) Built_In_Declaration -> min . LPAREN params RPAREN

    LPAREN          shift and go to state 109


state 60

    (128) Built_In_Declaration -> rand . LPAREN params RPAREN

    LPAREN          shift and go to state 110


state 61

    (129) Built_In_Declaration -> round . LPAREN params RPAREN

    LPAREN          shift and go to state 111


state 62

    (130) Built_In_Declaration -> sin . LPAREN params RPAREN

    LPAREN          shift and go to state 112


state 63

    (131) Built_In_Declaration -> sqrt . LPAREN params RPAREN

    LPAREN          shift and go to state 113


state 64

    (132) Built_In_Declaration -> unset . LPAREN params RPAREN

    LPAREN          shift and go to state 114


state 65

    (5) declaration_list -> declaration_list declaration .

    COMMENT         reduce using rule 5 (declaration_list -> declaration_list declaration .)
    COMMENT_HASHTAG reduce using rule 5 (declaration_list -> declaration_list declaration .)
    COMMENT_MULTI   reduce using rule 5 (declaration_list -> declaration_list declaration .)
    empty           reduce using rule 5 (declaration_list -> declaration_list declaration .)
    include         reduce using rule 5 (declaration_list -> declaration_list declaration .)
    const           reduce using rule 5 (declaration_list -> declaration_list declaration .)
    print           reduce using rule 5 (declaration_list -> declaration_list declaration .)
    echo            reduce using rule 5 (declaration_list -> declaration_list declaration .)
    while           reduce using rule 5 (declaration_list -> declaration_list declaration .)
    if              reduce using rule 5 (declaration_list -> declaration_list declaration .)
    function        reduce using rule 5 (declaration_list -> declaration_list declaration .)
    ID              reduce using rule 5 (declaration_list -> declaration_list declaration .)
    class           reduce using rule 5 (declaration_list -> declaration_list declaration .)
    new             reduce using rule 5 (declaration_list -> declaration_list declaration .)
    CLOSE_TAG       reduce using rule 5 (declaration_list -> declaration_list declaration .)
    for             reduce using rule 5 (declaration_list -> declaration_list declaration .)
    foreach         reduce using rule 5 (declaration_list -> declaration_list declaration .)
    exit            reduce using rule 5 (declaration_list -> declaration_list declaration .)
    VARIABLE        reduce using rule 5 (declaration_list -> declaration_list declaration .)
    array           reduce using rule 5 (declaration_list -> declaration_list declaration .)
    pow             reduce using rule 5 (declaration_list -> declaration_list declaration .)
    POW             reduce using rule 5 (declaration_list -> declaration_list declaration .)
    abs             reduce using rule 5 (declaration_list -> declaration_list declaration .)
    cos             reduce using rule 5 (declaration_list -> declaration_list declaration .)
    deg2rad         reduce using rule 5 (declaration_list -> declaration_list declaration .)
    rad2deg         reduce using rule 5 (declaration_list -> declaration_list declaration .)
    die             reduce using rule 5 (declaration_list -> declaration_list declaration .)
    exp             reduce using rule 5 (declaration_list -> declaration_list declaration .)
    floor           reduce using rule 5 (declaration_list -> declaration_list declaration .)
    isset           reduce using rule 5 (declaration_list -> declaration_list declaration .)
    list            reduce using rule 5 (declaration_list -> declaration_list declaration .)
    log             reduce using rule 5 (declaration_list -> declaration_list declaration .)
    log10           reduce using rule 5 (declaration_list -> declaration_list declaration .)
    max             reduce using rule 5 (declaration_list -> declaration_list declaration .)
    min             reduce using rule 5 (declaration_list -> declaration_list declaration .)
    rand            reduce using rule 5 (declaration_list -> declaration_list declaration .)
    round           reduce using rule 5 (declaration_list -> declaration_list declaration .)
    sin             reduce using rule 5 (declaration_list -> declaration_list declaration .)
    sqrt            reduce using rule 5 (declaration_list -> declaration_list declaration .)
    unset           reduce using rule 5 (declaration_list -> declaration_list declaration .)
    CADENA          reduce using rule 5 (declaration_list -> declaration_list declaration .)
    $end            reduce using rule 5 (declaration_list -> declaration_list declaration .)
    RBLOCK          reduce using rule 5 (declaration_list -> declaration_list declaration .)


state 66

    (27) header_declaration -> include CADENA . SEMICOLON

    SEMICOLON       shift and go to state 115


state 67

    (134) Concatenar_Cadenas_declaration -> CADENA DOT . CADENA
    (135) Concatenar_Cadenas_declaration -> CADENA DOT . VARIABLE

    CADENA          shift and go to state 116
    VARIABLE        shift and go to state 117


state 68

    (37) var_declaration -> var_declaration2 SEMICOLON .

    COMMENT         reduce using rule 37 (var_declaration -> var_declaration2 SEMICOLON .)
    COMMENT_HASHTAG reduce using rule 37 (var_declaration -> var_declaration2 SEMICOLON .)
    COMMENT_MULTI   reduce using rule 37 (var_declaration -> var_declaration2 SEMICOLON .)
    empty           reduce using rule 37 (var_declaration -> var_declaration2 SEMICOLON .)
    include         reduce using rule 37 (var_declaration -> var_declaration2 SEMICOLON .)
    const           reduce using rule 37 (var_declaration -> var_declaration2 SEMICOLON .)
    print           reduce using rule 37 (var_declaration -> var_declaration2 SEMICOLON .)
    echo            reduce using rule 37 (var_declaration -> var_declaration2 SEMICOLON .)
    while           reduce using rule 37 (var_declaration -> var_declaration2 SEMICOLON .)
    if              reduce using rule 37 (var_declaration -> var_declaration2 SEMICOLON .)
    function        reduce using rule 37 (var_declaration -> var_declaration2 SEMICOLON .)
    ID              reduce using rule 37 (var_declaration -> var_declaration2 SEMICOLON .)
    class           reduce using rule 37 (var_declaration -> var_declaration2 SEMICOLON .)
    new             reduce using rule 37 (var_declaration -> var_declaration2 SEMICOLON .)
    CLOSE_TAG       reduce using rule 37 (var_declaration -> var_declaration2 SEMICOLON .)
    for             reduce using rule 37 (var_declaration -> var_declaration2 SEMICOLON .)
    foreach         reduce using rule 37 (var_declaration -> var_declaration2 SEMICOLON .)
    exit            reduce using rule 37 (var_declaration -> var_declaration2 SEMICOLON .)
    VARIABLE        reduce using rule 37 (var_declaration -> var_declaration2 SEMICOLON .)
    array           reduce using rule 37 (var_declaration -> var_declaration2 SEMICOLON .)
    pow             reduce using rule 37 (var_declaration -> var_declaration2 SEMICOLON .)
    POW             reduce using rule 37 (var_declaration -> var_declaration2 SEMICOLON .)
    abs             reduce using rule 37 (var_declaration -> var_declaration2 SEMICOLON .)
    cos             reduce using rule 37 (var_declaration -> var_declaration2 SEMICOLON .)
    deg2rad         reduce using rule 37 (var_declaration -> var_declaration2 SEMICOLON .)
    rad2deg         reduce using rule 37 (var_declaration -> var_declaration2 SEMICOLON .)
    die             reduce using rule 37 (var_declaration -> var_declaration2 SEMICOLON .)
    exp             reduce using rule 37 (var_declaration -> var_declaration2 SEMICOLON .)
    floor           reduce using rule 37 (var_declaration -> var_declaration2 SEMICOLON .)
    isset           reduce using rule 37 (var_declaration -> var_declaration2 SEMICOLON .)
    list            reduce using rule 37 (var_declaration -> var_declaration2 SEMICOLON .)
    log             reduce using rule 37 (var_declaration -> var_declaration2 SEMICOLON .)
    log10           reduce using rule 37 (var_declaration -> var_declaration2 SEMICOLON .)
    max             reduce using rule 37 (var_declaration -> var_declaration2 SEMICOLON .)
    min             reduce using rule 37 (var_declaration -> var_declaration2 SEMICOLON .)
    rand            reduce using rule 37 (var_declaration -> var_declaration2 SEMICOLON .)
    round           reduce using rule 37 (var_declaration -> var_declaration2 SEMICOLON .)
    sin             reduce using rule 37 (var_declaration -> var_declaration2 SEMICOLON .)
    sqrt            reduce using rule 37 (var_declaration -> var_declaration2 SEMICOLON .)
    unset           reduce using rule 37 (var_declaration -> var_declaration2 SEMICOLON .)
    CADENA          reduce using rule 37 (var_declaration -> var_declaration2 SEMICOLON .)
    $end            reduce using rule 37 (var_declaration -> var_declaration2 SEMICOLON .)
    RBLOCK          reduce using rule 37 (var_declaration -> var_declaration2 SEMICOLON .)


state 69

    (28) constant_declaration -> const ID . EQUAL data_type SEMICOLON

    EQUAL           shift and go to state 118


state 70

    (98) fun_call -> ID LPAREN . params RPAREN
    (101) params -> . single_param
    (102) params -> . params COMMA single_param
    (103) single_param -> . var_declaration2
    (104) single_param -> . data_type
    (105) single_param -> . empty_function
    (38) var_declaration2 -> . VARIABLE
    (39) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (40) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL CADENA
    (42) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (43) var_declaration2 -> . VARIABLE EQUAL expression
    (44) var_declaration2 -> . Built_In_Declaration
    (45) var_declaration2 -> . Concatenar_Cadenas_declaration
    (46) var_declaration2 -> . VARIABLE assignment_tail
    (47) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (25) data_type -> . NUMBER
    (26) data_type -> . CADENA
    (137) empty_function -> .
    (112) Built_In_Declaration -> . array LPAREN params RPAREN
    (113) Built_In_Declaration -> . pow LPAREN params RPAREN
    (114) Built_In_Declaration -> . POW LPAREN params RPAREN
    (115) Built_In_Declaration -> . abs LPAREN params RPAREN
    (116) Built_In_Declaration -> . cos LPAREN params RPAREN
    (117) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (118) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (119) Built_In_Declaration -> . die LPAREN params RPAREN
    (120) Built_In_Declaration -> . exp LPAREN params RPAREN
    (121) Built_In_Declaration -> . floor LPAREN params RPAREN
    (122) Built_In_Declaration -> . isset LPAREN params RPAREN
    (123) Built_In_Declaration -> . list LPAREN params RPAREN
    (124) Built_In_Declaration -> . log LPAREN params RPAREN
    (125) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (126) Built_In_Declaration -> . max LPAREN params RPAREN
    (127) Built_In_Declaration -> . min LPAREN params RPAREN
    (128) Built_In_Declaration -> . rand LPAREN params RPAREN
    (129) Built_In_Declaration -> . round LPAREN params RPAREN
    (130) Built_In_Declaration -> . sin LPAREN params RPAREN
    (131) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (132) Built_In_Declaration -> . unset LPAREN params RPAREN
    (133) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (134) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (135) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 41
    NUMBER          shift and go to state 74
    CADENA          shift and go to state 75
    RPAREN          reduce using rule 137 (empty_function -> .)
    COMMA           reduce using rule 137 (empty_function -> .)
    array           shift and go to state 44
    pow             shift and go to state 45
    POW             shift and go to state 46
    abs             shift and go to state 47
    cos             shift and go to state 48
    deg2rad         shift and go to state 49
    rad2deg         shift and go to state 50
    die             shift and go to state 51
    exp             shift and go to state 52
    floor           shift and go to state 53
    isset           shift and go to state 54
    list            shift and go to state 55
    log             shift and go to state 56
    log10           shift and go to state 57
    max             shift and go to state 58
    min             shift and go to state 59
    rand            shift and go to state 60
    round           shift and go to state 61
    sin             shift and go to state 62
    sqrt            shift and go to state 63
    unset           shift and go to state 64

    params                         shift and go to state 119
    single_param                   shift and go to state 120
    var_declaration2               shift and go to state 121
    data_type                      shift and go to state 122
    empty_function                 shift and go to state 123
    Built_In_Declaration           shift and go to state 42
    Concatenar_Cadenas_declaration shift and go to state 43

state 71

    (29) print_declaration -> print var_declaration2 . SEMICOLON

    SEMICOLON       shift and go to state 124


state 72

    (30) print_declaration -> print LPAREN . var_declaration2 RPAREN SEMICOLON
    (31) print_declaration -> print LPAREN . data_type RPAREN SEMICOLON
    (38) var_declaration2 -> . VARIABLE
    (39) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (40) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL CADENA
    (42) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (43) var_declaration2 -> . VARIABLE EQUAL expression
    (44) var_declaration2 -> . Built_In_Declaration
    (45) var_declaration2 -> . Concatenar_Cadenas_declaration
    (46) var_declaration2 -> . VARIABLE assignment_tail
    (47) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (25) data_type -> . NUMBER
    (26) data_type -> . CADENA
    (112) Built_In_Declaration -> . array LPAREN params RPAREN
    (113) Built_In_Declaration -> . pow LPAREN params RPAREN
    (114) Built_In_Declaration -> . POW LPAREN params RPAREN
    (115) Built_In_Declaration -> . abs LPAREN params RPAREN
    (116) Built_In_Declaration -> . cos LPAREN params RPAREN
    (117) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (118) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (119) Built_In_Declaration -> . die LPAREN params RPAREN
    (120) Built_In_Declaration -> . exp LPAREN params RPAREN
    (121) Built_In_Declaration -> . floor LPAREN params RPAREN
    (122) Built_In_Declaration -> . isset LPAREN params RPAREN
    (123) Built_In_Declaration -> . list LPAREN params RPAREN
    (124) Built_In_Declaration -> . log LPAREN params RPAREN
    (125) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (126) Built_In_Declaration -> . max LPAREN params RPAREN
    (127) Built_In_Declaration -> . min LPAREN params RPAREN
    (128) Built_In_Declaration -> . rand LPAREN params RPAREN
    (129) Built_In_Declaration -> . round LPAREN params RPAREN
    (130) Built_In_Declaration -> . sin LPAREN params RPAREN
    (131) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (132) Built_In_Declaration -> . unset LPAREN params RPAREN
    (133) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (134) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (135) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 41
    NUMBER          shift and go to state 74
    CADENA          shift and go to state 75
    array           shift and go to state 44
    pow             shift and go to state 45
    POW             shift and go to state 46
    abs             shift and go to state 47
    cos             shift and go to state 48
    deg2rad         shift and go to state 49
    rad2deg         shift and go to state 50
    die             shift and go to state 51
    exp             shift and go to state 52
    floor           shift and go to state 53
    isset           shift and go to state 54
    list            shift and go to state 55
    log             shift and go to state 56
    log10           shift and go to state 57
    max             shift and go to state 58
    min             shift and go to state 59
    rand            shift and go to state 60
    round           shift and go to state 61
    sin             shift and go to state 62
    sqrt            shift and go to state 63
    unset           shift and go to state 64

    var_declaration2               shift and go to state 125
    data_type                      shift and go to state 126
    Built_In_Declaration           shift and go to state 42
    Concatenar_Cadenas_declaration shift and go to state 43

state 73

    (32) print_declaration -> print data_type . SEMICOLON

    SEMICOLON       shift and go to state 127


state 74

    (25) data_type -> NUMBER .

    SEMICOLON       reduce using rule 25 (data_type -> NUMBER .)
    RPAREN          reduce using rule 25 (data_type -> NUMBER .)
    COMMA           reduce using rule 25 (data_type -> NUMBER .)
    RBRACKET        reduce using rule 25 (data_type -> NUMBER .)
    RBLOCK          reduce using rule 25 (data_type -> NUMBER .)


state 75

    (26) data_type -> CADENA .
    (134) Concatenar_Cadenas_declaration -> CADENA . DOT CADENA
    (135) Concatenar_Cadenas_declaration -> CADENA . DOT VARIABLE

    SEMICOLON       reduce using rule 26 (data_type -> CADENA .)
    RPAREN          reduce using rule 26 (data_type -> CADENA .)
    COMMA           reduce using rule 26 (data_type -> CADENA .)
    RBRACKET        reduce using rule 26 (data_type -> CADENA .)
    RBLOCK          reduce using rule 26 (data_type -> CADENA .)
    DOT             shift and go to state 67


state 76

    (33) echo_declaration -> echo var_declaration2 . SEMICOLON

    SEMICOLON       shift and go to state 128


state 77

    (34) echo_declaration -> echo LPAREN . var_declaration2 RPAREN SEMICOLON
    (35) echo_declaration -> echo LPAREN . data_type RPAREN SEMICOLON
    (38) var_declaration2 -> . VARIABLE
    (39) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (40) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL CADENA
    (42) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (43) var_declaration2 -> . VARIABLE EQUAL expression
    (44) var_declaration2 -> . Built_In_Declaration
    (45) var_declaration2 -> . Concatenar_Cadenas_declaration
    (46) var_declaration2 -> . VARIABLE assignment_tail
    (47) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (25) data_type -> . NUMBER
    (26) data_type -> . CADENA
    (112) Built_In_Declaration -> . array LPAREN params RPAREN
    (113) Built_In_Declaration -> . pow LPAREN params RPAREN
    (114) Built_In_Declaration -> . POW LPAREN params RPAREN
    (115) Built_In_Declaration -> . abs LPAREN params RPAREN
    (116) Built_In_Declaration -> . cos LPAREN params RPAREN
    (117) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (118) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (119) Built_In_Declaration -> . die LPAREN params RPAREN
    (120) Built_In_Declaration -> . exp LPAREN params RPAREN
    (121) Built_In_Declaration -> . floor LPAREN params RPAREN
    (122) Built_In_Declaration -> . isset LPAREN params RPAREN
    (123) Built_In_Declaration -> . list LPAREN params RPAREN
    (124) Built_In_Declaration -> . log LPAREN params RPAREN
    (125) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (126) Built_In_Declaration -> . max LPAREN params RPAREN
    (127) Built_In_Declaration -> . min LPAREN params RPAREN
    (128) Built_In_Declaration -> . rand LPAREN params RPAREN
    (129) Built_In_Declaration -> . round LPAREN params RPAREN
    (130) Built_In_Declaration -> . sin LPAREN params RPAREN
    (131) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (132) Built_In_Declaration -> . unset LPAREN params RPAREN
    (133) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (134) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (135) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 41
    NUMBER          shift and go to state 74
    CADENA          shift and go to state 75
    array           shift and go to state 44
    pow             shift and go to state 45
    POW             shift and go to state 46
    abs             shift and go to state 47
    cos             shift and go to state 48
    deg2rad         shift and go to state 49
    rad2deg         shift and go to state 50
    die             shift and go to state 51
    exp             shift and go to state 52
    floor           shift and go to state 53
    isset           shift and go to state 54
    list            shift and go to state 55
    log             shift and go to state 56
    log10           shift and go to state 57
    max             shift and go to state 58
    min             shift and go to state 59
    rand            shift and go to state 60
    round           shift and go to state 61
    sin             shift and go to state 62
    sqrt            shift and go to state 63
    unset           shift and go to state 64

    var_declaration2               shift and go to state 129
    data_type                      shift and go to state 130
    Built_In_Declaration           shift and go to state 42
    Concatenar_Cadenas_declaration shift and go to state 43

state 78

    (36) echo_declaration -> echo data_type . SEMICOLON

    SEMICOLON       shift and go to state 131


state 79

    (54) iteration_stmt -> while LPAREN . expression RPAREN LBLOCK declaration RBLOCK
    (55) expression -> . additive_expression
    (56) expression -> . additive_expression logical_op additive_expression
    (57) expression -> . additive_expression comp_op additive_expression
    (58) expression -> . additive_expression comp_op additive_expression logical_op additive_expression comp_op additive_expression
    (59) additive_expression -> . term
    (60) additive_expression -> . term math_op term
    (61) term -> . factor
    (62) term -> . factor increment_decrement_op
    (63) term -> . increment_decrement_op factor
    (64) factor -> . NUMBER
    (65) factor -> . VARIABLE
    (66) factor -> . LPAREN expression RPAREN
    (67) increment_decrement_op -> . PLUSPLUS
    (68) increment_decrement_op -> . MINUSMINUS

    NUMBER          shift and go to state 138
    VARIABLE        shift and go to state 139
    LPAREN          shift and go to state 132
    PLUSPLUS        shift and go to state 140
    MINUSMINUS      shift and go to state 141

    expression                     shift and go to state 133
    additive_expression            shift and go to state 134
    term                           shift and go to state 135
    factor                         shift and go to state 136
    increment_decrement_op         shift and go to state 137

state 80

    (92) if_statement -> if LPAREN . expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (55) expression -> . additive_expression
    (56) expression -> . additive_expression logical_op additive_expression
    (57) expression -> . additive_expression comp_op additive_expression
    (58) expression -> . additive_expression comp_op additive_expression logical_op additive_expression comp_op additive_expression
    (59) additive_expression -> . term
    (60) additive_expression -> . term math_op term
    (61) term -> . factor
    (62) term -> . factor increment_decrement_op
    (63) term -> . increment_decrement_op factor
    (64) factor -> . NUMBER
    (65) factor -> . VARIABLE
    (66) factor -> . LPAREN expression RPAREN
    (67) increment_decrement_op -> . PLUSPLUS
    (68) increment_decrement_op -> . MINUSMINUS

    NUMBER          shift and go to state 138
    VARIABLE        shift and go to state 139
    LPAREN          shift and go to state 132
    PLUSPLUS        shift and go to state 140
    MINUSMINUS      shift and go to state 141

    expression                     shift and go to state 142
    additive_expression            shift and go to state 134
    term                           shift and go to state 135
    factor                         shift and go to state 136
    increment_decrement_op         shift and go to state 137

state 81

    (97) fun_declaration -> function ID . LPAREN params RPAREN LBLOCK declaration RBLOCK

    LPAREN          shift and go to state 143


state 82

    (99) obj_declaration -> class ID . LBLOCK declaration RBLOCK

    LBLOCK          shift and go to state 144


state 83

    (100) create_obj_declaration -> new ID . LPAREN params RPAREN

    LPAREN          shift and go to state 145


state 84

    (106) for_loop -> for LPAREN . for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK
    (107) for_init -> . var_declaration2 SEMICOLON
    (38) var_declaration2 -> . VARIABLE
    (39) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (40) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL CADENA
    (42) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (43) var_declaration2 -> . VARIABLE EQUAL expression
    (44) var_declaration2 -> . Built_In_Declaration
    (45) var_declaration2 -> . Concatenar_Cadenas_declaration
    (46) var_declaration2 -> . VARIABLE assignment_tail
    (47) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (112) Built_In_Declaration -> . array LPAREN params RPAREN
    (113) Built_In_Declaration -> . pow LPAREN params RPAREN
    (114) Built_In_Declaration -> . POW LPAREN params RPAREN
    (115) Built_In_Declaration -> . abs LPAREN params RPAREN
    (116) Built_In_Declaration -> . cos LPAREN params RPAREN
    (117) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (118) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (119) Built_In_Declaration -> . die LPAREN params RPAREN
    (120) Built_In_Declaration -> . exp LPAREN params RPAREN
    (121) Built_In_Declaration -> . floor LPAREN params RPAREN
    (122) Built_In_Declaration -> . isset LPAREN params RPAREN
    (123) Built_In_Declaration -> . list LPAREN params RPAREN
    (124) Built_In_Declaration -> . log LPAREN params RPAREN
    (125) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (126) Built_In_Declaration -> . max LPAREN params RPAREN
    (127) Built_In_Declaration -> . min LPAREN params RPAREN
    (128) Built_In_Declaration -> . rand LPAREN params RPAREN
    (129) Built_In_Declaration -> . round LPAREN params RPAREN
    (130) Built_In_Declaration -> . sin LPAREN params RPAREN
    (131) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (132) Built_In_Declaration -> . unset LPAREN params RPAREN
    (133) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (134) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (135) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 41
    array           shift and go to state 44
    pow             shift and go to state 45
    POW             shift and go to state 46
    abs             shift and go to state 47
    cos             shift and go to state 48
    deg2rad         shift and go to state 49
    rad2deg         shift and go to state 50
    die             shift and go to state 51
    exp             shift and go to state 52
    floor           shift and go to state 53
    isset           shift and go to state 54
    list            shift and go to state 55
    log             shift and go to state 56
    log10           shift and go to state 57
    max             shift and go to state 58
    min             shift and go to state 59
    rand            shift and go to state 60
    round           shift and go to state 61
    sin             shift and go to state 62
    sqrt            shift and go to state 63
    unset           shift and go to state 64
    CADENA          shift and go to state 26

    for_init                       shift and go to state 146
    var_declaration2               shift and go to state 147
    Built_In_Declaration           shift and go to state 42
    Concatenar_Cadenas_declaration shift and go to state 43

state 85

    (111) foreach_loop -> foreach LPAREN . expression as expression RPAREN LBLOCK declaration_list RBLOCK
    (55) expression -> . additive_expression
    (56) expression -> . additive_expression logical_op additive_expression
    (57) expression -> . additive_expression comp_op additive_expression
    (58) expression -> . additive_expression comp_op additive_expression logical_op additive_expression comp_op additive_expression
    (59) additive_expression -> . term
    (60) additive_expression -> . term math_op term
    (61) term -> . factor
    (62) term -> . factor increment_decrement_op
    (63) term -> . increment_decrement_op factor
    (64) factor -> . NUMBER
    (65) factor -> . VARIABLE
    (66) factor -> . LPAREN expression RPAREN
    (67) increment_decrement_op -> . PLUSPLUS
    (68) increment_decrement_op -> . MINUSMINUS

    NUMBER          shift and go to state 138
    VARIABLE        shift and go to state 139
    LPAREN          shift and go to state 132
    PLUSPLUS        shift and go to state 140
    MINUSMINUS      shift and go to state 141

    expression                     shift and go to state 148
    additive_expression            shift and go to state 134
    term                           shift and go to state 135
    factor                         shift and go to state 136
    increment_decrement_op         shift and go to state 137

state 86

    (110) exit_statement -> exit LPAREN . expression RPAREN SEMICOLON
    (55) expression -> . additive_expression
    (56) expression -> . additive_expression logical_op additive_expression
    (57) expression -> . additive_expression comp_op additive_expression
    (58) expression -> . additive_expression comp_op additive_expression logical_op additive_expression comp_op additive_expression
    (59) additive_expression -> . term
    (60) additive_expression -> . term math_op term
    (61) term -> . factor
    (62) term -> . factor increment_decrement_op
    (63) term -> . increment_decrement_op factor
    (64) factor -> . NUMBER
    (65) factor -> . VARIABLE
    (66) factor -> . LPAREN expression RPAREN
    (67) increment_decrement_op -> . PLUSPLUS
    (68) increment_decrement_op -> . MINUSMINUS

    NUMBER          shift and go to state 138
    VARIABLE        shift and go to state 139
    LPAREN          shift and go to state 132
    PLUSPLUS        shift and go to state 140
    MINUSMINUS      shift and go to state 141

    expression                     shift and go to state 149
    additive_expression            shift and go to state 134
    term                           shift and go to state 135
    factor                         shift and go to state 136
    increment_decrement_op         shift and go to state 137

state 87

    (51) assignment_tail -> VARIABLE . LBRACKET expression COMMA params
    (52) assignment_tail -> VARIABLE . LBRACKET params RBRACKET
    (53) assignment_tail -> VARIABLE . LBLOCK params RBLOCK

    LBRACKET        shift and go to state 150
    LBLOCK          shift and go to state 151


state 88

    (39) var_declaration2 -> VARIABLE EQUAL . NUMBER
    (40) var_declaration2 -> VARIABLE EQUAL . VARIABLE
    (41) var_declaration2 -> VARIABLE EQUAL . CADENA
    (42) var_declaration2 -> VARIABLE EQUAL . Built_In_Declaration
    (43) var_declaration2 -> VARIABLE EQUAL . expression
    (47) var_declaration2 -> VARIABLE EQUAL . assignment_tail
    (112) Built_In_Declaration -> . array LPAREN params RPAREN
    (113) Built_In_Declaration -> . pow LPAREN params RPAREN
    (114) Built_In_Declaration -> . POW LPAREN params RPAREN
    (115) Built_In_Declaration -> . abs LPAREN params RPAREN
    (116) Built_In_Declaration -> . cos LPAREN params RPAREN
    (117) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (118) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (119) Built_In_Declaration -> . die LPAREN params RPAREN
    (120) Built_In_Declaration -> . exp LPAREN params RPAREN
    (121) Built_In_Declaration -> . floor LPAREN params RPAREN
    (122) Built_In_Declaration -> . isset LPAREN params RPAREN
    (123) Built_In_Declaration -> . list LPAREN params RPAREN
    (124) Built_In_Declaration -> . log LPAREN params RPAREN
    (125) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (126) Built_In_Declaration -> . max LPAREN params RPAREN
    (127) Built_In_Declaration -> . min LPAREN params RPAREN
    (128) Built_In_Declaration -> . rand LPAREN params RPAREN
    (129) Built_In_Declaration -> . round LPAREN params RPAREN
    (130) Built_In_Declaration -> . sin LPAREN params RPAREN
    (131) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (132) Built_In_Declaration -> . unset LPAREN params RPAREN
    (55) expression -> . additive_expression
    (56) expression -> . additive_expression logical_op additive_expression
    (57) expression -> . additive_expression comp_op additive_expression
    (58) expression -> . additive_expression comp_op additive_expression logical_op additive_expression comp_op additive_expression
    (48) assignment_tail -> . COMMA var_declaration2
    (49) assignment_tail -> . LBRACKET params RBRACKET
    (50) assignment_tail -> . LBLOCK params RBLOCK
    (51) assignment_tail -> . VARIABLE LBRACKET expression COMMA params
    (52) assignment_tail -> . VARIABLE LBRACKET params RBRACKET
    (53) assignment_tail -> . VARIABLE LBLOCK params RBLOCK
    (59) additive_expression -> . term
    (60) additive_expression -> . term math_op term
    (61) term -> . factor
    (62) term -> . factor increment_decrement_op
    (63) term -> . increment_decrement_op factor
    (64) factor -> . NUMBER
    (65) factor -> . VARIABLE
    (66) factor -> . LPAREN expression RPAREN
    (67) increment_decrement_op -> . PLUSPLUS
    (68) increment_decrement_op -> . MINUSMINUS

    NUMBER          shift and go to state 153
    VARIABLE        shift and go to state 152
    CADENA          shift and go to state 154
    array           shift and go to state 44
    pow             shift and go to state 45
    POW             shift and go to state 46
    abs             shift and go to state 47
    cos             shift and go to state 48
    deg2rad         shift and go to state 49
    rad2deg         shift and go to state 50
    die             shift and go to state 51
    exp             shift and go to state 52
    floor           shift and go to state 53
    isset           shift and go to state 54
    list            shift and go to state 55
    log             shift and go to state 56
    log10           shift and go to state 57
    max             shift and go to state 58
    min             shift and go to state 59
    rand            shift and go to state 60
    round           shift and go to state 61
    sin             shift and go to state 62
    sqrt            shift and go to state 63
    unset           shift and go to state 64
    COMMA           shift and go to state 91
    LBRACKET        shift and go to state 92
    LBLOCK          shift and go to state 93
    LPAREN          shift and go to state 132
    PLUSPLUS        shift and go to state 140
    MINUSMINUS      shift and go to state 141

    Built_In_Declaration           shift and go to state 155
    expression                     shift and go to state 156
    assignment_tail                shift and go to state 157
    additive_expression            shift and go to state 134
    term                           shift and go to state 135
    factor                         shift and go to state 136
    increment_decrement_op         shift and go to state 137

state 89

    (46) var_declaration2 -> VARIABLE assignment_tail .

    SEMICOLON       reduce using rule 46 (var_declaration2 -> VARIABLE assignment_tail .)
    RPAREN          reduce using rule 46 (var_declaration2 -> VARIABLE assignment_tail .)
    COMMA           reduce using rule 46 (var_declaration2 -> VARIABLE assignment_tail .)
    RBRACKET        reduce using rule 46 (var_declaration2 -> VARIABLE assignment_tail .)
    RBLOCK          reduce using rule 46 (var_declaration2 -> VARIABLE assignment_tail .)


state 90

    (133) Concatenar_Cadenas_declaration -> VARIABLE DOT . VARIABLE
    (136) Concatenar_Cadenas_declaration -> VARIABLE DOT . CADENA

    VARIABLE        shift and go to state 158
    CADENA          shift and go to state 159


state 91

    (48) assignment_tail -> COMMA . var_declaration2
    (38) var_declaration2 -> . VARIABLE
    (39) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (40) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL CADENA
    (42) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (43) var_declaration2 -> . VARIABLE EQUAL expression
    (44) var_declaration2 -> . Built_In_Declaration
    (45) var_declaration2 -> . Concatenar_Cadenas_declaration
    (46) var_declaration2 -> . VARIABLE assignment_tail
    (47) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (112) Built_In_Declaration -> . array LPAREN params RPAREN
    (113) Built_In_Declaration -> . pow LPAREN params RPAREN
    (114) Built_In_Declaration -> . POW LPAREN params RPAREN
    (115) Built_In_Declaration -> . abs LPAREN params RPAREN
    (116) Built_In_Declaration -> . cos LPAREN params RPAREN
    (117) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (118) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (119) Built_In_Declaration -> . die LPAREN params RPAREN
    (120) Built_In_Declaration -> . exp LPAREN params RPAREN
    (121) Built_In_Declaration -> . floor LPAREN params RPAREN
    (122) Built_In_Declaration -> . isset LPAREN params RPAREN
    (123) Built_In_Declaration -> . list LPAREN params RPAREN
    (124) Built_In_Declaration -> . log LPAREN params RPAREN
    (125) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (126) Built_In_Declaration -> . max LPAREN params RPAREN
    (127) Built_In_Declaration -> . min LPAREN params RPAREN
    (128) Built_In_Declaration -> . rand LPAREN params RPAREN
    (129) Built_In_Declaration -> . round LPAREN params RPAREN
    (130) Built_In_Declaration -> . sin LPAREN params RPAREN
    (131) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (132) Built_In_Declaration -> . unset LPAREN params RPAREN
    (133) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (134) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (135) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 41
    array           shift and go to state 44
    pow             shift and go to state 45
    POW             shift and go to state 46
    abs             shift and go to state 47
    cos             shift and go to state 48
    deg2rad         shift and go to state 49
    rad2deg         shift and go to state 50
    die             shift and go to state 51
    exp             shift and go to state 52
    floor           shift and go to state 53
    isset           shift and go to state 54
    list            shift and go to state 55
    log             shift and go to state 56
    log10           shift and go to state 57
    max             shift and go to state 58
    min             shift and go to state 59
    rand            shift and go to state 60
    round           shift and go to state 61
    sin             shift and go to state 62
    sqrt            shift and go to state 63
    unset           shift and go to state 64
    CADENA          shift and go to state 26

    var_declaration2               shift and go to state 160
    Built_In_Declaration           shift and go to state 42
    Concatenar_Cadenas_declaration shift and go to state 43

state 92

    (49) assignment_tail -> LBRACKET . params RBRACKET
    (101) params -> . single_param
    (102) params -> . params COMMA single_param
    (103) single_param -> . var_declaration2
    (104) single_param -> . data_type
    (105) single_param -> . empty_function
    (38) var_declaration2 -> . VARIABLE
    (39) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (40) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL CADENA
    (42) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (43) var_declaration2 -> . VARIABLE EQUAL expression
    (44) var_declaration2 -> . Built_In_Declaration
    (45) var_declaration2 -> . Concatenar_Cadenas_declaration
    (46) var_declaration2 -> . VARIABLE assignment_tail
    (47) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (25) data_type -> . NUMBER
    (26) data_type -> . CADENA
    (137) empty_function -> .
    (112) Built_In_Declaration -> . array LPAREN params RPAREN
    (113) Built_In_Declaration -> . pow LPAREN params RPAREN
    (114) Built_In_Declaration -> . POW LPAREN params RPAREN
    (115) Built_In_Declaration -> . abs LPAREN params RPAREN
    (116) Built_In_Declaration -> . cos LPAREN params RPAREN
    (117) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (118) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (119) Built_In_Declaration -> . die LPAREN params RPAREN
    (120) Built_In_Declaration -> . exp LPAREN params RPAREN
    (121) Built_In_Declaration -> . floor LPAREN params RPAREN
    (122) Built_In_Declaration -> . isset LPAREN params RPAREN
    (123) Built_In_Declaration -> . list LPAREN params RPAREN
    (124) Built_In_Declaration -> . log LPAREN params RPAREN
    (125) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (126) Built_In_Declaration -> . max LPAREN params RPAREN
    (127) Built_In_Declaration -> . min LPAREN params RPAREN
    (128) Built_In_Declaration -> . rand LPAREN params RPAREN
    (129) Built_In_Declaration -> . round LPAREN params RPAREN
    (130) Built_In_Declaration -> . sin LPAREN params RPAREN
    (131) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (132) Built_In_Declaration -> . unset LPAREN params RPAREN
    (133) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (134) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (135) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 41
    NUMBER          shift and go to state 74
    CADENA          shift and go to state 75
    RBRACKET        reduce using rule 137 (empty_function -> .)
    COMMA           reduce using rule 137 (empty_function -> .)
    array           shift and go to state 44
    pow             shift and go to state 45
    POW             shift and go to state 46
    abs             shift and go to state 47
    cos             shift and go to state 48
    deg2rad         shift and go to state 49
    rad2deg         shift and go to state 50
    die             shift and go to state 51
    exp             shift and go to state 52
    floor           shift and go to state 53
    isset           shift and go to state 54
    list            shift and go to state 55
    log             shift and go to state 56
    log10           shift and go to state 57
    max             shift and go to state 58
    min             shift and go to state 59
    rand            shift and go to state 60
    round           shift and go to state 61
    sin             shift and go to state 62
    sqrt            shift and go to state 63
    unset           shift and go to state 64

    params                         shift and go to state 161
    single_param                   shift and go to state 120
    var_declaration2               shift and go to state 121
    data_type                      shift and go to state 122
    empty_function                 shift and go to state 123
    Built_In_Declaration           shift and go to state 42
    Concatenar_Cadenas_declaration shift and go to state 43

state 93

    (50) assignment_tail -> LBLOCK . params RBLOCK
    (101) params -> . single_param
    (102) params -> . params COMMA single_param
    (103) single_param -> . var_declaration2
    (104) single_param -> . data_type
    (105) single_param -> . empty_function
    (38) var_declaration2 -> . VARIABLE
    (39) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (40) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL CADENA
    (42) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (43) var_declaration2 -> . VARIABLE EQUAL expression
    (44) var_declaration2 -> . Built_In_Declaration
    (45) var_declaration2 -> . Concatenar_Cadenas_declaration
    (46) var_declaration2 -> . VARIABLE assignment_tail
    (47) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (25) data_type -> . NUMBER
    (26) data_type -> . CADENA
    (137) empty_function -> .
    (112) Built_In_Declaration -> . array LPAREN params RPAREN
    (113) Built_In_Declaration -> . pow LPAREN params RPAREN
    (114) Built_In_Declaration -> . POW LPAREN params RPAREN
    (115) Built_In_Declaration -> . abs LPAREN params RPAREN
    (116) Built_In_Declaration -> . cos LPAREN params RPAREN
    (117) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (118) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (119) Built_In_Declaration -> . die LPAREN params RPAREN
    (120) Built_In_Declaration -> . exp LPAREN params RPAREN
    (121) Built_In_Declaration -> . floor LPAREN params RPAREN
    (122) Built_In_Declaration -> . isset LPAREN params RPAREN
    (123) Built_In_Declaration -> . list LPAREN params RPAREN
    (124) Built_In_Declaration -> . log LPAREN params RPAREN
    (125) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (126) Built_In_Declaration -> . max LPAREN params RPAREN
    (127) Built_In_Declaration -> . min LPAREN params RPAREN
    (128) Built_In_Declaration -> . rand LPAREN params RPAREN
    (129) Built_In_Declaration -> . round LPAREN params RPAREN
    (130) Built_In_Declaration -> . sin LPAREN params RPAREN
    (131) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (132) Built_In_Declaration -> . unset LPAREN params RPAREN
    (133) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (134) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (135) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 41
    NUMBER          shift and go to state 74
    CADENA          shift and go to state 75
    RBLOCK          reduce using rule 137 (empty_function -> .)
    COMMA           reduce using rule 137 (empty_function -> .)
    array           shift and go to state 44
    pow             shift and go to state 45
    POW             shift and go to state 46
    abs             shift and go to state 47
    cos             shift and go to state 48
    deg2rad         shift and go to state 49
    rad2deg         shift and go to state 50
    die             shift and go to state 51
    exp             shift and go to state 52
    floor           shift and go to state 53
    isset           shift and go to state 54
    list            shift and go to state 55
    log             shift and go to state 56
    log10           shift and go to state 57
    max             shift and go to state 58
    min             shift and go to state 59
    rand            shift and go to state 60
    round           shift and go to state 61
    sin             shift and go to state 62
    sqrt            shift and go to state 63
    unset           shift and go to state 64

    params                         shift and go to state 162
    single_param                   shift and go to state 120
    var_declaration2               shift and go to state 121
    data_type                      shift and go to state 122
    empty_function                 shift and go to state 123
    Built_In_Declaration           shift and go to state 42
    Concatenar_Cadenas_declaration shift and go to state 43

state 94

    (112) Built_In_Declaration -> array LPAREN . params RPAREN
    (101) params -> . single_param
    (102) params -> . params COMMA single_param
    (103) single_param -> . var_declaration2
    (104) single_param -> . data_type
    (105) single_param -> . empty_function
    (38) var_declaration2 -> . VARIABLE
    (39) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (40) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL CADENA
    (42) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (43) var_declaration2 -> . VARIABLE EQUAL expression
    (44) var_declaration2 -> . Built_In_Declaration
    (45) var_declaration2 -> . Concatenar_Cadenas_declaration
    (46) var_declaration2 -> . VARIABLE assignment_tail
    (47) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (25) data_type -> . NUMBER
    (26) data_type -> . CADENA
    (137) empty_function -> .
    (112) Built_In_Declaration -> . array LPAREN params RPAREN
    (113) Built_In_Declaration -> . pow LPAREN params RPAREN
    (114) Built_In_Declaration -> . POW LPAREN params RPAREN
    (115) Built_In_Declaration -> . abs LPAREN params RPAREN
    (116) Built_In_Declaration -> . cos LPAREN params RPAREN
    (117) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (118) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (119) Built_In_Declaration -> . die LPAREN params RPAREN
    (120) Built_In_Declaration -> . exp LPAREN params RPAREN
    (121) Built_In_Declaration -> . floor LPAREN params RPAREN
    (122) Built_In_Declaration -> . isset LPAREN params RPAREN
    (123) Built_In_Declaration -> . list LPAREN params RPAREN
    (124) Built_In_Declaration -> . log LPAREN params RPAREN
    (125) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (126) Built_In_Declaration -> . max LPAREN params RPAREN
    (127) Built_In_Declaration -> . min LPAREN params RPAREN
    (128) Built_In_Declaration -> . rand LPAREN params RPAREN
    (129) Built_In_Declaration -> . round LPAREN params RPAREN
    (130) Built_In_Declaration -> . sin LPAREN params RPAREN
    (131) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (132) Built_In_Declaration -> . unset LPAREN params RPAREN
    (133) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (134) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (135) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 41
    NUMBER          shift and go to state 74
    CADENA          shift and go to state 75
    RPAREN          reduce using rule 137 (empty_function -> .)
    COMMA           reduce using rule 137 (empty_function -> .)
    array           shift and go to state 44
    pow             shift and go to state 45
    POW             shift and go to state 46
    abs             shift and go to state 47
    cos             shift and go to state 48
    deg2rad         shift and go to state 49
    rad2deg         shift and go to state 50
    die             shift and go to state 51
    exp             shift and go to state 52
    floor           shift and go to state 53
    isset           shift and go to state 54
    list            shift and go to state 55
    log             shift and go to state 56
    log10           shift and go to state 57
    max             shift and go to state 58
    min             shift and go to state 59
    rand            shift and go to state 60
    round           shift and go to state 61
    sin             shift and go to state 62
    sqrt            shift and go to state 63
    unset           shift and go to state 64

    params                         shift and go to state 163
    single_param                   shift and go to state 120
    var_declaration2               shift and go to state 121
    data_type                      shift and go to state 122
    empty_function                 shift and go to state 123
    Built_In_Declaration           shift and go to state 42
    Concatenar_Cadenas_declaration shift and go to state 43

state 95

    (113) Built_In_Declaration -> pow LPAREN . params RPAREN
    (101) params -> . single_param
    (102) params -> . params COMMA single_param
    (103) single_param -> . var_declaration2
    (104) single_param -> . data_type
    (105) single_param -> . empty_function
    (38) var_declaration2 -> . VARIABLE
    (39) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (40) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL CADENA
    (42) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (43) var_declaration2 -> . VARIABLE EQUAL expression
    (44) var_declaration2 -> . Built_In_Declaration
    (45) var_declaration2 -> . Concatenar_Cadenas_declaration
    (46) var_declaration2 -> . VARIABLE assignment_tail
    (47) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (25) data_type -> . NUMBER
    (26) data_type -> . CADENA
    (137) empty_function -> .
    (112) Built_In_Declaration -> . array LPAREN params RPAREN
    (113) Built_In_Declaration -> . pow LPAREN params RPAREN
    (114) Built_In_Declaration -> . POW LPAREN params RPAREN
    (115) Built_In_Declaration -> . abs LPAREN params RPAREN
    (116) Built_In_Declaration -> . cos LPAREN params RPAREN
    (117) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (118) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (119) Built_In_Declaration -> . die LPAREN params RPAREN
    (120) Built_In_Declaration -> . exp LPAREN params RPAREN
    (121) Built_In_Declaration -> . floor LPAREN params RPAREN
    (122) Built_In_Declaration -> . isset LPAREN params RPAREN
    (123) Built_In_Declaration -> . list LPAREN params RPAREN
    (124) Built_In_Declaration -> . log LPAREN params RPAREN
    (125) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (126) Built_In_Declaration -> . max LPAREN params RPAREN
    (127) Built_In_Declaration -> . min LPAREN params RPAREN
    (128) Built_In_Declaration -> . rand LPAREN params RPAREN
    (129) Built_In_Declaration -> . round LPAREN params RPAREN
    (130) Built_In_Declaration -> . sin LPAREN params RPAREN
    (131) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (132) Built_In_Declaration -> . unset LPAREN params RPAREN
    (133) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (134) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (135) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 41
    NUMBER          shift and go to state 74
    CADENA          shift and go to state 75
    RPAREN          reduce using rule 137 (empty_function -> .)
    COMMA           reduce using rule 137 (empty_function -> .)
    array           shift and go to state 44
    pow             shift and go to state 45
    POW             shift and go to state 46
    abs             shift and go to state 47
    cos             shift and go to state 48
    deg2rad         shift and go to state 49
    rad2deg         shift and go to state 50
    die             shift and go to state 51
    exp             shift and go to state 52
    floor           shift and go to state 53
    isset           shift and go to state 54
    list            shift and go to state 55
    log             shift and go to state 56
    log10           shift and go to state 57
    max             shift and go to state 58
    min             shift and go to state 59
    rand            shift and go to state 60
    round           shift and go to state 61
    sin             shift and go to state 62
    sqrt            shift and go to state 63
    unset           shift and go to state 64

    params                         shift and go to state 164
    single_param                   shift and go to state 120
    var_declaration2               shift and go to state 121
    data_type                      shift and go to state 122
    empty_function                 shift and go to state 123
    Built_In_Declaration           shift and go to state 42
    Concatenar_Cadenas_declaration shift and go to state 43

state 96

    (114) Built_In_Declaration -> POW LPAREN . params RPAREN
    (101) params -> . single_param
    (102) params -> . params COMMA single_param
    (103) single_param -> . var_declaration2
    (104) single_param -> . data_type
    (105) single_param -> . empty_function
    (38) var_declaration2 -> . VARIABLE
    (39) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (40) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL CADENA
    (42) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (43) var_declaration2 -> . VARIABLE EQUAL expression
    (44) var_declaration2 -> . Built_In_Declaration
    (45) var_declaration2 -> . Concatenar_Cadenas_declaration
    (46) var_declaration2 -> . VARIABLE assignment_tail
    (47) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (25) data_type -> . NUMBER
    (26) data_type -> . CADENA
    (137) empty_function -> .
    (112) Built_In_Declaration -> . array LPAREN params RPAREN
    (113) Built_In_Declaration -> . pow LPAREN params RPAREN
    (114) Built_In_Declaration -> . POW LPAREN params RPAREN
    (115) Built_In_Declaration -> . abs LPAREN params RPAREN
    (116) Built_In_Declaration -> . cos LPAREN params RPAREN
    (117) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (118) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (119) Built_In_Declaration -> . die LPAREN params RPAREN
    (120) Built_In_Declaration -> . exp LPAREN params RPAREN
    (121) Built_In_Declaration -> . floor LPAREN params RPAREN
    (122) Built_In_Declaration -> . isset LPAREN params RPAREN
    (123) Built_In_Declaration -> . list LPAREN params RPAREN
    (124) Built_In_Declaration -> . log LPAREN params RPAREN
    (125) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (126) Built_In_Declaration -> . max LPAREN params RPAREN
    (127) Built_In_Declaration -> . min LPAREN params RPAREN
    (128) Built_In_Declaration -> . rand LPAREN params RPAREN
    (129) Built_In_Declaration -> . round LPAREN params RPAREN
    (130) Built_In_Declaration -> . sin LPAREN params RPAREN
    (131) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (132) Built_In_Declaration -> . unset LPAREN params RPAREN
    (133) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (134) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (135) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 41
    NUMBER          shift and go to state 74
    CADENA          shift and go to state 75
    RPAREN          reduce using rule 137 (empty_function -> .)
    COMMA           reduce using rule 137 (empty_function -> .)
    array           shift and go to state 44
    pow             shift and go to state 45
    POW             shift and go to state 46
    abs             shift and go to state 47
    cos             shift and go to state 48
    deg2rad         shift and go to state 49
    rad2deg         shift and go to state 50
    die             shift and go to state 51
    exp             shift and go to state 52
    floor           shift and go to state 53
    isset           shift and go to state 54
    list            shift and go to state 55
    log             shift and go to state 56
    log10           shift and go to state 57
    max             shift and go to state 58
    min             shift and go to state 59
    rand            shift and go to state 60
    round           shift and go to state 61
    sin             shift and go to state 62
    sqrt            shift and go to state 63
    unset           shift and go to state 64

    params                         shift and go to state 165
    single_param                   shift and go to state 120
    var_declaration2               shift and go to state 121
    data_type                      shift and go to state 122
    empty_function                 shift and go to state 123
    Built_In_Declaration           shift and go to state 42
    Concatenar_Cadenas_declaration shift and go to state 43

state 97

    (115) Built_In_Declaration -> abs LPAREN . params RPAREN
    (101) params -> . single_param
    (102) params -> . params COMMA single_param
    (103) single_param -> . var_declaration2
    (104) single_param -> . data_type
    (105) single_param -> . empty_function
    (38) var_declaration2 -> . VARIABLE
    (39) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (40) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL CADENA
    (42) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (43) var_declaration2 -> . VARIABLE EQUAL expression
    (44) var_declaration2 -> . Built_In_Declaration
    (45) var_declaration2 -> . Concatenar_Cadenas_declaration
    (46) var_declaration2 -> . VARIABLE assignment_tail
    (47) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (25) data_type -> . NUMBER
    (26) data_type -> . CADENA
    (137) empty_function -> .
    (112) Built_In_Declaration -> . array LPAREN params RPAREN
    (113) Built_In_Declaration -> . pow LPAREN params RPAREN
    (114) Built_In_Declaration -> . POW LPAREN params RPAREN
    (115) Built_In_Declaration -> . abs LPAREN params RPAREN
    (116) Built_In_Declaration -> . cos LPAREN params RPAREN
    (117) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (118) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (119) Built_In_Declaration -> . die LPAREN params RPAREN
    (120) Built_In_Declaration -> . exp LPAREN params RPAREN
    (121) Built_In_Declaration -> . floor LPAREN params RPAREN
    (122) Built_In_Declaration -> . isset LPAREN params RPAREN
    (123) Built_In_Declaration -> . list LPAREN params RPAREN
    (124) Built_In_Declaration -> . log LPAREN params RPAREN
    (125) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (126) Built_In_Declaration -> . max LPAREN params RPAREN
    (127) Built_In_Declaration -> . min LPAREN params RPAREN
    (128) Built_In_Declaration -> . rand LPAREN params RPAREN
    (129) Built_In_Declaration -> . round LPAREN params RPAREN
    (130) Built_In_Declaration -> . sin LPAREN params RPAREN
    (131) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (132) Built_In_Declaration -> . unset LPAREN params RPAREN
    (133) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (134) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (135) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 41
    NUMBER          shift and go to state 74
    CADENA          shift and go to state 75
    RPAREN          reduce using rule 137 (empty_function -> .)
    COMMA           reduce using rule 137 (empty_function -> .)
    array           shift and go to state 44
    pow             shift and go to state 45
    POW             shift and go to state 46
    abs             shift and go to state 47
    cos             shift and go to state 48
    deg2rad         shift and go to state 49
    rad2deg         shift and go to state 50
    die             shift and go to state 51
    exp             shift and go to state 52
    floor           shift and go to state 53
    isset           shift and go to state 54
    list            shift and go to state 55
    log             shift and go to state 56
    log10           shift and go to state 57
    max             shift and go to state 58
    min             shift and go to state 59
    rand            shift and go to state 60
    round           shift and go to state 61
    sin             shift and go to state 62
    sqrt            shift and go to state 63
    unset           shift and go to state 64

    params                         shift and go to state 166
    single_param                   shift and go to state 120
    var_declaration2               shift and go to state 121
    data_type                      shift and go to state 122
    empty_function                 shift and go to state 123
    Built_In_Declaration           shift and go to state 42
    Concatenar_Cadenas_declaration shift and go to state 43

state 98

    (116) Built_In_Declaration -> cos LPAREN . params RPAREN
    (101) params -> . single_param
    (102) params -> . params COMMA single_param
    (103) single_param -> . var_declaration2
    (104) single_param -> . data_type
    (105) single_param -> . empty_function
    (38) var_declaration2 -> . VARIABLE
    (39) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (40) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL CADENA
    (42) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (43) var_declaration2 -> . VARIABLE EQUAL expression
    (44) var_declaration2 -> . Built_In_Declaration
    (45) var_declaration2 -> . Concatenar_Cadenas_declaration
    (46) var_declaration2 -> . VARIABLE assignment_tail
    (47) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (25) data_type -> . NUMBER
    (26) data_type -> . CADENA
    (137) empty_function -> .
    (112) Built_In_Declaration -> . array LPAREN params RPAREN
    (113) Built_In_Declaration -> . pow LPAREN params RPAREN
    (114) Built_In_Declaration -> . POW LPAREN params RPAREN
    (115) Built_In_Declaration -> . abs LPAREN params RPAREN
    (116) Built_In_Declaration -> . cos LPAREN params RPAREN
    (117) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (118) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (119) Built_In_Declaration -> . die LPAREN params RPAREN
    (120) Built_In_Declaration -> . exp LPAREN params RPAREN
    (121) Built_In_Declaration -> . floor LPAREN params RPAREN
    (122) Built_In_Declaration -> . isset LPAREN params RPAREN
    (123) Built_In_Declaration -> . list LPAREN params RPAREN
    (124) Built_In_Declaration -> . log LPAREN params RPAREN
    (125) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (126) Built_In_Declaration -> . max LPAREN params RPAREN
    (127) Built_In_Declaration -> . min LPAREN params RPAREN
    (128) Built_In_Declaration -> . rand LPAREN params RPAREN
    (129) Built_In_Declaration -> . round LPAREN params RPAREN
    (130) Built_In_Declaration -> . sin LPAREN params RPAREN
    (131) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (132) Built_In_Declaration -> . unset LPAREN params RPAREN
    (133) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (134) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (135) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 41
    NUMBER          shift and go to state 74
    CADENA          shift and go to state 75
    RPAREN          reduce using rule 137 (empty_function -> .)
    COMMA           reduce using rule 137 (empty_function -> .)
    array           shift and go to state 44
    pow             shift and go to state 45
    POW             shift and go to state 46
    abs             shift and go to state 47
    cos             shift and go to state 48
    deg2rad         shift and go to state 49
    rad2deg         shift and go to state 50
    die             shift and go to state 51
    exp             shift and go to state 52
    floor           shift and go to state 53
    isset           shift and go to state 54
    list            shift and go to state 55
    log             shift and go to state 56
    log10           shift and go to state 57
    max             shift and go to state 58
    min             shift and go to state 59
    rand            shift and go to state 60
    round           shift and go to state 61
    sin             shift and go to state 62
    sqrt            shift and go to state 63
    unset           shift and go to state 64

    params                         shift and go to state 167
    single_param                   shift and go to state 120
    var_declaration2               shift and go to state 121
    data_type                      shift and go to state 122
    empty_function                 shift and go to state 123
    Built_In_Declaration           shift and go to state 42
    Concatenar_Cadenas_declaration shift and go to state 43

state 99

    (117) Built_In_Declaration -> deg2rad LPAREN . params RPAREN
    (101) params -> . single_param
    (102) params -> . params COMMA single_param
    (103) single_param -> . var_declaration2
    (104) single_param -> . data_type
    (105) single_param -> . empty_function
    (38) var_declaration2 -> . VARIABLE
    (39) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (40) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL CADENA
    (42) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (43) var_declaration2 -> . VARIABLE EQUAL expression
    (44) var_declaration2 -> . Built_In_Declaration
    (45) var_declaration2 -> . Concatenar_Cadenas_declaration
    (46) var_declaration2 -> . VARIABLE assignment_tail
    (47) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (25) data_type -> . NUMBER
    (26) data_type -> . CADENA
    (137) empty_function -> .
    (112) Built_In_Declaration -> . array LPAREN params RPAREN
    (113) Built_In_Declaration -> . pow LPAREN params RPAREN
    (114) Built_In_Declaration -> . POW LPAREN params RPAREN
    (115) Built_In_Declaration -> . abs LPAREN params RPAREN
    (116) Built_In_Declaration -> . cos LPAREN params RPAREN
    (117) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (118) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (119) Built_In_Declaration -> . die LPAREN params RPAREN
    (120) Built_In_Declaration -> . exp LPAREN params RPAREN
    (121) Built_In_Declaration -> . floor LPAREN params RPAREN
    (122) Built_In_Declaration -> . isset LPAREN params RPAREN
    (123) Built_In_Declaration -> . list LPAREN params RPAREN
    (124) Built_In_Declaration -> . log LPAREN params RPAREN
    (125) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (126) Built_In_Declaration -> . max LPAREN params RPAREN
    (127) Built_In_Declaration -> . min LPAREN params RPAREN
    (128) Built_In_Declaration -> . rand LPAREN params RPAREN
    (129) Built_In_Declaration -> . round LPAREN params RPAREN
    (130) Built_In_Declaration -> . sin LPAREN params RPAREN
    (131) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (132) Built_In_Declaration -> . unset LPAREN params RPAREN
    (133) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (134) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (135) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 41
    NUMBER          shift and go to state 74
    CADENA          shift and go to state 75
    RPAREN          reduce using rule 137 (empty_function -> .)
    COMMA           reduce using rule 137 (empty_function -> .)
    array           shift and go to state 44
    pow             shift and go to state 45
    POW             shift and go to state 46
    abs             shift and go to state 47
    cos             shift and go to state 48
    deg2rad         shift and go to state 49
    rad2deg         shift and go to state 50
    die             shift and go to state 51
    exp             shift and go to state 52
    floor           shift and go to state 53
    isset           shift and go to state 54
    list            shift and go to state 55
    log             shift and go to state 56
    log10           shift and go to state 57
    max             shift and go to state 58
    min             shift and go to state 59
    rand            shift and go to state 60
    round           shift and go to state 61
    sin             shift and go to state 62
    sqrt            shift and go to state 63
    unset           shift and go to state 64

    params                         shift and go to state 168
    single_param                   shift and go to state 120
    var_declaration2               shift and go to state 121
    data_type                      shift and go to state 122
    empty_function                 shift and go to state 123
    Built_In_Declaration           shift and go to state 42
    Concatenar_Cadenas_declaration shift and go to state 43

state 100

    (118) Built_In_Declaration -> rad2deg LPAREN . params RPAREN
    (101) params -> . single_param
    (102) params -> . params COMMA single_param
    (103) single_param -> . var_declaration2
    (104) single_param -> . data_type
    (105) single_param -> . empty_function
    (38) var_declaration2 -> . VARIABLE
    (39) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (40) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL CADENA
    (42) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (43) var_declaration2 -> . VARIABLE EQUAL expression
    (44) var_declaration2 -> . Built_In_Declaration
    (45) var_declaration2 -> . Concatenar_Cadenas_declaration
    (46) var_declaration2 -> . VARIABLE assignment_tail
    (47) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (25) data_type -> . NUMBER
    (26) data_type -> . CADENA
    (137) empty_function -> .
    (112) Built_In_Declaration -> . array LPAREN params RPAREN
    (113) Built_In_Declaration -> . pow LPAREN params RPAREN
    (114) Built_In_Declaration -> . POW LPAREN params RPAREN
    (115) Built_In_Declaration -> . abs LPAREN params RPAREN
    (116) Built_In_Declaration -> . cos LPAREN params RPAREN
    (117) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (118) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (119) Built_In_Declaration -> . die LPAREN params RPAREN
    (120) Built_In_Declaration -> . exp LPAREN params RPAREN
    (121) Built_In_Declaration -> . floor LPAREN params RPAREN
    (122) Built_In_Declaration -> . isset LPAREN params RPAREN
    (123) Built_In_Declaration -> . list LPAREN params RPAREN
    (124) Built_In_Declaration -> . log LPAREN params RPAREN
    (125) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (126) Built_In_Declaration -> . max LPAREN params RPAREN
    (127) Built_In_Declaration -> . min LPAREN params RPAREN
    (128) Built_In_Declaration -> . rand LPAREN params RPAREN
    (129) Built_In_Declaration -> . round LPAREN params RPAREN
    (130) Built_In_Declaration -> . sin LPAREN params RPAREN
    (131) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (132) Built_In_Declaration -> . unset LPAREN params RPAREN
    (133) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (134) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (135) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 41
    NUMBER          shift and go to state 74
    CADENA          shift and go to state 75
    RPAREN          reduce using rule 137 (empty_function -> .)
    COMMA           reduce using rule 137 (empty_function -> .)
    array           shift and go to state 44
    pow             shift and go to state 45
    POW             shift and go to state 46
    abs             shift and go to state 47
    cos             shift and go to state 48
    deg2rad         shift and go to state 49
    rad2deg         shift and go to state 50
    die             shift and go to state 51
    exp             shift and go to state 52
    floor           shift and go to state 53
    isset           shift and go to state 54
    list            shift and go to state 55
    log             shift and go to state 56
    log10           shift and go to state 57
    max             shift and go to state 58
    min             shift and go to state 59
    rand            shift and go to state 60
    round           shift and go to state 61
    sin             shift and go to state 62
    sqrt            shift and go to state 63
    unset           shift and go to state 64

    params                         shift and go to state 169
    single_param                   shift and go to state 120
    var_declaration2               shift and go to state 121
    data_type                      shift and go to state 122
    empty_function                 shift and go to state 123
    Built_In_Declaration           shift and go to state 42
    Concatenar_Cadenas_declaration shift and go to state 43

state 101

    (119) Built_In_Declaration -> die LPAREN . params RPAREN
    (101) params -> . single_param
    (102) params -> . params COMMA single_param
    (103) single_param -> . var_declaration2
    (104) single_param -> . data_type
    (105) single_param -> . empty_function
    (38) var_declaration2 -> . VARIABLE
    (39) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (40) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL CADENA
    (42) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (43) var_declaration2 -> . VARIABLE EQUAL expression
    (44) var_declaration2 -> . Built_In_Declaration
    (45) var_declaration2 -> . Concatenar_Cadenas_declaration
    (46) var_declaration2 -> . VARIABLE assignment_tail
    (47) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (25) data_type -> . NUMBER
    (26) data_type -> . CADENA
    (137) empty_function -> .
    (112) Built_In_Declaration -> . array LPAREN params RPAREN
    (113) Built_In_Declaration -> . pow LPAREN params RPAREN
    (114) Built_In_Declaration -> . POW LPAREN params RPAREN
    (115) Built_In_Declaration -> . abs LPAREN params RPAREN
    (116) Built_In_Declaration -> . cos LPAREN params RPAREN
    (117) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (118) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (119) Built_In_Declaration -> . die LPAREN params RPAREN
    (120) Built_In_Declaration -> . exp LPAREN params RPAREN
    (121) Built_In_Declaration -> . floor LPAREN params RPAREN
    (122) Built_In_Declaration -> . isset LPAREN params RPAREN
    (123) Built_In_Declaration -> . list LPAREN params RPAREN
    (124) Built_In_Declaration -> . log LPAREN params RPAREN
    (125) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (126) Built_In_Declaration -> . max LPAREN params RPAREN
    (127) Built_In_Declaration -> . min LPAREN params RPAREN
    (128) Built_In_Declaration -> . rand LPAREN params RPAREN
    (129) Built_In_Declaration -> . round LPAREN params RPAREN
    (130) Built_In_Declaration -> . sin LPAREN params RPAREN
    (131) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (132) Built_In_Declaration -> . unset LPAREN params RPAREN
    (133) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (134) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (135) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 41
    NUMBER          shift and go to state 74
    CADENA          shift and go to state 75
    RPAREN          reduce using rule 137 (empty_function -> .)
    COMMA           reduce using rule 137 (empty_function -> .)
    array           shift and go to state 44
    pow             shift and go to state 45
    POW             shift and go to state 46
    abs             shift and go to state 47
    cos             shift and go to state 48
    deg2rad         shift and go to state 49
    rad2deg         shift and go to state 50
    die             shift and go to state 51
    exp             shift and go to state 52
    floor           shift and go to state 53
    isset           shift and go to state 54
    list            shift and go to state 55
    log             shift and go to state 56
    log10           shift and go to state 57
    max             shift and go to state 58
    min             shift and go to state 59
    rand            shift and go to state 60
    round           shift and go to state 61
    sin             shift and go to state 62
    sqrt            shift and go to state 63
    unset           shift and go to state 64

    params                         shift and go to state 170
    single_param                   shift and go to state 120
    var_declaration2               shift and go to state 121
    data_type                      shift and go to state 122
    empty_function                 shift and go to state 123
    Built_In_Declaration           shift and go to state 42
    Concatenar_Cadenas_declaration shift and go to state 43

state 102

    (120) Built_In_Declaration -> exp LPAREN . params RPAREN
    (101) params -> . single_param
    (102) params -> . params COMMA single_param
    (103) single_param -> . var_declaration2
    (104) single_param -> . data_type
    (105) single_param -> . empty_function
    (38) var_declaration2 -> . VARIABLE
    (39) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (40) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL CADENA
    (42) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (43) var_declaration2 -> . VARIABLE EQUAL expression
    (44) var_declaration2 -> . Built_In_Declaration
    (45) var_declaration2 -> . Concatenar_Cadenas_declaration
    (46) var_declaration2 -> . VARIABLE assignment_tail
    (47) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (25) data_type -> . NUMBER
    (26) data_type -> . CADENA
    (137) empty_function -> .
    (112) Built_In_Declaration -> . array LPAREN params RPAREN
    (113) Built_In_Declaration -> . pow LPAREN params RPAREN
    (114) Built_In_Declaration -> . POW LPAREN params RPAREN
    (115) Built_In_Declaration -> . abs LPAREN params RPAREN
    (116) Built_In_Declaration -> . cos LPAREN params RPAREN
    (117) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (118) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (119) Built_In_Declaration -> . die LPAREN params RPAREN
    (120) Built_In_Declaration -> . exp LPAREN params RPAREN
    (121) Built_In_Declaration -> . floor LPAREN params RPAREN
    (122) Built_In_Declaration -> . isset LPAREN params RPAREN
    (123) Built_In_Declaration -> . list LPAREN params RPAREN
    (124) Built_In_Declaration -> . log LPAREN params RPAREN
    (125) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (126) Built_In_Declaration -> . max LPAREN params RPAREN
    (127) Built_In_Declaration -> . min LPAREN params RPAREN
    (128) Built_In_Declaration -> . rand LPAREN params RPAREN
    (129) Built_In_Declaration -> . round LPAREN params RPAREN
    (130) Built_In_Declaration -> . sin LPAREN params RPAREN
    (131) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (132) Built_In_Declaration -> . unset LPAREN params RPAREN
    (133) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (134) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (135) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 41
    NUMBER          shift and go to state 74
    CADENA          shift and go to state 75
    RPAREN          reduce using rule 137 (empty_function -> .)
    COMMA           reduce using rule 137 (empty_function -> .)
    array           shift and go to state 44
    pow             shift and go to state 45
    POW             shift and go to state 46
    abs             shift and go to state 47
    cos             shift and go to state 48
    deg2rad         shift and go to state 49
    rad2deg         shift and go to state 50
    die             shift and go to state 51
    exp             shift and go to state 52
    floor           shift and go to state 53
    isset           shift and go to state 54
    list            shift and go to state 55
    log             shift and go to state 56
    log10           shift and go to state 57
    max             shift and go to state 58
    min             shift and go to state 59
    rand            shift and go to state 60
    round           shift and go to state 61
    sin             shift and go to state 62
    sqrt            shift and go to state 63
    unset           shift and go to state 64

    params                         shift and go to state 171
    single_param                   shift and go to state 120
    var_declaration2               shift and go to state 121
    data_type                      shift and go to state 122
    empty_function                 shift and go to state 123
    Built_In_Declaration           shift and go to state 42
    Concatenar_Cadenas_declaration shift and go to state 43

state 103

    (121) Built_In_Declaration -> floor LPAREN . params RPAREN
    (101) params -> . single_param
    (102) params -> . params COMMA single_param
    (103) single_param -> . var_declaration2
    (104) single_param -> . data_type
    (105) single_param -> . empty_function
    (38) var_declaration2 -> . VARIABLE
    (39) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (40) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL CADENA
    (42) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (43) var_declaration2 -> . VARIABLE EQUAL expression
    (44) var_declaration2 -> . Built_In_Declaration
    (45) var_declaration2 -> . Concatenar_Cadenas_declaration
    (46) var_declaration2 -> . VARIABLE assignment_tail
    (47) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (25) data_type -> . NUMBER
    (26) data_type -> . CADENA
    (137) empty_function -> .
    (112) Built_In_Declaration -> . array LPAREN params RPAREN
    (113) Built_In_Declaration -> . pow LPAREN params RPAREN
    (114) Built_In_Declaration -> . POW LPAREN params RPAREN
    (115) Built_In_Declaration -> . abs LPAREN params RPAREN
    (116) Built_In_Declaration -> . cos LPAREN params RPAREN
    (117) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (118) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (119) Built_In_Declaration -> . die LPAREN params RPAREN
    (120) Built_In_Declaration -> . exp LPAREN params RPAREN
    (121) Built_In_Declaration -> . floor LPAREN params RPAREN
    (122) Built_In_Declaration -> . isset LPAREN params RPAREN
    (123) Built_In_Declaration -> . list LPAREN params RPAREN
    (124) Built_In_Declaration -> . log LPAREN params RPAREN
    (125) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (126) Built_In_Declaration -> . max LPAREN params RPAREN
    (127) Built_In_Declaration -> . min LPAREN params RPAREN
    (128) Built_In_Declaration -> . rand LPAREN params RPAREN
    (129) Built_In_Declaration -> . round LPAREN params RPAREN
    (130) Built_In_Declaration -> . sin LPAREN params RPAREN
    (131) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (132) Built_In_Declaration -> . unset LPAREN params RPAREN
    (133) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (134) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (135) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 41
    NUMBER          shift and go to state 74
    CADENA          shift and go to state 75
    RPAREN          reduce using rule 137 (empty_function -> .)
    COMMA           reduce using rule 137 (empty_function -> .)
    array           shift and go to state 44
    pow             shift and go to state 45
    POW             shift and go to state 46
    abs             shift and go to state 47
    cos             shift and go to state 48
    deg2rad         shift and go to state 49
    rad2deg         shift and go to state 50
    die             shift and go to state 51
    exp             shift and go to state 52
    floor           shift and go to state 53
    isset           shift and go to state 54
    list            shift and go to state 55
    log             shift and go to state 56
    log10           shift and go to state 57
    max             shift and go to state 58
    min             shift and go to state 59
    rand            shift and go to state 60
    round           shift and go to state 61
    sin             shift and go to state 62
    sqrt            shift and go to state 63
    unset           shift and go to state 64

    params                         shift and go to state 172
    single_param                   shift and go to state 120
    var_declaration2               shift and go to state 121
    data_type                      shift and go to state 122
    empty_function                 shift and go to state 123
    Built_In_Declaration           shift and go to state 42
    Concatenar_Cadenas_declaration shift and go to state 43

state 104

    (122) Built_In_Declaration -> isset LPAREN . params RPAREN
    (101) params -> . single_param
    (102) params -> . params COMMA single_param
    (103) single_param -> . var_declaration2
    (104) single_param -> . data_type
    (105) single_param -> . empty_function
    (38) var_declaration2 -> . VARIABLE
    (39) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (40) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL CADENA
    (42) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (43) var_declaration2 -> . VARIABLE EQUAL expression
    (44) var_declaration2 -> . Built_In_Declaration
    (45) var_declaration2 -> . Concatenar_Cadenas_declaration
    (46) var_declaration2 -> . VARIABLE assignment_tail
    (47) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (25) data_type -> . NUMBER
    (26) data_type -> . CADENA
    (137) empty_function -> .
    (112) Built_In_Declaration -> . array LPAREN params RPAREN
    (113) Built_In_Declaration -> . pow LPAREN params RPAREN
    (114) Built_In_Declaration -> . POW LPAREN params RPAREN
    (115) Built_In_Declaration -> . abs LPAREN params RPAREN
    (116) Built_In_Declaration -> . cos LPAREN params RPAREN
    (117) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (118) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (119) Built_In_Declaration -> . die LPAREN params RPAREN
    (120) Built_In_Declaration -> . exp LPAREN params RPAREN
    (121) Built_In_Declaration -> . floor LPAREN params RPAREN
    (122) Built_In_Declaration -> . isset LPAREN params RPAREN
    (123) Built_In_Declaration -> . list LPAREN params RPAREN
    (124) Built_In_Declaration -> . log LPAREN params RPAREN
    (125) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (126) Built_In_Declaration -> . max LPAREN params RPAREN
    (127) Built_In_Declaration -> . min LPAREN params RPAREN
    (128) Built_In_Declaration -> . rand LPAREN params RPAREN
    (129) Built_In_Declaration -> . round LPAREN params RPAREN
    (130) Built_In_Declaration -> . sin LPAREN params RPAREN
    (131) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (132) Built_In_Declaration -> . unset LPAREN params RPAREN
    (133) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (134) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (135) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 41
    NUMBER          shift and go to state 74
    CADENA          shift and go to state 75
    RPAREN          reduce using rule 137 (empty_function -> .)
    COMMA           reduce using rule 137 (empty_function -> .)
    array           shift and go to state 44
    pow             shift and go to state 45
    POW             shift and go to state 46
    abs             shift and go to state 47
    cos             shift and go to state 48
    deg2rad         shift and go to state 49
    rad2deg         shift and go to state 50
    die             shift and go to state 51
    exp             shift and go to state 52
    floor           shift and go to state 53
    isset           shift and go to state 54
    list            shift and go to state 55
    log             shift and go to state 56
    log10           shift and go to state 57
    max             shift and go to state 58
    min             shift and go to state 59
    rand            shift and go to state 60
    round           shift and go to state 61
    sin             shift and go to state 62
    sqrt            shift and go to state 63
    unset           shift and go to state 64

    params                         shift and go to state 173
    single_param                   shift and go to state 120
    var_declaration2               shift and go to state 121
    data_type                      shift and go to state 122
    empty_function                 shift and go to state 123
    Built_In_Declaration           shift and go to state 42
    Concatenar_Cadenas_declaration shift and go to state 43

state 105

    (123) Built_In_Declaration -> list LPAREN . params RPAREN
    (101) params -> . single_param
    (102) params -> . params COMMA single_param
    (103) single_param -> . var_declaration2
    (104) single_param -> . data_type
    (105) single_param -> . empty_function
    (38) var_declaration2 -> . VARIABLE
    (39) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (40) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL CADENA
    (42) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (43) var_declaration2 -> . VARIABLE EQUAL expression
    (44) var_declaration2 -> . Built_In_Declaration
    (45) var_declaration2 -> . Concatenar_Cadenas_declaration
    (46) var_declaration2 -> . VARIABLE assignment_tail
    (47) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (25) data_type -> . NUMBER
    (26) data_type -> . CADENA
    (137) empty_function -> .
    (112) Built_In_Declaration -> . array LPAREN params RPAREN
    (113) Built_In_Declaration -> . pow LPAREN params RPAREN
    (114) Built_In_Declaration -> . POW LPAREN params RPAREN
    (115) Built_In_Declaration -> . abs LPAREN params RPAREN
    (116) Built_In_Declaration -> . cos LPAREN params RPAREN
    (117) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (118) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (119) Built_In_Declaration -> . die LPAREN params RPAREN
    (120) Built_In_Declaration -> . exp LPAREN params RPAREN
    (121) Built_In_Declaration -> . floor LPAREN params RPAREN
    (122) Built_In_Declaration -> . isset LPAREN params RPAREN
    (123) Built_In_Declaration -> . list LPAREN params RPAREN
    (124) Built_In_Declaration -> . log LPAREN params RPAREN
    (125) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (126) Built_In_Declaration -> . max LPAREN params RPAREN
    (127) Built_In_Declaration -> . min LPAREN params RPAREN
    (128) Built_In_Declaration -> . rand LPAREN params RPAREN
    (129) Built_In_Declaration -> . round LPAREN params RPAREN
    (130) Built_In_Declaration -> . sin LPAREN params RPAREN
    (131) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (132) Built_In_Declaration -> . unset LPAREN params RPAREN
    (133) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (134) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (135) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 41
    NUMBER          shift and go to state 74
    CADENA          shift and go to state 75
    RPAREN          reduce using rule 137 (empty_function -> .)
    COMMA           reduce using rule 137 (empty_function -> .)
    array           shift and go to state 44
    pow             shift and go to state 45
    POW             shift and go to state 46
    abs             shift and go to state 47
    cos             shift and go to state 48
    deg2rad         shift and go to state 49
    rad2deg         shift and go to state 50
    die             shift and go to state 51
    exp             shift and go to state 52
    floor           shift and go to state 53
    isset           shift and go to state 54
    list            shift and go to state 55
    log             shift and go to state 56
    log10           shift and go to state 57
    max             shift and go to state 58
    min             shift and go to state 59
    rand            shift and go to state 60
    round           shift and go to state 61
    sin             shift and go to state 62
    sqrt            shift and go to state 63
    unset           shift and go to state 64

    params                         shift and go to state 174
    single_param                   shift and go to state 120
    var_declaration2               shift and go to state 121
    data_type                      shift and go to state 122
    empty_function                 shift and go to state 123
    Built_In_Declaration           shift and go to state 42
    Concatenar_Cadenas_declaration shift and go to state 43

state 106

    (124) Built_In_Declaration -> log LPAREN . params RPAREN
    (101) params -> . single_param
    (102) params -> . params COMMA single_param
    (103) single_param -> . var_declaration2
    (104) single_param -> . data_type
    (105) single_param -> . empty_function
    (38) var_declaration2 -> . VARIABLE
    (39) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (40) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL CADENA
    (42) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (43) var_declaration2 -> . VARIABLE EQUAL expression
    (44) var_declaration2 -> . Built_In_Declaration
    (45) var_declaration2 -> . Concatenar_Cadenas_declaration
    (46) var_declaration2 -> . VARIABLE assignment_tail
    (47) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (25) data_type -> . NUMBER
    (26) data_type -> . CADENA
    (137) empty_function -> .
    (112) Built_In_Declaration -> . array LPAREN params RPAREN
    (113) Built_In_Declaration -> . pow LPAREN params RPAREN
    (114) Built_In_Declaration -> . POW LPAREN params RPAREN
    (115) Built_In_Declaration -> . abs LPAREN params RPAREN
    (116) Built_In_Declaration -> . cos LPAREN params RPAREN
    (117) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (118) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (119) Built_In_Declaration -> . die LPAREN params RPAREN
    (120) Built_In_Declaration -> . exp LPAREN params RPAREN
    (121) Built_In_Declaration -> . floor LPAREN params RPAREN
    (122) Built_In_Declaration -> . isset LPAREN params RPAREN
    (123) Built_In_Declaration -> . list LPAREN params RPAREN
    (124) Built_In_Declaration -> . log LPAREN params RPAREN
    (125) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (126) Built_In_Declaration -> . max LPAREN params RPAREN
    (127) Built_In_Declaration -> . min LPAREN params RPAREN
    (128) Built_In_Declaration -> . rand LPAREN params RPAREN
    (129) Built_In_Declaration -> . round LPAREN params RPAREN
    (130) Built_In_Declaration -> . sin LPAREN params RPAREN
    (131) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (132) Built_In_Declaration -> . unset LPAREN params RPAREN
    (133) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (134) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (135) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 41
    NUMBER          shift and go to state 74
    CADENA          shift and go to state 75
    RPAREN          reduce using rule 137 (empty_function -> .)
    COMMA           reduce using rule 137 (empty_function -> .)
    array           shift and go to state 44
    pow             shift and go to state 45
    POW             shift and go to state 46
    abs             shift and go to state 47
    cos             shift and go to state 48
    deg2rad         shift and go to state 49
    rad2deg         shift and go to state 50
    die             shift and go to state 51
    exp             shift and go to state 52
    floor           shift and go to state 53
    isset           shift and go to state 54
    list            shift and go to state 55
    log             shift and go to state 56
    log10           shift and go to state 57
    max             shift and go to state 58
    min             shift and go to state 59
    rand            shift and go to state 60
    round           shift and go to state 61
    sin             shift and go to state 62
    sqrt            shift and go to state 63
    unset           shift and go to state 64

    params                         shift and go to state 175
    single_param                   shift and go to state 120
    var_declaration2               shift and go to state 121
    data_type                      shift and go to state 122
    empty_function                 shift and go to state 123
    Built_In_Declaration           shift and go to state 42
    Concatenar_Cadenas_declaration shift and go to state 43

state 107

    (125) Built_In_Declaration -> log10 LPAREN . params RPAREN
    (101) params -> . single_param
    (102) params -> . params COMMA single_param
    (103) single_param -> . var_declaration2
    (104) single_param -> . data_type
    (105) single_param -> . empty_function
    (38) var_declaration2 -> . VARIABLE
    (39) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (40) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL CADENA
    (42) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (43) var_declaration2 -> . VARIABLE EQUAL expression
    (44) var_declaration2 -> . Built_In_Declaration
    (45) var_declaration2 -> . Concatenar_Cadenas_declaration
    (46) var_declaration2 -> . VARIABLE assignment_tail
    (47) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (25) data_type -> . NUMBER
    (26) data_type -> . CADENA
    (137) empty_function -> .
    (112) Built_In_Declaration -> . array LPAREN params RPAREN
    (113) Built_In_Declaration -> . pow LPAREN params RPAREN
    (114) Built_In_Declaration -> . POW LPAREN params RPAREN
    (115) Built_In_Declaration -> . abs LPAREN params RPAREN
    (116) Built_In_Declaration -> . cos LPAREN params RPAREN
    (117) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (118) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (119) Built_In_Declaration -> . die LPAREN params RPAREN
    (120) Built_In_Declaration -> . exp LPAREN params RPAREN
    (121) Built_In_Declaration -> . floor LPAREN params RPAREN
    (122) Built_In_Declaration -> . isset LPAREN params RPAREN
    (123) Built_In_Declaration -> . list LPAREN params RPAREN
    (124) Built_In_Declaration -> . log LPAREN params RPAREN
    (125) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (126) Built_In_Declaration -> . max LPAREN params RPAREN
    (127) Built_In_Declaration -> . min LPAREN params RPAREN
    (128) Built_In_Declaration -> . rand LPAREN params RPAREN
    (129) Built_In_Declaration -> . round LPAREN params RPAREN
    (130) Built_In_Declaration -> . sin LPAREN params RPAREN
    (131) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (132) Built_In_Declaration -> . unset LPAREN params RPAREN
    (133) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (134) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (135) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 41
    NUMBER          shift and go to state 74
    CADENA          shift and go to state 75
    RPAREN          reduce using rule 137 (empty_function -> .)
    COMMA           reduce using rule 137 (empty_function -> .)
    array           shift and go to state 44
    pow             shift and go to state 45
    POW             shift and go to state 46
    abs             shift and go to state 47
    cos             shift and go to state 48
    deg2rad         shift and go to state 49
    rad2deg         shift and go to state 50
    die             shift and go to state 51
    exp             shift and go to state 52
    floor           shift and go to state 53
    isset           shift and go to state 54
    list            shift and go to state 55
    log             shift and go to state 56
    log10           shift and go to state 57
    max             shift and go to state 58
    min             shift and go to state 59
    rand            shift and go to state 60
    round           shift and go to state 61
    sin             shift and go to state 62
    sqrt            shift and go to state 63
    unset           shift and go to state 64

    params                         shift and go to state 176
    single_param                   shift and go to state 120
    var_declaration2               shift and go to state 121
    data_type                      shift and go to state 122
    empty_function                 shift and go to state 123
    Built_In_Declaration           shift and go to state 42
    Concatenar_Cadenas_declaration shift and go to state 43

state 108

    (126) Built_In_Declaration -> max LPAREN . params RPAREN
    (101) params -> . single_param
    (102) params -> . params COMMA single_param
    (103) single_param -> . var_declaration2
    (104) single_param -> . data_type
    (105) single_param -> . empty_function
    (38) var_declaration2 -> . VARIABLE
    (39) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (40) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL CADENA
    (42) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (43) var_declaration2 -> . VARIABLE EQUAL expression
    (44) var_declaration2 -> . Built_In_Declaration
    (45) var_declaration2 -> . Concatenar_Cadenas_declaration
    (46) var_declaration2 -> . VARIABLE assignment_tail
    (47) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (25) data_type -> . NUMBER
    (26) data_type -> . CADENA
    (137) empty_function -> .
    (112) Built_In_Declaration -> . array LPAREN params RPAREN
    (113) Built_In_Declaration -> . pow LPAREN params RPAREN
    (114) Built_In_Declaration -> . POW LPAREN params RPAREN
    (115) Built_In_Declaration -> . abs LPAREN params RPAREN
    (116) Built_In_Declaration -> . cos LPAREN params RPAREN
    (117) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (118) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (119) Built_In_Declaration -> . die LPAREN params RPAREN
    (120) Built_In_Declaration -> . exp LPAREN params RPAREN
    (121) Built_In_Declaration -> . floor LPAREN params RPAREN
    (122) Built_In_Declaration -> . isset LPAREN params RPAREN
    (123) Built_In_Declaration -> . list LPAREN params RPAREN
    (124) Built_In_Declaration -> . log LPAREN params RPAREN
    (125) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (126) Built_In_Declaration -> . max LPAREN params RPAREN
    (127) Built_In_Declaration -> . min LPAREN params RPAREN
    (128) Built_In_Declaration -> . rand LPAREN params RPAREN
    (129) Built_In_Declaration -> . round LPAREN params RPAREN
    (130) Built_In_Declaration -> . sin LPAREN params RPAREN
    (131) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (132) Built_In_Declaration -> . unset LPAREN params RPAREN
    (133) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (134) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (135) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 41
    NUMBER          shift and go to state 74
    CADENA          shift and go to state 75
    RPAREN          reduce using rule 137 (empty_function -> .)
    COMMA           reduce using rule 137 (empty_function -> .)
    array           shift and go to state 44
    pow             shift and go to state 45
    POW             shift and go to state 46
    abs             shift and go to state 47
    cos             shift and go to state 48
    deg2rad         shift and go to state 49
    rad2deg         shift and go to state 50
    die             shift and go to state 51
    exp             shift and go to state 52
    floor           shift and go to state 53
    isset           shift and go to state 54
    list            shift and go to state 55
    log             shift and go to state 56
    log10           shift and go to state 57
    max             shift and go to state 58
    min             shift and go to state 59
    rand            shift and go to state 60
    round           shift and go to state 61
    sin             shift and go to state 62
    sqrt            shift and go to state 63
    unset           shift and go to state 64

    params                         shift and go to state 177
    single_param                   shift and go to state 120
    var_declaration2               shift and go to state 121
    data_type                      shift and go to state 122
    empty_function                 shift and go to state 123
    Built_In_Declaration           shift and go to state 42
    Concatenar_Cadenas_declaration shift and go to state 43

state 109

    (127) Built_In_Declaration -> min LPAREN . params RPAREN
    (101) params -> . single_param
    (102) params -> . params COMMA single_param
    (103) single_param -> . var_declaration2
    (104) single_param -> . data_type
    (105) single_param -> . empty_function
    (38) var_declaration2 -> . VARIABLE
    (39) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (40) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL CADENA
    (42) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (43) var_declaration2 -> . VARIABLE EQUAL expression
    (44) var_declaration2 -> . Built_In_Declaration
    (45) var_declaration2 -> . Concatenar_Cadenas_declaration
    (46) var_declaration2 -> . VARIABLE assignment_tail
    (47) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (25) data_type -> . NUMBER
    (26) data_type -> . CADENA
    (137) empty_function -> .
    (112) Built_In_Declaration -> . array LPAREN params RPAREN
    (113) Built_In_Declaration -> . pow LPAREN params RPAREN
    (114) Built_In_Declaration -> . POW LPAREN params RPAREN
    (115) Built_In_Declaration -> . abs LPAREN params RPAREN
    (116) Built_In_Declaration -> . cos LPAREN params RPAREN
    (117) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (118) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (119) Built_In_Declaration -> . die LPAREN params RPAREN
    (120) Built_In_Declaration -> . exp LPAREN params RPAREN
    (121) Built_In_Declaration -> . floor LPAREN params RPAREN
    (122) Built_In_Declaration -> . isset LPAREN params RPAREN
    (123) Built_In_Declaration -> . list LPAREN params RPAREN
    (124) Built_In_Declaration -> . log LPAREN params RPAREN
    (125) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (126) Built_In_Declaration -> . max LPAREN params RPAREN
    (127) Built_In_Declaration -> . min LPAREN params RPAREN
    (128) Built_In_Declaration -> . rand LPAREN params RPAREN
    (129) Built_In_Declaration -> . round LPAREN params RPAREN
    (130) Built_In_Declaration -> . sin LPAREN params RPAREN
    (131) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (132) Built_In_Declaration -> . unset LPAREN params RPAREN
    (133) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (134) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (135) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 41
    NUMBER          shift and go to state 74
    CADENA          shift and go to state 75
    RPAREN          reduce using rule 137 (empty_function -> .)
    COMMA           reduce using rule 137 (empty_function -> .)
    array           shift and go to state 44
    pow             shift and go to state 45
    POW             shift and go to state 46
    abs             shift and go to state 47
    cos             shift and go to state 48
    deg2rad         shift and go to state 49
    rad2deg         shift and go to state 50
    die             shift and go to state 51
    exp             shift and go to state 52
    floor           shift and go to state 53
    isset           shift and go to state 54
    list            shift and go to state 55
    log             shift and go to state 56
    log10           shift and go to state 57
    max             shift and go to state 58
    min             shift and go to state 59
    rand            shift and go to state 60
    round           shift and go to state 61
    sin             shift and go to state 62
    sqrt            shift and go to state 63
    unset           shift and go to state 64

    params                         shift and go to state 178
    single_param                   shift and go to state 120
    var_declaration2               shift and go to state 121
    data_type                      shift and go to state 122
    empty_function                 shift and go to state 123
    Built_In_Declaration           shift and go to state 42
    Concatenar_Cadenas_declaration shift and go to state 43

state 110

    (128) Built_In_Declaration -> rand LPAREN . params RPAREN
    (101) params -> . single_param
    (102) params -> . params COMMA single_param
    (103) single_param -> . var_declaration2
    (104) single_param -> . data_type
    (105) single_param -> . empty_function
    (38) var_declaration2 -> . VARIABLE
    (39) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (40) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL CADENA
    (42) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (43) var_declaration2 -> . VARIABLE EQUAL expression
    (44) var_declaration2 -> . Built_In_Declaration
    (45) var_declaration2 -> . Concatenar_Cadenas_declaration
    (46) var_declaration2 -> . VARIABLE assignment_tail
    (47) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (25) data_type -> . NUMBER
    (26) data_type -> . CADENA
    (137) empty_function -> .
    (112) Built_In_Declaration -> . array LPAREN params RPAREN
    (113) Built_In_Declaration -> . pow LPAREN params RPAREN
    (114) Built_In_Declaration -> . POW LPAREN params RPAREN
    (115) Built_In_Declaration -> . abs LPAREN params RPAREN
    (116) Built_In_Declaration -> . cos LPAREN params RPAREN
    (117) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (118) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (119) Built_In_Declaration -> . die LPAREN params RPAREN
    (120) Built_In_Declaration -> . exp LPAREN params RPAREN
    (121) Built_In_Declaration -> . floor LPAREN params RPAREN
    (122) Built_In_Declaration -> . isset LPAREN params RPAREN
    (123) Built_In_Declaration -> . list LPAREN params RPAREN
    (124) Built_In_Declaration -> . log LPAREN params RPAREN
    (125) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (126) Built_In_Declaration -> . max LPAREN params RPAREN
    (127) Built_In_Declaration -> . min LPAREN params RPAREN
    (128) Built_In_Declaration -> . rand LPAREN params RPAREN
    (129) Built_In_Declaration -> . round LPAREN params RPAREN
    (130) Built_In_Declaration -> . sin LPAREN params RPAREN
    (131) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (132) Built_In_Declaration -> . unset LPAREN params RPAREN
    (133) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (134) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (135) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 41
    NUMBER          shift and go to state 74
    CADENA          shift and go to state 75
    RPAREN          reduce using rule 137 (empty_function -> .)
    COMMA           reduce using rule 137 (empty_function -> .)
    array           shift and go to state 44
    pow             shift and go to state 45
    POW             shift and go to state 46
    abs             shift and go to state 47
    cos             shift and go to state 48
    deg2rad         shift and go to state 49
    rad2deg         shift and go to state 50
    die             shift and go to state 51
    exp             shift and go to state 52
    floor           shift and go to state 53
    isset           shift and go to state 54
    list            shift and go to state 55
    log             shift and go to state 56
    log10           shift and go to state 57
    max             shift and go to state 58
    min             shift and go to state 59
    rand            shift and go to state 60
    round           shift and go to state 61
    sin             shift and go to state 62
    sqrt            shift and go to state 63
    unset           shift and go to state 64

    params                         shift and go to state 179
    single_param                   shift and go to state 120
    var_declaration2               shift and go to state 121
    data_type                      shift and go to state 122
    empty_function                 shift and go to state 123
    Built_In_Declaration           shift and go to state 42
    Concatenar_Cadenas_declaration shift and go to state 43

state 111

    (129) Built_In_Declaration -> round LPAREN . params RPAREN
    (101) params -> . single_param
    (102) params -> . params COMMA single_param
    (103) single_param -> . var_declaration2
    (104) single_param -> . data_type
    (105) single_param -> . empty_function
    (38) var_declaration2 -> . VARIABLE
    (39) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (40) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL CADENA
    (42) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (43) var_declaration2 -> . VARIABLE EQUAL expression
    (44) var_declaration2 -> . Built_In_Declaration
    (45) var_declaration2 -> . Concatenar_Cadenas_declaration
    (46) var_declaration2 -> . VARIABLE assignment_tail
    (47) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (25) data_type -> . NUMBER
    (26) data_type -> . CADENA
    (137) empty_function -> .
    (112) Built_In_Declaration -> . array LPAREN params RPAREN
    (113) Built_In_Declaration -> . pow LPAREN params RPAREN
    (114) Built_In_Declaration -> . POW LPAREN params RPAREN
    (115) Built_In_Declaration -> . abs LPAREN params RPAREN
    (116) Built_In_Declaration -> . cos LPAREN params RPAREN
    (117) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (118) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (119) Built_In_Declaration -> . die LPAREN params RPAREN
    (120) Built_In_Declaration -> . exp LPAREN params RPAREN
    (121) Built_In_Declaration -> . floor LPAREN params RPAREN
    (122) Built_In_Declaration -> . isset LPAREN params RPAREN
    (123) Built_In_Declaration -> . list LPAREN params RPAREN
    (124) Built_In_Declaration -> . log LPAREN params RPAREN
    (125) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (126) Built_In_Declaration -> . max LPAREN params RPAREN
    (127) Built_In_Declaration -> . min LPAREN params RPAREN
    (128) Built_In_Declaration -> . rand LPAREN params RPAREN
    (129) Built_In_Declaration -> . round LPAREN params RPAREN
    (130) Built_In_Declaration -> . sin LPAREN params RPAREN
    (131) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (132) Built_In_Declaration -> . unset LPAREN params RPAREN
    (133) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (134) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (135) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 41
    NUMBER          shift and go to state 74
    CADENA          shift and go to state 75
    RPAREN          reduce using rule 137 (empty_function -> .)
    COMMA           reduce using rule 137 (empty_function -> .)
    array           shift and go to state 44
    pow             shift and go to state 45
    POW             shift and go to state 46
    abs             shift and go to state 47
    cos             shift and go to state 48
    deg2rad         shift and go to state 49
    rad2deg         shift and go to state 50
    die             shift and go to state 51
    exp             shift and go to state 52
    floor           shift and go to state 53
    isset           shift and go to state 54
    list            shift and go to state 55
    log             shift and go to state 56
    log10           shift and go to state 57
    max             shift and go to state 58
    min             shift and go to state 59
    rand            shift and go to state 60
    round           shift and go to state 61
    sin             shift and go to state 62
    sqrt            shift and go to state 63
    unset           shift and go to state 64

    params                         shift and go to state 180
    single_param                   shift and go to state 120
    var_declaration2               shift and go to state 121
    data_type                      shift and go to state 122
    empty_function                 shift and go to state 123
    Built_In_Declaration           shift and go to state 42
    Concatenar_Cadenas_declaration shift and go to state 43

state 112

    (130) Built_In_Declaration -> sin LPAREN . params RPAREN
    (101) params -> . single_param
    (102) params -> . params COMMA single_param
    (103) single_param -> . var_declaration2
    (104) single_param -> . data_type
    (105) single_param -> . empty_function
    (38) var_declaration2 -> . VARIABLE
    (39) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (40) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL CADENA
    (42) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (43) var_declaration2 -> . VARIABLE EQUAL expression
    (44) var_declaration2 -> . Built_In_Declaration
    (45) var_declaration2 -> . Concatenar_Cadenas_declaration
    (46) var_declaration2 -> . VARIABLE assignment_tail
    (47) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (25) data_type -> . NUMBER
    (26) data_type -> . CADENA
    (137) empty_function -> .
    (112) Built_In_Declaration -> . array LPAREN params RPAREN
    (113) Built_In_Declaration -> . pow LPAREN params RPAREN
    (114) Built_In_Declaration -> . POW LPAREN params RPAREN
    (115) Built_In_Declaration -> . abs LPAREN params RPAREN
    (116) Built_In_Declaration -> . cos LPAREN params RPAREN
    (117) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (118) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (119) Built_In_Declaration -> . die LPAREN params RPAREN
    (120) Built_In_Declaration -> . exp LPAREN params RPAREN
    (121) Built_In_Declaration -> . floor LPAREN params RPAREN
    (122) Built_In_Declaration -> . isset LPAREN params RPAREN
    (123) Built_In_Declaration -> . list LPAREN params RPAREN
    (124) Built_In_Declaration -> . log LPAREN params RPAREN
    (125) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (126) Built_In_Declaration -> . max LPAREN params RPAREN
    (127) Built_In_Declaration -> . min LPAREN params RPAREN
    (128) Built_In_Declaration -> . rand LPAREN params RPAREN
    (129) Built_In_Declaration -> . round LPAREN params RPAREN
    (130) Built_In_Declaration -> . sin LPAREN params RPAREN
    (131) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (132) Built_In_Declaration -> . unset LPAREN params RPAREN
    (133) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (134) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (135) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 41
    NUMBER          shift and go to state 74
    CADENA          shift and go to state 75
    RPAREN          reduce using rule 137 (empty_function -> .)
    COMMA           reduce using rule 137 (empty_function -> .)
    array           shift and go to state 44
    pow             shift and go to state 45
    POW             shift and go to state 46
    abs             shift and go to state 47
    cos             shift and go to state 48
    deg2rad         shift and go to state 49
    rad2deg         shift and go to state 50
    die             shift and go to state 51
    exp             shift and go to state 52
    floor           shift and go to state 53
    isset           shift and go to state 54
    list            shift and go to state 55
    log             shift and go to state 56
    log10           shift and go to state 57
    max             shift and go to state 58
    min             shift and go to state 59
    rand            shift and go to state 60
    round           shift and go to state 61
    sin             shift and go to state 62
    sqrt            shift and go to state 63
    unset           shift and go to state 64

    params                         shift and go to state 181
    single_param                   shift and go to state 120
    var_declaration2               shift and go to state 121
    data_type                      shift and go to state 122
    empty_function                 shift and go to state 123
    Built_In_Declaration           shift and go to state 42
    Concatenar_Cadenas_declaration shift and go to state 43

state 113

    (131) Built_In_Declaration -> sqrt LPAREN . params RPAREN
    (101) params -> . single_param
    (102) params -> . params COMMA single_param
    (103) single_param -> . var_declaration2
    (104) single_param -> . data_type
    (105) single_param -> . empty_function
    (38) var_declaration2 -> . VARIABLE
    (39) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (40) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL CADENA
    (42) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (43) var_declaration2 -> . VARIABLE EQUAL expression
    (44) var_declaration2 -> . Built_In_Declaration
    (45) var_declaration2 -> . Concatenar_Cadenas_declaration
    (46) var_declaration2 -> . VARIABLE assignment_tail
    (47) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (25) data_type -> . NUMBER
    (26) data_type -> . CADENA
    (137) empty_function -> .
    (112) Built_In_Declaration -> . array LPAREN params RPAREN
    (113) Built_In_Declaration -> . pow LPAREN params RPAREN
    (114) Built_In_Declaration -> . POW LPAREN params RPAREN
    (115) Built_In_Declaration -> . abs LPAREN params RPAREN
    (116) Built_In_Declaration -> . cos LPAREN params RPAREN
    (117) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (118) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (119) Built_In_Declaration -> . die LPAREN params RPAREN
    (120) Built_In_Declaration -> . exp LPAREN params RPAREN
    (121) Built_In_Declaration -> . floor LPAREN params RPAREN
    (122) Built_In_Declaration -> . isset LPAREN params RPAREN
    (123) Built_In_Declaration -> . list LPAREN params RPAREN
    (124) Built_In_Declaration -> . log LPAREN params RPAREN
    (125) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (126) Built_In_Declaration -> . max LPAREN params RPAREN
    (127) Built_In_Declaration -> . min LPAREN params RPAREN
    (128) Built_In_Declaration -> . rand LPAREN params RPAREN
    (129) Built_In_Declaration -> . round LPAREN params RPAREN
    (130) Built_In_Declaration -> . sin LPAREN params RPAREN
    (131) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (132) Built_In_Declaration -> . unset LPAREN params RPAREN
    (133) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (134) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (135) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 41
    NUMBER          shift and go to state 74
    CADENA          shift and go to state 75
    RPAREN          reduce using rule 137 (empty_function -> .)
    COMMA           reduce using rule 137 (empty_function -> .)
    array           shift and go to state 44
    pow             shift and go to state 45
    POW             shift and go to state 46
    abs             shift and go to state 47
    cos             shift and go to state 48
    deg2rad         shift and go to state 49
    rad2deg         shift and go to state 50
    die             shift and go to state 51
    exp             shift and go to state 52
    floor           shift and go to state 53
    isset           shift and go to state 54
    list            shift and go to state 55
    log             shift and go to state 56
    log10           shift and go to state 57
    max             shift and go to state 58
    min             shift and go to state 59
    rand            shift and go to state 60
    round           shift and go to state 61
    sin             shift and go to state 62
    sqrt            shift and go to state 63
    unset           shift and go to state 64

    params                         shift and go to state 182
    single_param                   shift and go to state 120
    var_declaration2               shift and go to state 121
    data_type                      shift and go to state 122
    empty_function                 shift and go to state 123
    Built_In_Declaration           shift and go to state 42
    Concatenar_Cadenas_declaration shift and go to state 43

state 114

    (132) Built_In_Declaration -> unset LPAREN . params RPAREN
    (101) params -> . single_param
    (102) params -> . params COMMA single_param
    (103) single_param -> . var_declaration2
    (104) single_param -> . data_type
    (105) single_param -> . empty_function
    (38) var_declaration2 -> . VARIABLE
    (39) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (40) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL CADENA
    (42) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (43) var_declaration2 -> . VARIABLE EQUAL expression
    (44) var_declaration2 -> . Built_In_Declaration
    (45) var_declaration2 -> . Concatenar_Cadenas_declaration
    (46) var_declaration2 -> . VARIABLE assignment_tail
    (47) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (25) data_type -> . NUMBER
    (26) data_type -> . CADENA
    (137) empty_function -> .
    (112) Built_In_Declaration -> . array LPAREN params RPAREN
    (113) Built_In_Declaration -> . pow LPAREN params RPAREN
    (114) Built_In_Declaration -> . POW LPAREN params RPAREN
    (115) Built_In_Declaration -> . abs LPAREN params RPAREN
    (116) Built_In_Declaration -> . cos LPAREN params RPAREN
    (117) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (118) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (119) Built_In_Declaration -> . die LPAREN params RPAREN
    (120) Built_In_Declaration -> . exp LPAREN params RPAREN
    (121) Built_In_Declaration -> . floor LPAREN params RPAREN
    (122) Built_In_Declaration -> . isset LPAREN params RPAREN
    (123) Built_In_Declaration -> . list LPAREN params RPAREN
    (124) Built_In_Declaration -> . log LPAREN params RPAREN
    (125) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (126) Built_In_Declaration -> . max LPAREN params RPAREN
    (127) Built_In_Declaration -> . min LPAREN params RPAREN
    (128) Built_In_Declaration -> . rand LPAREN params RPAREN
    (129) Built_In_Declaration -> . round LPAREN params RPAREN
    (130) Built_In_Declaration -> . sin LPAREN params RPAREN
    (131) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (132) Built_In_Declaration -> . unset LPAREN params RPAREN
    (133) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (134) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (135) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 41
    NUMBER          shift and go to state 74
    CADENA          shift and go to state 75
    RPAREN          reduce using rule 137 (empty_function -> .)
    COMMA           reduce using rule 137 (empty_function -> .)
    array           shift and go to state 44
    pow             shift and go to state 45
    POW             shift and go to state 46
    abs             shift and go to state 47
    cos             shift and go to state 48
    deg2rad         shift and go to state 49
    rad2deg         shift and go to state 50
    die             shift and go to state 51
    exp             shift and go to state 52
    floor           shift and go to state 53
    isset           shift and go to state 54
    list            shift and go to state 55
    log             shift and go to state 56
    log10           shift and go to state 57
    max             shift and go to state 58
    min             shift and go to state 59
    rand            shift and go to state 60
    round           shift and go to state 61
    sin             shift and go to state 62
    sqrt            shift and go to state 63
    unset           shift and go to state 64

    params                         shift and go to state 183
    single_param                   shift and go to state 120
    var_declaration2               shift and go to state 121
    data_type                      shift and go to state 122
    empty_function                 shift and go to state 123
    Built_In_Declaration           shift and go to state 42
    Concatenar_Cadenas_declaration shift and go to state 43

state 115

    (27) header_declaration -> include CADENA SEMICOLON .

    COMMENT         reduce using rule 27 (header_declaration -> include CADENA SEMICOLON .)
    COMMENT_HASHTAG reduce using rule 27 (header_declaration -> include CADENA SEMICOLON .)
    COMMENT_MULTI   reduce using rule 27 (header_declaration -> include CADENA SEMICOLON .)
    empty           reduce using rule 27 (header_declaration -> include CADENA SEMICOLON .)
    include         reduce using rule 27 (header_declaration -> include CADENA SEMICOLON .)
    const           reduce using rule 27 (header_declaration -> include CADENA SEMICOLON .)
    print           reduce using rule 27 (header_declaration -> include CADENA SEMICOLON .)
    echo            reduce using rule 27 (header_declaration -> include CADENA SEMICOLON .)
    while           reduce using rule 27 (header_declaration -> include CADENA SEMICOLON .)
    if              reduce using rule 27 (header_declaration -> include CADENA SEMICOLON .)
    function        reduce using rule 27 (header_declaration -> include CADENA SEMICOLON .)
    ID              reduce using rule 27 (header_declaration -> include CADENA SEMICOLON .)
    class           reduce using rule 27 (header_declaration -> include CADENA SEMICOLON .)
    new             reduce using rule 27 (header_declaration -> include CADENA SEMICOLON .)
    CLOSE_TAG       reduce using rule 27 (header_declaration -> include CADENA SEMICOLON .)
    for             reduce using rule 27 (header_declaration -> include CADENA SEMICOLON .)
    foreach         reduce using rule 27 (header_declaration -> include CADENA SEMICOLON .)
    exit            reduce using rule 27 (header_declaration -> include CADENA SEMICOLON .)
    VARIABLE        reduce using rule 27 (header_declaration -> include CADENA SEMICOLON .)
    array           reduce using rule 27 (header_declaration -> include CADENA SEMICOLON .)
    pow             reduce using rule 27 (header_declaration -> include CADENA SEMICOLON .)
    POW             reduce using rule 27 (header_declaration -> include CADENA SEMICOLON .)
    abs             reduce using rule 27 (header_declaration -> include CADENA SEMICOLON .)
    cos             reduce using rule 27 (header_declaration -> include CADENA SEMICOLON .)
    deg2rad         reduce using rule 27 (header_declaration -> include CADENA SEMICOLON .)
    rad2deg         reduce using rule 27 (header_declaration -> include CADENA SEMICOLON .)
    die             reduce using rule 27 (header_declaration -> include CADENA SEMICOLON .)
    exp             reduce using rule 27 (header_declaration -> include CADENA SEMICOLON .)
    floor           reduce using rule 27 (header_declaration -> include CADENA SEMICOLON .)
    isset           reduce using rule 27 (header_declaration -> include CADENA SEMICOLON .)
    list            reduce using rule 27 (header_declaration -> include CADENA SEMICOLON .)
    log             reduce using rule 27 (header_declaration -> include CADENA SEMICOLON .)
    log10           reduce using rule 27 (header_declaration -> include CADENA SEMICOLON .)
    max             reduce using rule 27 (header_declaration -> include CADENA SEMICOLON .)
    min             reduce using rule 27 (header_declaration -> include CADENA SEMICOLON .)
    rand            reduce using rule 27 (header_declaration -> include CADENA SEMICOLON .)
    round           reduce using rule 27 (header_declaration -> include CADENA SEMICOLON .)
    sin             reduce using rule 27 (header_declaration -> include CADENA SEMICOLON .)
    sqrt            reduce using rule 27 (header_declaration -> include CADENA SEMICOLON .)
    unset           reduce using rule 27 (header_declaration -> include CADENA SEMICOLON .)
    CADENA          reduce using rule 27 (header_declaration -> include CADENA SEMICOLON .)
    $end            reduce using rule 27 (header_declaration -> include CADENA SEMICOLON .)
    RBLOCK          reduce using rule 27 (header_declaration -> include CADENA SEMICOLON .)


state 116

    (134) Concatenar_Cadenas_declaration -> CADENA DOT CADENA .

    SEMICOLON       reduce using rule 134 (Concatenar_Cadenas_declaration -> CADENA DOT CADENA .)
    RPAREN          reduce using rule 134 (Concatenar_Cadenas_declaration -> CADENA DOT CADENA .)
    COMMA           reduce using rule 134 (Concatenar_Cadenas_declaration -> CADENA DOT CADENA .)
    RBRACKET        reduce using rule 134 (Concatenar_Cadenas_declaration -> CADENA DOT CADENA .)
    RBLOCK          reduce using rule 134 (Concatenar_Cadenas_declaration -> CADENA DOT CADENA .)


state 117

    (135) Concatenar_Cadenas_declaration -> CADENA DOT VARIABLE .

    SEMICOLON       reduce using rule 135 (Concatenar_Cadenas_declaration -> CADENA DOT VARIABLE .)
    RPAREN          reduce using rule 135 (Concatenar_Cadenas_declaration -> CADENA DOT VARIABLE .)
    COMMA           reduce using rule 135 (Concatenar_Cadenas_declaration -> CADENA DOT VARIABLE .)
    RBRACKET        reduce using rule 135 (Concatenar_Cadenas_declaration -> CADENA DOT VARIABLE .)
    RBLOCK          reduce using rule 135 (Concatenar_Cadenas_declaration -> CADENA DOT VARIABLE .)


state 118

    (28) constant_declaration -> const ID EQUAL . data_type SEMICOLON
    (25) data_type -> . NUMBER
    (26) data_type -> . CADENA

    NUMBER          shift and go to state 74
    CADENA          shift and go to state 185

    data_type                      shift and go to state 184

state 119

    (98) fun_call -> ID LPAREN params . RPAREN
    (102) params -> params . COMMA single_param

    RPAREN          shift and go to state 186
    COMMA           shift and go to state 187


state 120

    (101) params -> single_param .

    RPAREN          reduce using rule 101 (params -> single_param .)
    COMMA           reduce using rule 101 (params -> single_param .)
    RBRACKET        reduce using rule 101 (params -> single_param .)
    RBLOCK          reduce using rule 101 (params -> single_param .)
    SEMICOLON       reduce using rule 101 (params -> single_param .)


state 121

    (103) single_param -> var_declaration2 .

    RPAREN          reduce using rule 103 (single_param -> var_declaration2 .)
    COMMA           reduce using rule 103 (single_param -> var_declaration2 .)
    RBRACKET        reduce using rule 103 (single_param -> var_declaration2 .)
    RBLOCK          reduce using rule 103 (single_param -> var_declaration2 .)
    SEMICOLON       reduce using rule 103 (single_param -> var_declaration2 .)


state 122

    (104) single_param -> data_type .

    RPAREN          reduce using rule 104 (single_param -> data_type .)
    COMMA           reduce using rule 104 (single_param -> data_type .)
    RBRACKET        reduce using rule 104 (single_param -> data_type .)
    RBLOCK          reduce using rule 104 (single_param -> data_type .)
    SEMICOLON       reduce using rule 104 (single_param -> data_type .)


state 123

    (105) single_param -> empty_function .

    RPAREN          reduce using rule 105 (single_param -> empty_function .)
    COMMA           reduce using rule 105 (single_param -> empty_function .)
    RBRACKET        reduce using rule 105 (single_param -> empty_function .)
    RBLOCK          reduce using rule 105 (single_param -> empty_function .)
    SEMICOLON       reduce using rule 105 (single_param -> empty_function .)


state 124

    (29) print_declaration -> print var_declaration2 SEMICOLON .

    COMMENT         reduce using rule 29 (print_declaration -> print var_declaration2 SEMICOLON .)
    COMMENT_HASHTAG reduce using rule 29 (print_declaration -> print var_declaration2 SEMICOLON .)
    COMMENT_MULTI   reduce using rule 29 (print_declaration -> print var_declaration2 SEMICOLON .)
    empty           reduce using rule 29 (print_declaration -> print var_declaration2 SEMICOLON .)
    include         reduce using rule 29 (print_declaration -> print var_declaration2 SEMICOLON .)
    const           reduce using rule 29 (print_declaration -> print var_declaration2 SEMICOLON .)
    print           reduce using rule 29 (print_declaration -> print var_declaration2 SEMICOLON .)
    echo            reduce using rule 29 (print_declaration -> print var_declaration2 SEMICOLON .)
    while           reduce using rule 29 (print_declaration -> print var_declaration2 SEMICOLON .)
    if              reduce using rule 29 (print_declaration -> print var_declaration2 SEMICOLON .)
    function        reduce using rule 29 (print_declaration -> print var_declaration2 SEMICOLON .)
    ID              reduce using rule 29 (print_declaration -> print var_declaration2 SEMICOLON .)
    class           reduce using rule 29 (print_declaration -> print var_declaration2 SEMICOLON .)
    new             reduce using rule 29 (print_declaration -> print var_declaration2 SEMICOLON .)
    CLOSE_TAG       reduce using rule 29 (print_declaration -> print var_declaration2 SEMICOLON .)
    for             reduce using rule 29 (print_declaration -> print var_declaration2 SEMICOLON .)
    foreach         reduce using rule 29 (print_declaration -> print var_declaration2 SEMICOLON .)
    exit            reduce using rule 29 (print_declaration -> print var_declaration2 SEMICOLON .)
    VARIABLE        reduce using rule 29 (print_declaration -> print var_declaration2 SEMICOLON .)
    array           reduce using rule 29 (print_declaration -> print var_declaration2 SEMICOLON .)
    pow             reduce using rule 29 (print_declaration -> print var_declaration2 SEMICOLON .)
    POW             reduce using rule 29 (print_declaration -> print var_declaration2 SEMICOLON .)
    abs             reduce using rule 29 (print_declaration -> print var_declaration2 SEMICOLON .)
    cos             reduce using rule 29 (print_declaration -> print var_declaration2 SEMICOLON .)
    deg2rad         reduce using rule 29 (print_declaration -> print var_declaration2 SEMICOLON .)
    rad2deg         reduce using rule 29 (print_declaration -> print var_declaration2 SEMICOLON .)
    die             reduce using rule 29 (print_declaration -> print var_declaration2 SEMICOLON .)
    exp             reduce using rule 29 (print_declaration -> print var_declaration2 SEMICOLON .)
    floor           reduce using rule 29 (print_declaration -> print var_declaration2 SEMICOLON .)
    isset           reduce using rule 29 (print_declaration -> print var_declaration2 SEMICOLON .)
    list            reduce using rule 29 (print_declaration -> print var_declaration2 SEMICOLON .)
    log             reduce using rule 29 (print_declaration -> print var_declaration2 SEMICOLON .)
    log10           reduce using rule 29 (print_declaration -> print var_declaration2 SEMICOLON .)
    max             reduce using rule 29 (print_declaration -> print var_declaration2 SEMICOLON .)
    min             reduce using rule 29 (print_declaration -> print var_declaration2 SEMICOLON .)
    rand            reduce using rule 29 (print_declaration -> print var_declaration2 SEMICOLON .)
    round           reduce using rule 29 (print_declaration -> print var_declaration2 SEMICOLON .)
    sin             reduce using rule 29 (print_declaration -> print var_declaration2 SEMICOLON .)
    sqrt            reduce using rule 29 (print_declaration -> print var_declaration2 SEMICOLON .)
    unset           reduce using rule 29 (print_declaration -> print var_declaration2 SEMICOLON .)
    CADENA          reduce using rule 29 (print_declaration -> print var_declaration2 SEMICOLON .)
    $end            reduce using rule 29 (print_declaration -> print var_declaration2 SEMICOLON .)
    RBLOCK          reduce using rule 29 (print_declaration -> print var_declaration2 SEMICOLON .)


state 125

    (30) print_declaration -> print LPAREN var_declaration2 . RPAREN SEMICOLON

    RPAREN          shift and go to state 188


state 126

    (31) print_declaration -> print LPAREN data_type . RPAREN SEMICOLON

    RPAREN          shift and go to state 189


state 127

    (32) print_declaration -> print data_type SEMICOLON .

    COMMENT         reduce using rule 32 (print_declaration -> print data_type SEMICOLON .)
    COMMENT_HASHTAG reduce using rule 32 (print_declaration -> print data_type SEMICOLON .)
    COMMENT_MULTI   reduce using rule 32 (print_declaration -> print data_type SEMICOLON .)
    empty           reduce using rule 32 (print_declaration -> print data_type SEMICOLON .)
    include         reduce using rule 32 (print_declaration -> print data_type SEMICOLON .)
    const           reduce using rule 32 (print_declaration -> print data_type SEMICOLON .)
    print           reduce using rule 32 (print_declaration -> print data_type SEMICOLON .)
    echo            reduce using rule 32 (print_declaration -> print data_type SEMICOLON .)
    while           reduce using rule 32 (print_declaration -> print data_type SEMICOLON .)
    if              reduce using rule 32 (print_declaration -> print data_type SEMICOLON .)
    function        reduce using rule 32 (print_declaration -> print data_type SEMICOLON .)
    ID              reduce using rule 32 (print_declaration -> print data_type SEMICOLON .)
    class           reduce using rule 32 (print_declaration -> print data_type SEMICOLON .)
    new             reduce using rule 32 (print_declaration -> print data_type SEMICOLON .)
    CLOSE_TAG       reduce using rule 32 (print_declaration -> print data_type SEMICOLON .)
    for             reduce using rule 32 (print_declaration -> print data_type SEMICOLON .)
    foreach         reduce using rule 32 (print_declaration -> print data_type SEMICOLON .)
    exit            reduce using rule 32 (print_declaration -> print data_type SEMICOLON .)
    VARIABLE        reduce using rule 32 (print_declaration -> print data_type SEMICOLON .)
    array           reduce using rule 32 (print_declaration -> print data_type SEMICOLON .)
    pow             reduce using rule 32 (print_declaration -> print data_type SEMICOLON .)
    POW             reduce using rule 32 (print_declaration -> print data_type SEMICOLON .)
    abs             reduce using rule 32 (print_declaration -> print data_type SEMICOLON .)
    cos             reduce using rule 32 (print_declaration -> print data_type SEMICOLON .)
    deg2rad         reduce using rule 32 (print_declaration -> print data_type SEMICOLON .)
    rad2deg         reduce using rule 32 (print_declaration -> print data_type SEMICOLON .)
    die             reduce using rule 32 (print_declaration -> print data_type SEMICOLON .)
    exp             reduce using rule 32 (print_declaration -> print data_type SEMICOLON .)
    floor           reduce using rule 32 (print_declaration -> print data_type SEMICOLON .)
    isset           reduce using rule 32 (print_declaration -> print data_type SEMICOLON .)
    list            reduce using rule 32 (print_declaration -> print data_type SEMICOLON .)
    log             reduce using rule 32 (print_declaration -> print data_type SEMICOLON .)
    log10           reduce using rule 32 (print_declaration -> print data_type SEMICOLON .)
    max             reduce using rule 32 (print_declaration -> print data_type SEMICOLON .)
    min             reduce using rule 32 (print_declaration -> print data_type SEMICOLON .)
    rand            reduce using rule 32 (print_declaration -> print data_type SEMICOLON .)
    round           reduce using rule 32 (print_declaration -> print data_type SEMICOLON .)
    sin             reduce using rule 32 (print_declaration -> print data_type SEMICOLON .)
    sqrt            reduce using rule 32 (print_declaration -> print data_type SEMICOLON .)
    unset           reduce using rule 32 (print_declaration -> print data_type SEMICOLON .)
    CADENA          reduce using rule 32 (print_declaration -> print data_type SEMICOLON .)
    $end            reduce using rule 32 (print_declaration -> print data_type SEMICOLON .)
    RBLOCK          reduce using rule 32 (print_declaration -> print data_type SEMICOLON .)


state 128

    (33) echo_declaration -> echo var_declaration2 SEMICOLON .

    COMMENT         reduce using rule 33 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    COMMENT_HASHTAG reduce using rule 33 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    COMMENT_MULTI   reduce using rule 33 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    empty           reduce using rule 33 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    include         reduce using rule 33 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    const           reduce using rule 33 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    print           reduce using rule 33 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    echo            reduce using rule 33 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    while           reduce using rule 33 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    if              reduce using rule 33 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    function        reduce using rule 33 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    ID              reduce using rule 33 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    class           reduce using rule 33 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    new             reduce using rule 33 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    CLOSE_TAG       reduce using rule 33 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    for             reduce using rule 33 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    foreach         reduce using rule 33 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    exit            reduce using rule 33 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    VARIABLE        reduce using rule 33 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    array           reduce using rule 33 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    pow             reduce using rule 33 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    POW             reduce using rule 33 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    abs             reduce using rule 33 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    cos             reduce using rule 33 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    deg2rad         reduce using rule 33 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    rad2deg         reduce using rule 33 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    die             reduce using rule 33 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    exp             reduce using rule 33 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    floor           reduce using rule 33 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    isset           reduce using rule 33 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    list            reduce using rule 33 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    log             reduce using rule 33 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    log10           reduce using rule 33 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    max             reduce using rule 33 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    min             reduce using rule 33 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    rand            reduce using rule 33 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    round           reduce using rule 33 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    sin             reduce using rule 33 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    sqrt            reduce using rule 33 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    unset           reduce using rule 33 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    CADENA          reduce using rule 33 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    $end            reduce using rule 33 (echo_declaration -> echo var_declaration2 SEMICOLON .)
    RBLOCK          reduce using rule 33 (echo_declaration -> echo var_declaration2 SEMICOLON .)


state 129

    (34) echo_declaration -> echo LPAREN var_declaration2 . RPAREN SEMICOLON

    RPAREN          shift and go to state 190


state 130

    (35) echo_declaration -> echo LPAREN data_type . RPAREN SEMICOLON

    RPAREN          shift and go to state 191


state 131

    (36) echo_declaration -> echo data_type SEMICOLON .

    COMMENT         reduce using rule 36 (echo_declaration -> echo data_type SEMICOLON .)
    COMMENT_HASHTAG reduce using rule 36 (echo_declaration -> echo data_type SEMICOLON .)
    COMMENT_MULTI   reduce using rule 36 (echo_declaration -> echo data_type SEMICOLON .)
    empty           reduce using rule 36 (echo_declaration -> echo data_type SEMICOLON .)
    include         reduce using rule 36 (echo_declaration -> echo data_type SEMICOLON .)
    const           reduce using rule 36 (echo_declaration -> echo data_type SEMICOLON .)
    print           reduce using rule 36 (echo_declaration -> echo data_type SEMICOLON .)
    echo            reduce using rule 36 (echo_declaration -> echo data_type SEMICOLON .)
    while           reduce using rule 36 (echo_declaration -> echo data_type SEMICOLON .)
    if              reduce using rule 36 (echo_declaration -> echo data_type SEMICOLON .)
    function        reduce using rule 36 (echo_declaration -> echo data_type SEMICOLON .)
    ID              reduce using rule 36 (echo_declaration -> echo data_type SEMICOLON .)
    class           reduce using rule 36 (echo_declaration -> echo data_type SEMICOLON .)
    new             reduce using rule 36 (echo_declaration -> echo data_type SEMICOLON .)
    CLOSE_TAG       reduce using rule 36 (echo_declaration -> echo data_type SEMICOLON .)
    for             reduce using rule 36 (echo_declaration -> echo data_type SEMICOLON .)
    foreach         reduce using rule 36 (echo_declaration -> echo data_type SEMICOLON .)
    exit            reduce using rule 36 (echo_declaration -> echo data_type SEMICOLON .)
    VARIABLE        reduce using rule 36 (echo_declaration -> echo data_type SEMICOLON .)
    array           reduce using rule 36 (echo_declaration -> echo data_type SEMICOLON .)
    pow             reduce using rule 36 (echo_declaration -> echo data_type SEMICOLON .)
    POW             reduce using rule 36 (echo_declaration -> echo data_type SEMICOLON .)
    abs             reduce using rule 36 (echo_declaration -> echo data_type SEMICOLON .)
    cos             reduce using rule 36 (echo_declaration -> echo data_type SEMICOLON .)
    deg2rad         reduce using rule 36 (echo_declaration -> echo data_type SEMICOLON .)
    rad2deg         reduce using rule 36 (echo_declaration -> echo data_type SEMICOLON .)
    die             reduce using rule 36 (echo_declaration -> echo data_type SEMICOLON .)
    exp             reduce using rule 36 (echo_declaration -> echo data_type SEMICOLON .)
    floor           reduce using rule 36 (echo_declaration -> echo data_type SEMICOLON .)
    isset           reduce using rule 36 (echo_declaration -> echo data_type SEMICOLON .)
    list            reduce using rule 36 (echo_declaration -> echo data_type SEMICOLON .)
    log             reduce using rule 36 (echo_declaration -> echo data_type SEMICOLON .)
    log10           reduce using rule 36 (echo_declaration -> echo data_type SEMICOLON .)
    max             reduce using rule 36 (echo_declaration -> echo data_type SEMICOLON .)
    min             reduce using rule 36 (echo_declaration -> echo data_type SEMICOLON .)
    rand            reduce using rule 36 (echo_declaration -> echo data_type SEMICOLON .)
    round           reduce using rule 36 (echo_declaration -> echo data_type SEMICOLON .)
    sin             reduce using rule 36 (echo_declaration -> echo data_type SEMICOLON .)
    sqrt            reduce using rule 36 (echo_declaration -> echo data_type SEMICOLON .)
    unset           reduce using rule 36 (echo_declaration -> echo data_type SEMICOLON .)
    CADENA          reduce using rule 36 (echo_declaration -> echo data_type SEMICOLON .)
    $end            reduce using rule 36 (echo_declaration -> echo data_type SEMICOLON .)
    RBLOCK          reduce using rule 36 (echo_declaration -> echo data_type SEMICOLON .)


state 132

    (66) factor -> LPAREN . expression RPAREN
    (55) expression -> . additive_expression
    (56) expression -> . additive_expression logical_op additive_expression
    (57) expression -> . additive_expression comp_op additive_expression
    (58) expression -> . additive_expression comp_op additive_expression logical_op additive_expression comp_op additive_expression
    (59) additive_expression -> . term
    (60) additive_expression -> . term math_op term
    (61) term -> . factor
    (62) term -> . factor increment_decrement_op
    (63) term -> . increment_decrement_op factor
    (64) factor -> . NUMBER
    (65) factor -> . VARIABLE
    (66) factor -> . LPAREN expression RPAREN
    (67) increment_decrement_op -> . PLUSPLUS
    (68) increment_decrement_op -> . MINUSMINUS

    NUMBER          shift and go to state 138
    VARIABLE        shift and go to state 139
    LPAREN          shift and go to state 132
    PLUSPLUS        shift and go to state 140
    MINUSMINUS      shift and go to state 141

    expression                     shift and go to state 192
    additive_expression            shift and go to state 134
    term                           shift and go to state 135
    factor                         shift and go to state 136
    increment_decrement_op         shift and go to state 137

state 133

    (54) iteration_stmt -> while LPAREN expression . RPAREN LBLOCK declaration RBLOCK

    RPAREN          shift and go to state 193


state 134

    (55) expression -> additive_expression .
    (56) expression -> additive_expression . logical_op additive_expression
    (57) expression -> additive_expression . comp_op additive_expression
    (58) expression -> additive_expression . comp_op additive_expression logical_op additive_expression comp_op additive_expression
    (87) logical_op -> . BOOL_OR
    (88) logical_op -> . BOOL_AND
    (89) logical_op -> . NOT
    (90) logical_op -> . or
    (91) logical_op -> . and
    (77) comp_op -> . LESS
    (78) comp_op -> . LESSEQUAL
    (79) comp_op -> . GREATER
    (80) comp_op -> . GREATEREQUAL
    (81) comp_op -> . DEQUAL
    (82) comp_op -> . DISTINT
    (83) comp_op -> . DIVEQUAL
    (84) comp_op -> . ISEQUAL
    (85) comp_op -> . ISIDENTICAL
    (86) comp_op -> . ISNOTIDENTICAL

    RPAREN          reduce using rule 55 (expression -> additive_expression .)
    as              reduce using rule 55 (expression -> additive_expression .)
    SEMICOLON       reduce using rule 55 (expression -> additive_expression .)
    COMMA           reduce using rule 55 (expression -> additive_expression .)
    RBRACKET        reduce using rule 55 (expression -> additive_expression .)
    RBLOCK          reduce using rule 55 (expression -> additive_expression .)
    BOOL_OR         shift and go to state 196
    BOOL_AND        shift and go to state 197
    NOT             shift and go to state 198
    or              shift and go to state 199
    and             shift and go to state 200
    LESS            shift and go to state 201
    LESSEQUAL       shift and go to state 202
    GREATER         shift and go to state 203
    GREATEREQUAL    shift and go to state 204
    DEQUAL          shift and go to state 205
    DISTINT         shift and go to state 206
    DIVEQUAL        shift and go to state 207
    ISEQUAL         shift and go to state 208
    ISIDENTICAL     shift and go to state 209
    ISNOTIDENTICAL  shift and go to state 210

    logical_op                     shift and go to state 194
    comp_op                        shift and go to state 195

state 135

    (59) additive_expression -> term .
    (60) additive_expression -> term . math_op term
    (69) math_op -> . PLUS
    (70) math_op -> . MINUS
    (71) math_op -> . TIMES
    (72) math_op -> . DIVIDE
    (73) math_op -> . MULEQUAL
    (74) math_op -> . PLUSEQUAL
    (75) math_op -> . MINUSEQUAL
    (76) math_op -> . MOD

    BOOL_OR         reduce using rule 59 (additive_expression -> term .)
    BOOL_AND        reduce using rule 59 (additive_expression -> term .)
    NOT             reduce using rule 59 (additive_expression -> term .)
    or              reduce using rule 59 (additive_expression -> term .)
    and             reduce using rule 59 (additive_expression -> term .)
    LESS            reduce using rule 59 (additive_expression -> term .)
    LESSEQUAL       reduce using rule 59 (additive_expression -> term .)
    GREATER         reduce using rule 59 (additive_expression -> term .)
    GREATEREQUAL    reduce using rule 59 (additive_expression -> term .)
    DEQUAL          reduce using rule 59 (additive_expression -> term .)
    DISTINT         reduce using rule 59 (additive_expression -> term .)
    DIVEQUAL        reduce using rule 59 (additive_expression -> term .)
    ISEQUAL         reduce using rule 59 (additive_expression -> term .)
    ISIDENTICAL     reduce using rule 59 (additive_expression -> term .)
    ISNOTIDENTICAL  reduce using rule 59 (additive_expression -> term .)
    RPAREN          reduce using rule 59 (additive_expression -> term .)
    as              reduce using rule 59 (additive_expression -> term .)
    SEMICOLON       reduce using rule 59 (additive_expression -> term .)
    COMMA           reduce using rule 59 (additive_expression -> term .)
    RBRACKET        reduce using rule 59 (additive_expression -> term .)
    RBLOCK          reduce using rule 59 (additive_expression -> term .)
    PLUS            shift and go to state 212
    MINUS           shift and go to state 213
    TIMES           shift and go to state 214
    DIVIDE          shift and go to state 215
    MULEQUAL        shift and go to state 216
    PLUSEQUAL       shift and go to state 217
    MINUSEQUAL      shift and go to state 218
    MOD             shift and go to state 219

    math_op                        shift and go to state 211

state 136

    (61) term -> factor .
    (62) term -> factor . increment_decrement_op
    (67) increment_decrement_op -> . PLUSPLUS
    (68) increment_decrement_op -> . MINUSMINUS

    PLUS            reduce using rule 61 (term -> factor .)
    MINUS           reduce using rule 61 (term -> factor .)
    TIMES           reduce using rule 61 (term -> factor .)
    DIVIDE          reduce using rule 61 (term -> factor .)
    MULEQUAL        reduce using rule 61 (term -> factor .)
    PLUSEQUAL       reduce using rule 61 (term -> factor .)
    MINUSEQUAL      reduce using rule 61 (term -> factor .)
    MOD             reduce using rule 61 (term -> factor .)
    BOOL_OR         reduce using rule 61 (term -> factor .)
    BOOL_AND        reduce using rule 61 (term -> factor .)
    NOT             reduce using rule 61 (term -> factor .)
    or              reduce using rule 61 (term -> factor .)
    and             reduce using rule 61 (term -> factor .)
    LESS            reduce using rule 61 (term -> factor .)
    LESSEQUAL       reduce using rule 61 (term -> factor .)
    GREATER         reduce using rule 61 (term -> factor .)
    GREATEREQUAL    reduce using rule 61 (term -> factor .)
    DEQUAL          reduce using rule 61 (term -> factor .)
    DISTINT         reduce using rule 61 (term -> factor .)
    DIVEQUAL        reduce using rule 61 (term -> factor .)
    ISEQUAL         reduce using rule 61 (term -> factor .)
    ISIDENTICAL     reduce using rule 61 (term -> factor .)
    ISNOTIDENTICAL  reduce using rule 61 (term -> factor .)
    RPAREN          reduce using rule 61 (term -> factor .)
    as              reduce using rule 61 (term -> factor .)
    SEMICOLON       reduce using rule 61 (term -> factor .)
    COMMA           reduce using rule 61 (term -> factor .)
    RBRACKET        reduce using rule 61 (term -> factor .)
    RBLOCK          reduce using rule 61 (term -> factor .)
    PLUSPLUS        shift and go to state 140
    MINUSMINUS      shift and go to state 141

    increment_decrement_op         shift and go to state 220

state 137

    (63) term -> increment_decrement_op . factor
    (64) factor -> . NUMBER
    (65) factor -> . VARIABLE
    (66) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 138
    VARIABLE        shift and go to state 139
    LPAREN          shift and go to state 132

    factor                         shift and go to state 221

state 138

    (64) factor -> NUMBER .

    PLUSPLUS        reduce using rule 64 (factor -> NUMBER .)
    MINUSMINUS      reduce using rule 64 (factor -> NUMBER .)
    PLUS            reduce using rule 64 (factor -> NUMBER .)
    MINUS           reduce using rule 64 (factor -> NUMBER .)
    TIMES           reduce using rule 64 (factor -> NUMBER .)
    DIVIDE          reduce using rule 64 (factor -> NUMBER .)
    MULEQUAL        reduce using rule 64 (factor -> NUMBER .)
    PLUSEQUAL       reduce using rule 64 (factor -> NUMBER .)
    MINUSEQUAL      reduce using rule 64 (factor -> NUMBER .)
    MOD             reduce using rule 64 (factor -> NUMBER .)
    BOOL_OR         reduce using rule 64 (factor -> NUMBER .)
    BOOL_AND        reduce using rule 64 (factor -> NUMBER .)
    NOT             reduce using rule 64 (factor -> NUMBER .)
    or              reduce using rule 64 (factor -> NUMBER .)
    and             reduce using rule 64 (factor -> NUMBER .)
    LESS            reduce using rule 64 (factor -> NUMBER .)
    LESSEQUAL       reduce using rule 64 (factor -> NUMBER .)
    GREATER         reduce using rule 64 (factor -> NUMBER .)
    GREATEREQUAL    reduce using rule 64 (factor -> NUMBER .)
    DEQUAL          reduce using rule 64 (factor -> NUMBER .)
    DISTINT         reduce using rule 64 (factor -> NUMBER .)
    DIVEQUAL        reduce using rule 64 (factor -> NUMBER .)
    ISEQUAL         reduce using rule 64 (factor -> NUMBER .)
    ISIDENTICAL     reduce using rule 64 (factor -> NUMBER .)
    ISNOTIDENTICAL  reduce using rule 64 (factor -> NUMBER .)
    RPAREN          reduce using rule 64 (factor -> NUMBER .)
    as              reduce using rule 64 (factor -> NUMBER .)
    SEMICOLON       reduce using rule 64 (factor -> NUMBER .)
    COMMA           reduce using rule 64 (factor -> NUMBER .)
    RBRACKET        reduce using rule 64 (factor -> NUMBER .)
    RBLOCK          reduce using rule 64 (factor -> NUMBER .)


state 139

    (65) factor -> VARIABLE .

    PLUSPLUS        reduce using rule 65 (factor -> VARIABLE .)
    MINUSMINUS      reduce using rule 65 (factor -> VARIABLE .)
    PLUS            reduce using rule 65 (factor -> VARIABLE .)
    MINUS           reduce using rule 65 (factor -> VARIABLE .)
    TIMES           reduce using rule 65 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 65 (factor -> VARIABLE .)
    MULEQUAL        reduce using rule 65 (factor -> VARIABLE .)
    PLUSEQUAL       reduce using rule 65 (factor -> VARIABLE .)
    MINUSEQUAL      reduce using rule 65 (factor -> VARIABLE .)
    MOD             reduce using rule 65 (factor -> VARIABLE .)
    BOOL_OR         reduce using rule 65 (factor -> VARIABLE .)
    BOOL_AND        reduce using rule 65 (factor -> VARIABLE .)
    NOT             reduce using rule 65 (factor -> VARIABLE .)
    or              reduce using rule 65 (factor -> VARIABLE .)
    and             reduce using rule 65 (factor -> VARIABLE .)
    LESS            reduce using rule 65 (factor -> VARIABLE .)
    LESSEQUAL       reduce using rule 65 (factor -> VARIABLE .)
    GREATER         reduce using rule 65 (factor -> VARIABLE .)
    GREATEREQUAL    reduce using rule 65 (factor -> VARIABLE .)
    DEQUAL          reduce using rule 65 (factor -> VARIABLE .)
    DISTINT         reduce using rule 65 (factor -> VARIABLE .)
    DIVEQUAL        reduce using rule 65 (factor -> VARIABLE .)
    ISEQUAL         reduce using rule 65 (factor -> VARIABLE .)
    ISIDENTICAL     reduce using rule 65 (factor -> VARIABLE .)
    ISNOTIDENTICAL  reduce using rule 65 (factor -> VARIABLE .)
    RPAREN          reduce using rule 65 (factor -> VARIABLE .)
    as              reduce using rule 65 (factor -> VARIABLE .)
    SEMICOLON       reduce using rule 65 (factor -> VARIABLE .)
    COMMA           reduce using rule 65 (factor -> VARIABLE .)
    RBRACKET        reduce using rule 65 (factor -> VARIABLE .)
    RBLOCK          reduce using rule 65 (factor -> VARIABLE .)


state 140

    (67) increment_decrement_op -> PLUSPLUS .

    NUMBER          reduce using rule 67 (increment_decrement_op -> PLUSPLUS .)
    VARIABLE        reduce using rule 67 (increment_decrement_op -> PLUSPLUS .)
    LPAREN          reduce using rule 67 (increment_decrement_op -> PLUSPLUS .)
    PLUS            reduce using rule 67 (increment_decrement_op -> PLUSPLUS .)
    MINUS           reduce using rule 67 (increment_decrement_op -> PLUSPLUS .)
    TIMES           reduce using rule 67 (increment_decrement_op -> PLUSPLUS .)
    DIVIDE          reduce using rule 67 (increment_decrement_op -> PLUSPLUS .)
    MULEQUAL        reduce using rule 67 (increment_decrement_op -> PLUSPLUS .)
    PLUSEQUAL       reduce using rule 67 (increment_decrement_op -> PLUSPLUS .)
    MINUSEQUAL      reduce using rule 67 (increment_decrement_op -> PLUSPLUS .)
    MOD             reduce using rule 67 (increment_decrement_op -> PLUSPLUS .)
    BOOL_OR         reduce using rule 67 (increment_decrement_op -> PLUSPLUS .)
    BOOL_AND        reduce using rule 67 (increment_decrement_op -> PLUSPLUS .)
    NOT             reduce using rule 67 (increment_decrement_op -> PLUSPLUS .)
    or              reduce using rule 67 (increment_decrement_op -> PLUSPLUS .)
    and             reduce using rule 67 (increment_decrement_op -> PLUSPLUS .)
    LESS            reduce using rule 67 (increment_decrement_op -> PLUSPLUS .)
    LESSEQUAL       reduce using rule 67 (increment_decrement_op -> PLUSPLUS .)
    GREATER         reduce using rule 67 (increment_decrement_op -> PLUSPLUS .)
    GREATEREQUAL    reduce using rule 67 (increment_decrement_op -> PLUSPLUS .)
    DEQUAL          reduce using rule 67 (increment_decrement_op -> PLUSPLUS .)
    DISTINT         reduce using rule 67 (increment_decrement_op -> PLUSPLUS .)
    DIVEQUAL        reduce using rule 67 (increment_decrement_op -> PLUSPLUS .)
    ISEQUAL         reduce using rule 67 (increment_decrement_op -> PLUSPLUS .)
    ISIDENTICAL     reduce using rule 67 (increment_decrement_op -> PLUSPLUS .)
    ISNOTIDENTICAL  reduce using rule 67 (increment_decrement_op -> PLUSPLUS .)
    RPAREN          reduce using rule 67 (increment_decrement_op -> PLUSPLUS .)
    as              reduce using rule 67 (increment_decrement_op -> PLUSPLUS .)
    SEMICOLON       reduce using rule 67 (increment_decrement_op -> PLUSPLUS .)
    COMMA           reduce using rule 67 (increment_decrement_op -> PLUSPLUS .)
    RBRACKET        reduce using rule 67 (increment_decrement_op -> PLUSPLUS .)
    RBLOCK          reduce using rule 67 (increment_decrement_op -> PLUSPLUS .)


state 141

    (68) increment_decrement_op -> MINUSMINUS .

    NUMBER          reduce using rule 68 (increment_decrement_op -> MINUSMINUS .)
    VARIABLE        reduce using rule 68 (increment_decrement_op -> MINUSMINUS .)
    LPAREN          reduce using rule 68 (increment_decrement_op -> MINUSMINUS .)
    PLUS            reduce using rule 68 (increment_decrement_op -> MINUSMINUS .)
    MINUS           reduce using rule 68 (increment_decrement_op -> MINUSMINUS .)
    TIMES           reduce using rule 68 (increment_decrement_op -> MINUSMINUS .)
    DIVIDE          reduce using rule 68 (increment_decrement_op -> MINUSMINUS .)
    MULEQUAL        reduce using rule 68 (increment_decrement_op -> MINUSMINUS .)
    PLUSEQUAL       reduce using rule 68 (increment_decrement_op -> MINUSMINUS .)
    MINUSEQUAL      reduce using rule 68 (increment_decrement_op -> MINUSMINUS .)
    MOD             reduce using rule 68 (increment_decrement_op -> MINUSMINUS .)
    BOOL_OR         reduce using rule 68 (increment_decrement_op -> MINUSMINUS .)
    BOOL_AND        reduce using rule 68 (increment_decrement_op -> MINUSMINUS .)
    NOT             reduce using rule 68 (increment_decrement_op -> MINUSMINUS .)
    or              reduce using rule 68 (increment_decrement_op -> MINUSMINUS .)
    and             reduce using rule 68 (increment_decrement_op -> MINUSMINUS .)
    LESS            reduce using rule 68 (increment_decrement_op -> MINUSMINUS .)
    LESSEQUAL       reduce using rule 68 (increment_decrement_op -> MINUSMINUS .)
    GREATER         reduce using rule 68 (increment_decrement_op -> MINUSMINUS .)
    GREATEREQUAL    reduce using rule 68 (increment_decrement_op -> MINUSMINUS .)
    DEQUAL          reduce using rule 68 (increment_decrement_op -> MINUSMINUS .)
    DISTINT         reduce using rule 68 (increment_decrement_op -> MINUSMINUS .)
    DIVEQUAL        reduce using rule 68 (increment_decrement_op -> MINUSMINUS .)
    ISEQUAL         reduce using rule 68 (increment_decrement_op -> MINUSMINUS .)
    ISIDENTICAL     reduce using rule 68 (increment_decrement_op -> MINUSMINUS .)
    ISNOTIDENTICAL  reduce using rule 68 (increment_decrement_op -> MINUSMINUS .)
    RPAREN          reduce using rule 68 (increment_decrement_op -> MINUSMINUS .)
    as              reduce using rule 68 (increment_decrement_op -> MINUSMINUS .)
    SEMICOLON       reduce using rule 68 (increment_decrement_op -> MINUSMINUS .)
    COMMA           reduce using rule 68 (increment_decrement_op -> MINUSMINUS .)
    RBRACKET        reduce using rule 68 (increment_decrement_op -> MINUSMINUS .)
    RBLOCK          reduce using rule 68 (increment_decrement_op -> MINUSMINUS .)


state 142

    (92) if_statement -> if LPAREN expression . RPAREN LBLOCK declaration_list RBLOCK else_part

    RPAREN          shift and go to state 222


state 143

    (97) fun_declaration -> function ID LPAREN . params RPAREN LBLOCK declaration RBLOCK
    (101) params -> . single_param
    (102) params -> . params COMMA single_param
    (103) single_param -> . var_declaration2
    (104) single_param -> . data_type
    (105) single_param -> . empty_function
    (38) var_declaration2 -> . VARIABLE
    (39) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (40) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL CADENA
    (42) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (43) var_declaration2 -> . VARIABLE EQUAL expression
    (44) var_declaration2 -> . Built_In_Declaration
    (45) var_declaration2 -> . Concatenar_Cadenas_declaration
    (46) var_declaration2 -> . VARIABLE assignment_tail
    (47) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (25) data_type -> . NUMBER
    (26) data_type -> . CADENA
    (137) empty_function -> .
    (112) Built_In_Declaration -> . array LPAREN params RPAREN
    (113) Built_In_Declaration -> . pow LPAREN params RPAREN
    (114) Built_In_Declaration -> . POW LPAREN params RPAREN
    (115) Built_In_Declaration -> . abs LPAREN params RPAREN
    (116) Built_In_Declaration -> . cos LPAREN params RPAREN
    (117) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (118) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (119) Built_In_Declaration -> . die LPAREN params RPAREN
    (120) Built_In_Declaration -> . exp LPAREN params RPAREN
    (121) Built_In_Declaration -> . floor LPAREN params RPAREN
    (122) Built_In_Declaration -> . isset LPAREN params RPAREN
    (123) Built_In_Declaration -> . list LPAREN params RPAREN
    (124) Built_In_Declaration -> . log LPAREN params RPAREN
    (125) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (126) Built_In_Declaration -> . max LPAREN params RPAREN
    (127) Built_In_Declaration -> . min LPAREN params RPAREN
    (128) Built_In_Declaration -> . rand LPAREN params RPAREN
    (129) Built_In_Declaration -> . round LPAREN params RPAREN
    (130) Built_In_Declaration -> . sin LPAREN params RPAREN
    (131) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (132) Built_In_Declaration -> . unset LPAREN params RPAREN
    (133) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (134) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (135) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 41
    NUMBER          shift and go to state 74
    CADENA          shift and go to state 75
    RPAREN          reduce using rule 137 (empty_function -> .)
    COMMA           reduce using rule 137 (empty_function -> .)
    array           shift and go to state 44
    pow             shift and go to state 45
    POW             shift and go to state 46
    abs             shift and go to state 47
    cos             shift and go to state 48
    deg2rad         shift and go to state 49
    rad2deg         shift and go to state 50
    die             shift and go to state 51
    exp             shift and go to state 52
    floor           shift and go to state 53
    isset           shift and go to state 54
    list            shift and go to state 55
    log             shift and go to state 56
    log10           shift and go to state 57
    max             shift and go to state 58
    min             shift and go to state 59
    rand            shift and go to state 60
    round           shift and go to state 61
    sin             shift and go to state 62
    sqrt            shift and go to state 63
    unset           shift and go to state 64

    params                         shift and go to state 223
    single_param                   shift and go to state 120
    var_declaration2               shift and go to state 121
    data_type                      shift and go to state 122
    empty_function                 shift and go to state 123
    Built_In_Declaration           shift and go to state 42
    Concatenar_Cadenas_declaration shift and go to state 43

state 144

    (99) obj_declaration -> class ID LBLOCK . declaration RBLOCK
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . obj_declaration
    (19) declaration -> . create_obj_declaration
    (20) declaration -> . footer_declaration
    (21) declaration -> . for_loop
    (22) declaration -> . foreach_loop
    (23) declaration -> . exit_statement
    (24) declaration -> . empty
    (27) header_declaration -> . include CADENA SEMICOLON
    (37) var_declaration -> . var_declaration2 SEMICOLON
    (28) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (29) print_declaration -> . print var_declaration2 SEMICOLON
    (30) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (31) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (32) print_declaration -> . print data_type SEMICOLON
    (33) echo_declaration -> . echo var_declaration2 SEMICOLON
    (34) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (35) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (36) echo_declaration -> . echo data_type SEMICOLON
    (54) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (92) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (97) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration RBLOCK
    (98) fun_call -> . ID LPAREN params RPAREN
    (99) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (100) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (106) for_loop -> . for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK
    (111) foreach_loop -> . foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK
    (110) exit_statement -> . exit LPAREN expression RPAREN SEMICOLON
    (38) var_declaration2 -> . VARIABLE
    (39) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (40) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL CADENA
    (42) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (43) var_declaration2 -> . VARIABLE EQUAL expression
    (44) var_declaration2 -> . Built_In_Declaration
    (45) var_declaration2 -> . Concatenar_Cadenas_declaration
    (46) var_declaration2 -> . VARIABLE assignment_tail
    (47) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (112) Built_In_Declaration -> . array LPAREN params RPAREN
    (113) Built_In_Declaration -> . pow LPAREN params RPAREN
    (114) Built_In_Declaration -> . POW LPAREN params RPAREN
    (115) Built_In_Declaration -> . abs LPAREN params RPAREN
    (116) Built_In_Declaration -> . cos LPAREN params RPAREN
    (117) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (118) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (119) Built_In_Declaration -> . die LPAREN params RPAREN
    (120) Built_In_Declaration -> . exp LPAREN params RPAREN
    (121) Built_In_Declaration -> . floor LPAREN params RPAREN
    (122) Built_In_Declaration -> . isset LPAREN params RPAREN
    (123) Built_In_Declaration -> . list LPAREN params RPAREN
    (124) Built_In_Declaration -> . log LPAREN params RPAREN
    (125) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (126) Built_In_Declaration -> . max LPAREN params RPAREN
    (127) Built_In_Declaration -> . min LPAREN params RPAREN
    (128) Built_In_Declaration -> . rand LPAREN params RPAREN
    (129) Built_In_Declaration -> . round LPAREN params RPAREN
    (130) Built_In_Declaration -> . sin LPAREN params RPAREN
    (131) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (132) Built_In_Declaration -> . unset LPAREN params RPAREN
    (133) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (134) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (135) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 24
    include         shift and go to state 25
    const           shift and go to state 28
    print           shift and go to state 30
    echo            shift and go to state 31
    while           shift and go to state 32
    if              shift and go to state 33
    function        shift and go to state 34
    ID              shift and go to state 29
    class           shift and go to state 35
    new             shift and go to state 36
    CLOSE_TAG       shift and go to state 37
    for             shift and go to state 38
    foreach         shift and go to state 39
    exit            shift and go to state 40
    VARIABLE        shift and go to state 41
    array           shift and go to state 44
    pow             shift and go to state 45
    POW             shift and go to state 46
    abs             shift and go to state 47
    cos             shift and go to state 48
    deg2rad         shift and go to state 49
    rad2deg         shift and go to state 50
    die             shift and go to state 51
    exp             shift and go to state 52
    floor           shift and go to state 53
    isset           shift and go to state 54
    list            shift and go to state 55
    log             shift and go to state 56
    log10           shift and go to state 57
    max             shift and go to state 58
    min             shift and go to state 59
    rand            shift and go to state 60
    round           shift and go to state 61
    sin             shift and go to state 62
    sqrt            shift and go to state 63
    unset           shift and go to state 64
    CADENA          shift and go to state 26

    declaration                    shift and go to state 224
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    obj_declaration                shift and go to state 18
    create_obj_declaration         shift and go to state 19
    footer_declaration             shift and go to state 20
    for_loop                       shift and go to state 21
    foreach_loop                   shift and go to state 22
    exit_statement                 shift and go to state 23
    var_declaration2               shift and go to state 27
    Built_In_Declaration           shift and go to state 42
    Concatenar_Cadenas_declaration shift and go to state 43

state 145

    (100) create_obj_declaration -> new ID LPAREN . params RPAREN
    (101) params -> . single_param
    (102) params -> . params COMMA single_param
    (103) single_param -> . var_declaration2
    (104) single_param -> . data_type
    (105) single_param -> . empty_function
    (38) var_declaration2 -> . VARIABLE
    (39) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (40) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL CADENA
    (42) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (43) var_declaration2 -> . VARIABLE EQUAL expression
    (44) var_declaration2 -> . Built_In_Declaration
    (45) var_declaration2 -> . Concatenar_Cadenas_declaration
    (46) var_declaration2 -> . VARIABLE assignment_tail
    (47) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (25) data_type -> . NUMBER
    (26) data_type -> . CADENA
    (137) empty_function -> .
    (112) Built_In_Declaration -> . array LPAREN params RPAREN
    (113) Built_In_Declaration -> . pow LPAREN params RPAREN
    (114) Built_In_Declaration -> . POW LPAREN params RPAREN
    (115) Built_In_Declaration -> . abs LPAREN params RPAREN
    (116) Built_In_Declaration -> . cos LPAREN params RPAREN
    (117) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (118) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (119) Built_In_Declaration -> . die LPAREN params RPAREN
    (120) Built_In_Declaration -> . exp LPAREN params RPAREN
    (121) Built_In_Declaration -> . floor LPAREN params RPAREN
    (122) Built_In_Declaration -> . isset LPAREN params RPAREN
    (123) Built_In_Declaration -> . list LPAREN params RPAREN
    (124) Built_In_Declaration -> . log LPAREN params RPAREN
    (125) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (126) Built_In_Declaration -> . max LPAREN params RPAREN
    (127) Built_In_Declaration -> . min LPAREN params RPAREN
    (128) Built_In_Declaration -> . rand LPAREN params RPAREN
    (129) Built_In_Declaration -> . round LPAREN params RPAREN
    (130) Built_In_Declaration -> . sin LPAREN params RPAREN
    (131) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (132) Built_In_Declaration -> . unset LPAREN params RPAREN
    (133) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (134) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (135) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 41
    NUMBER          shift and go to state 74
    CADENA          shift and go to state 75
    RPAREN          reduce using rule 137 (empty_function -> .)
    COMMA           reduce using rule 137 (empty_function -> .)
    array           shift and go to state 44
    pow             shift and go to state 45
    POW             shift and go to state 46
    abs             shift and go to state 47
    cos             shift and go to state 48
    deg2rad         shift and go to state 49
    rad2deg         shift and go to state 50
    die             shift and go to state 51
    exp             shift and go to state 52
    floor           shift and go to state 53
    isset           shift and go to state 54
    list            shift and go to state 55
    log             shift and go to state 56
    log10           shift and go to state 57
    max             shift and go to state 58
    min             shift and go to state 59
    rand            shift and go to state 60
    round           shift and go to state 61
    sin             shift and go to state 62
    sqrt            shift and go to state 63
    unset           shift and go to state 64

    params                         shift and go to state 225
    single_param                   shift and go to state 120
    var_declaration2               shift and go to state 121
    data_type                      shift and go to state 122
    empty_function                 shift and go to state 123
    Built_In_Declaration           shift and go to state 42
    Concatenar_Cadenas_declaration shift and go to state 43

state 146

    (106) for_loop -> for LPAREN for_init . for_expr for_update RPAREN LBLOCK declaration_list RBLOCK
    (108) for_expr -> . expression SEMICOLON
    (55) expression -> . additive_expression
    (56) expression -> . additive_expression logical_op additive_expression
    (57) expression -> . additive_expression comp_op additive_expression
    (58) expression -> . additive_expression comp_op additive_expression logical_op additive_expression comp_op additive_expression
    (59) additive_expression -> . term
    (60) additive_expression -> . term math_op term
    (61) term -> . factor
    (62) term -> . factor increment_decrement_op
    (63) term -> . increment_decrement_op factor
    (64) factor -> . NUMBER
    (65) factor -> . VARIABLE
    (66) factor -> . LPAREN expression RPAREN
    (67) increment_decrement_op -> . PLUSPLUS
    (68) increment_decrement_op -> . MINUSMINUS

    NUMBER          shift and go to state 138
    VARIABLE        shift and go to state 139
    LPAREN          shift and go to state 132
    PLUSPLUS        shift and go to state 140
    MINUSMINUS      shift and go to state 141

    for_expr                       shift and go to state 226
    expression                     shift and go to state 227
    additive_expression            shift and go to state 134
    term                           shift and go to state 135
    factor                         shift and go to state 136
    increment_decrement_op         shift and go to state 137

state 147

    (107) for_init -> var_declaration2 . SEMICOLON

    SEMICOLON       shift and go to state 228


state 148

    (111) foreach_loop -> foreach LPAREN expression . as expression RPAREN LBLOCK declaration_list RBLOCK

    as              shift and go to state 229


state 149

    (110) exit_statement -> exit LPAREN expression . RPAREN SEMICOLON

    RPAREN          shift and go to state 230


state 150

    (51) assignment_tail -> VARIABLE LBRACKET . expression COMMA params
    (52) assignment_tail -> VARIABLE LBRACKET . params RBRACKET
    (55) expression -> . additive_expression
    (56) expression -> . additive_expression logical_op additive_expression
    (57) expression -> . additive_expression comp_op additive_expression
    (58) expression -> . additive_expression comp_op additive_expression logical_op additive_expression comp_op additive_expression
    (101) params -> . single_param
    (102) params -> . params COMMA single_param
    (59) additive_expression -> . term
    (60) additive_expression -> . term math_op term
    (103) single_param -> . var_declaration2
    (104) single_param -> . data_type
    (105) single_param -> . empty_function
    (61) term -> . factor
    (62) term -> . factor increment_decrement_op
    (63) term -> . increment_decrement_op factor
    (38) var_declaration2 -> . VARIABLE
    (39) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (40) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL CADENA
    (42) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (43) var_declaration2 -> . VARIABLE EQUAL expression
    (44) var_declaration2 -> . Built_In_Declaration
    (45) var_declaration2 -> . Concatenar_Cadenas_declaration
    (46) var_declaration2 -> . VARIABLE assignment_tail
    (47) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (25) data_type -> . NUMBER
    (26) data_type -> . CADENA
    (137) empty_function -> .
    (64) factor -> . NUMBER
    (65) factor -> . VARIABLE
    (66) factor -> . LPAREN expression RPAREN
    (67) increment_decrement_op -> . PLUSPLUS
    (68) increment_decrement_op -> . MINUSMINUS
    (112) Built_In_Declaration -> . array LPAREN params RPAREN
    (113) Built_In_Declaration -> . pow LPAREN params RPAREN
    (114) Built_In_Declaration -> . POW LPAREN params RPAREN
    (115) Built_In_Declaration -> . abs LPAREN params RPAREN
    (116) Built_In_Declaration -> . cos LPAREN params RPAREN
    (117) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (118) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (119) Built_In_Declaration -> . die LPAREN params RPAREN
    (120) Built_In_Declaration -> . exp LPAREN params RPAREN
    (121) Built_In_Declaration -> . floor LPAREN params RPAREN
    (122) Built_In_Declaration -> . isset LPAREN params RPAREN
    (123) Built_In_Declaration -> . list LPAREN params RPAREN
    (124) Built_In_Declaration -> . log LPAREN params RPAREN
    (125) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (126) Built_In_Declaration -> . max LPAREN params RPAREN
    (127) Built_In_Declaration -> . min LPAREN params RPAREN
    (128) Built_In_Declaration -> . rand LPAREN params RPAREN
    (129) Built_In_Declaration -> . round LPAREN params RPAREN
    (130) Built_In_Declaration -> . sin LPAREN params RPAREN
    (131) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (132) Built_In_Declaration -> . unset LPAREN params RPAREN
    (133) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (134) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (135) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 231
    NUMBER          shift and go to state 234
    CADENA          shift and go to state 75
    RBRACKET        reduce using rule 137 (empty_function -> .)
    COMMA           reduce using rule 137 (empty_function -> .)
    LPAREN          shift and go to state 132
    PLUSPLUS        shift and go to state 140
    MINUSMINUS      shift and go to state 141
    array           shift and go to state 44
    pow             shift and go to state 45
    POW             shift and go to state 46
    abs             shift and go to state 47
    cos             shift and go to state 48
    deg2rad         shift and go to state 49
    rad2deg         shift and go to state 50
    die             shift and go to state 51
    exp             shift and go to state 52
    floor           shift and go to state 53
    isset           shift and go to state 54
    list            shift and go to state 55
    log             shift and go to state 56
    log10           shift and go to state 57
    max             shift and go to state 58
    min             shift and go to state 59
    rand            shift and go to state 60
    round           shift and go to state 61
    sin             shift and go to state 62
    sqrt            shift and go to state 63
    unset           shift and go to state 64

    expression                     shift and go to state 232
    params                         shift and go to state 233
    additive_expression            shift and go to state 134
    single_param                   shift and go to state 120
    term                           shift and go to state 135
    var_declaration2               shift and go to state 121
    data_type                      shift and go to state 122
    empty_function                 shift and go to state 123
    factor                         shift and go to state 136
    increment_decrement_op         shift and go to state 137
    Built_In_Declaration           shift and go to state 42
    Concatenar_Cadenas_declaration shift and go to state 43

state 151

    (53) assignment_tail -> VARIABLE LBLOCK . params RBLOCK
    (101) params -> . single_param
    (102) params -> . params COMMA single_param
    (103) single_param -> . var_declaration2
    (104) single_param -> . data_type
    (105) single_param -> . empty_function
    (38) var_declaration2 -> . VARIABLE
    (39) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (40) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL CADENA
    (42) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (43) var_declaration2 -> . VARIABLE EQUAL expression
    (44) var_declaration2 -> . Built_In_Declaration
    (45) var_declaration2 -> . Concatenar_Cadenas_declaration
    (46) var_declaration2 -> . VARIABLE assignment_tail
    (47) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (25) data_type -> . NUMBER
    (26) data_type -> . CADENA
    (137) empty_function -> .
    (112) Built_In_Declaration -> . array LPAREN params RPAREN
    (113) Built_In_Declaration -> . pow LPAREN params RPAREN
    (114) Built_In_Declaration -> . POW LPAREN params RPAREN
    (115) Built_In_Declaration -> . abs LPAREN params RPAREN
    (116) Built_In_Declaration -> . cos LPAREN params RPAREN
    (117) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (118) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (119) Built_In_Declaration -> . die LPAREN params RPAREN
    (120) Built_In_Declaration -> . exp LPAREN params RPAREN
    (121) Built_In_Declaration -> . floor LPAREN params RPAREN
    (122) Built_In_Declaration -> . isset LPAREN params RPAREN
    (123) Built_In_Declaration -> . list LPAREN params RPAREN
    (124) Built_In_Declaration -> . log LPAREN params RPAREN
    (125) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (126) Built_In_Declaration -> . max LPAREN params RPAREN
    (127) Built_In_Declaration -> . min LPAREN params RPAREN
    (128) Built_In_Declaration -> . rand LPAREN params RPAREN
    (129) Built_In_Declaration -> . round LPAREN params RPAREN
    (130) Built_In_Declaration -> . sin LPAREN params RPAREN
    (131) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (132) Built_In_Declaration -> . unset LPAREN params RPAREN
    (133) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (134) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (135) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 41
    NUMBER          shift and go to state 74
    CADENA          shift and go to state 75
    RBLOCK          reduce using rule 137 (empty_function -> .)
    COMMA           reduce using rule 137 (empty_function -> .)
    array           shift and go to state 44
    pow             shift and go to state 45
    POW             shift and go to state 46
    abs             shift and go to state 47
    cos             shift and go to state 48
    deg2rad         shift and go to state 49
    rad2deg         shift and go to state 50
    die             shift and go to state 51
    exp             shift and go to state 52
    floor           shift and go to state 53
    isset           shift and go to state 54
    list            shift and go to state 55
    log             shift and go to state 56
    log10           shift and go to state 57
    max             shift and go to state 58
    min             shift and go to state 59
    rand            shift and go to state 60
    round           shift and go to state 61
    sin             shift and go to state 62
    sqrt            shift and go to state 63
    unset           shift and go to state 64

    params                         shift and go to state 235
    single_param                   shift and go to state 120
    var_declaration2               shift and go to state 121
    data_type                      shift and go to state 122
    empty_function                 shift and go to state 123
    Built_In_Declaration           shift and go to state 42
    Concatenar_Cadenas_declaration shift and go to state 43

state 152

    (40) var_declaration2 -> VARIABLE EQUAL VARIABLE .
    (51) assignment_tail -> VARIABLE . LBRACKET expression COMMA params
    (52) assignment_tail -> VARIABLE . LBRACKET params RBRACKET
    (53) assignment_tail -> VARIABLE . LBLOCK params RBLOCK
    (65) factor -> VARIABLE .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 40 (var_declaration2 -> VARIABLE EQUAL VARIABLE .)
  ! reduce/reduce conflict for RPAREN resolved using rule 40 (var_declaration2 -> VARIABLE EQUAL VARIABLE .)
  ! reduce/reduce conflict for COMMA resolved using rule 40 (var_declaration2 -> VARIABLE EQUAL VARIABLE .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 40 (var_declaration2 -> VARIABLE EQUAL VARIABLE .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 40 (var_declaration2 -> VARIABLE EQUAL VARIABLE .)
    SEMICOLON       reduce using rule 40 (var_declaration2 -> VARIABLE EQUAL VARIABLE .)
    RPAREN          reduce using rule 40 (var_declaration2 -> VARIABLE EQUAL VARIABLE .)
    COMMA           reduce using rule 40 (var_declaration2 -> VARIABLE EQUAL VARIABLE .)
    RBRACKET        reduce using rule 40 (var_declaration2 -> VARIABLE EQUAL VARIABLE .)
    RBLOCK          reduce using rule 40 (var_declaration2 -> VARIABLE EQUAL VARIABLE .)
    LBRACKET        shift and go to state 150
    LBLOCK          shift and go to state 151
    PLUSPLUS        reduce using rule 65 (factor -> VARIABLE .)
    MINUSMINUS      reduce using rule 65 (factor -> VARIABLE .)
    PLUS            reduce using rule 65 (factor -> VARIABLE .)
    MINUS           reduce using rule 65 (factor -> VARIABLE .)
    TIMES           reduce using rule 65 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 65 (factor -> VARIABLE .)
    MULEQUAL        reduce using rule 65 (factor -> VARIABLE .)
    PLUSEQUAL       reduce using rule 65 (factor -> VARIABLE .)
    MINUSEQUAL      reduce using rule 65 (factor -> VARIABLE .)
    MOD             reduce using rule 65 (factor -> VARIABLE .)
    BOOL_OR         reduce using rule 65 (factor -> VARIABLE .)
    BOOL_AND        reduce using rule 65 (factor -> VARIABLE .)
    NOT             reduce using rule 65 (factor -> VARIABLE .)
    or              reduce using rule 65 (factor -> VARIABLE .)
    and             reduce using rule 65 (factor -> VARIABLE .)
    LESS            reduce using rule 65 (factor -> VARIABLE .)
    LESSEQUAL       reduce using rule 65 (factor -> VARIABLE .)
    GREATER         reduce using rule 65 (factor -> VARIABLE .)
    GREATEREQUAL    reduce using rule 65 (factor -> VARIABLE .)
    DEQUAL          reduce using rule 65 (factor -> VARIABLE .)
    DISTINT         reduce using rule 65 (factor -> VARIABLE .)
    DIVEQUAL        reduce using rule 65 (factor -> VARIABLE .)
    ISEQUAL         reduce using rule 65 (factor -> VARIABLE .)
    ISIDENTICAL     reduce using rule 65 (factor -> VARIABLE .)
    ISNOTIDENTICAL  reduce using rule 65 (factor -> VARIABLE .)

  ! SEMICOLON       [ reduce using rule 65 (factor -> VARIABLE .) ]
  ! RPAREN          [ reduce using rule 65 (factor -> VARIABLE .) ]
  ! COMMA           [ reduce using rule 65 (factor -> VARIABLE .) ]
  ! RBRACKET        [ reduce using rule 65 (factor -> VARIABLE .) ]
  ! RBLOCK          [ reduce using rule 65 (factor -> VARIABLE .) ]


state 153

    (39) var_declaration2 -> VARIABLE EQUAL NUMBER .
    (64) factor -> NUMBER .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 39 (var_declaration2 -> VARIABLE EQUAL NUMBER .)
  ! reduce/reduce conflict for RPAREN resolved using rule 39 (var_declaration2 -> VARIABLE EQUAL NUMBER .)
  ! reduce/reduce conflict for COMMA resolved using rule 39 (var_declaration2 -> VARIABLE EQUAL NUMBER .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 39 (var_declaration2 -> VARIABLE EQUAL NUMBER .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 39 (var_declaration2 -> VARIABLE EQUAL NUMBER .)
    SEMICOLON       reduce using rule 39 (var_declaration2 -> VARIABLE EQUAL NUMBER .)
    RPAREN          reduce using rule 39 (var_declaration2 -> VARIABLE EQUAL NUMBER .)
    COMMA           reduce using rule 39 (var_declaration2 -> VARIABLE EQUAL NUMBER .)
    RBRACKET        reduce using rule 39 (var_declaration2 -> VARIABLE EQUAL NUMBER .)
    RBLOCK          reduce using rule 39 (var_declaration2 -> VARIABLE EQUAL NUMBER .)
    PLUSPLUS        reduce using rule 64 (factor -> NUMBER .)
    MINUSMINUS      reduce using rule 64 (factor -> NUMBER .)
    PLUS            reduce using rule 64 (factor -> NUMBER .)
    MINUS           reduce using rule 64 (factor -> NUMBER .)
    TIMES           reduce using rule 64 (factor -> NUMBER .)
    DIVIDE          reduce using rule 64 (factor -> NUMBER .)
    MULEQUAL        reduce using rule 64 (factor -> NUMBER .)
    PLUSEQUAL       reduce using rule 64 (factor -> NUMBER .)
    MINUSEQUAL      reduce using rule 64 (factor -> NUMBER .)
    MOD             reduce using rule 64 (factor -> NUMBER .)
    BOOL_OR         reduce using rule 64 (factor -> NUMBER .)
    BOOL_AND        reduce using rule 64 (factor -> NUMBER .)
    NOT             reduce using rule 64 (factor -> NUMBER .)
    or              reduce using rule 64 (factor -> NUMBER .)
    and             reduce using rule 64 (factor -> NUMBER .)
    LESS            reduce using rule 64 (factor -> NUMBER .)
    LESSEQUAL       reduce using rule 64 (factor -> NUMBER .)
    GREATER         reduce using rule 64 (factor -> NUMBER .)
    GREATEREQUAL    reduce using rule 64 (factor -> NUMBER .)
    DEQUAL          reduce using rule 64 (factor -> NUMBER .)
    DISTINT         reduce using rule 64 (factor -> NUMBER .)
    DIVEQUAL        reduce using rule 64 (factor -> NUMBER .)
    ISEQUAL         reduce using rule 64 (factor -> NUMBER .)
    ISIDENTICAL     reduce using rule 64 (factor -> NUMBER .)
    ISNOTIDENTICAL  reduce using rule 64 (factor -> NUMBER .)

  ! SEMICOLON       [ reduce using rule 64 (factor -> NUMBER .) ]
  ! RPAREN          [ reduce using rule 64 (factor -> NUMBER .) ]
  ! COMMA           [ reduce using rule 64 (factor -> NUMBER .) ]
  ! RBRACKET        [ reduce using rule 64 (factor -> NUMBER .) ]
  ! RBLOCK          [ reduce using rule 64 (factor -> NUMBER .) ]


state 154

    (41) var_declaration2 -> VARIABLE EQUAL CADENA .

    SEMICOLON       reduce using rule 41 (var_declaration2 -> VARIABLE EQUAL CADENA .)
    RPAREN          reduce using rule 41 (var_declaration2 -> VARIABLE EQUAL CADENA .)
    COMMA           reduce using rule 41 (var_declaration2 -> VARIABLE EQUAL CADENA .)
    RBRACKET        reduce using rule 41 (var_declaration2 -> VARIABLE EQUAL CADENA .)
    RBLOCK          reduce using rule 41 (var_declaration2 -> VARIABLE EQUAL CADENA .)


state 155

    (42) var_declaration2 -> VARIABLE EQUAL Built_In_Declaration .

    SEMICOLON       reduce using rule 42 (var_declaration2 -> VARIABLE EQUAL Built_In_Declaration .)
    RPAREN          reduce using rule 42 (var_declaration2 -> VARIABLE EQUAL Built_In_Declaration .)
    COMMA           reduce using rule 42 (var_declaration2 -> VARIABLE EQUAL Built_In_Declaration .)
    RBRACKET        reduce using rule 42 (var_declaration2 -> VARIABLE EQUAL Built_In_Declaration .)
    RBLOCK          reduce using rule 42 (var_declaration2 -> VARIABLE EQUAL Built_In_Declaration .)


state 156

    (43) var_declaration2 -> VARIABLE EQUAL expression .

    SEMICOLON       reduce using rule 43 (var_declaration2 -> VARIABLE EQUAL expression .)
    RPAREN          reduce using rule 43 (var_declaration2 -> VARIABLE EQUAL expression .)
    COMMA           reduce using rule 43 (var_declaration2 -> VARIABLE EQUAL expression .)
    RBRACKET        reduce using rule 43 (var_declaration2 -> VARIABLE EQUAL expression .)
    RBLOCK          reduce using rule 43 (var_declaration2 -> VARIABLE EQUAL expression .)


state 157

    (47) var_declaration2 -> VARIABLE EQUAL assignment_tail .

    SEMICOLON       reduce using rule 47 (var_declaration2 -> VARIABLE EQUAL assignment_tail .)
    RPAREN          reduce using rule 47 (var_declaration2 -> VARIABLE EQUAL assignment_tail .)
    COMMA           reduce using rule 47 (var_declaration2 -> VARIABLE EQUAL assignment_tail .)
    RBRACKET        reduce using rule 47 (var_declaration2 -> VARIABLE EQUAL assignment_tail .)
    RBLOCK          reduce using rule 47 (var_declaration2 -> VARIABLE EQUAL assignment_tail .)


state 158

    (133) Concatenar_Cadenas_declaration -> VARIABLE DOT VARIABLE .

    SEMICOLON       reduce using rule 133 (Concatenar_Cadenas_declaration -> VARIABLE DOT VARIABLE .)
    RPAREN          reduce using rule 133 (Concatenar_Cadenas_declaration -> VARIABLE DOT VARIABLE .)
    COMMA           reduce using rule 133 (Concatenar_Cadenas_declaration -> VARIABLE DOT VARIABLE .)
    RBRACKET        reduce using rule 133 (Concatenar_Cadenas_declaration -> VARIABLE DOT VARIABLE .)
    RBLOCK          reduce using rule 133 (Concatenar_Cadenas_declaration -> VARIABLE DOT VARIABLE .)


state 159

    (136) Concatenar_Cadenas_declaration -> VARIABLE DOT CADENA .

    SEMICOLON       reduce using rule 136 (Concatenar_Cadenas_declaration -> VARIABLE DOT CADENA .)
    RPAREN          reduce using rule 136 (Concatenar_Cadenas_declaration -> VARIABLE DOT CADENA .)
    COMMA           reduce using rule 136 (Concatenar_Cadenas_declaration -> VARIABLE DOT CADENA .)
    RBRACKET        reduce using rule 136 (Concatenar_Cadenas_declaration -> VARIABLE DOT CADENA .)
    RBLOCK          reduce using rule 136 (Concatenar_Cadenas_declaration -> VARIABLE DOT CADENA .)


state 160

    (48) assignment_tail -> COMMA var_declaration2 .

    SEMICOLON       reduce using rule 48 (assignment_tail -> COMMA var_declaration2 .)
    RPAREN          reduce using rule 48 (assignment_tail -> COMMA var_declaration2 .)
    COMMA           reduce using rule 48 (assignment_tail -> COMMA var_declaration2 .)
    RBRACKET        reduce using rule 48 (assignment_tail -> COMMA var_declaration2 .)
    RBLOCK          reduce using rule 48 (assignment_tail -> COMMA var_declaration2 .)


state 161

    (49) assignment_tail -> LBRACKET params . RBRACKET
    (102) params -> params . COMMA single_param

    RBRACKET        shift and go to state 236
    COMMA           shift and go to state 187


state 162

    (50) assignment_tail -> LBLOCK params . RBLOCK
    (102) params -> params . COMMA single_param

    RBLOCK          shift and go to state 237
    COMMA           shift and go to state 187


state 163

    (112) Built_In_Declaration -> array LPAREN params . RPAREN
    (102) params -> params . COMMA single_param

    RPAREN          shift and go to state 238
    COMMA           shift and go to state 187


state 164

    (113) Built_In_Declaration -> pow LPAREN params . RPAREN
    (102) params -> params . COMMA single_param

    RPAREN          shift and go to state 239
    COMMA           shift and go to state 187


state 165

    (114) Built_In_Declaration -> POW LPAREN params . RPAREN
    (102) params -> params . COMMA single_param

    RPAREN          shift and go to state 240
    COMMA           shift and go to state 187


state 166

    (115) Built_In_Declaration -> abs LPAREN params . RPAREN
    (102) params -> params . COMMA single_param

    RPAREN          shift and go to state 241
    COMMA           shift and go to state 187


state 167

    (116) Built_In_Declaration -> cos LPAREN params . RPAREN
    (102) params -> params . COMMA single_param

    RPAREN          shift and go to state 242
    COMMA           shift and go to state 187


state 168

    (117) Built_In_Declaration -> deg2rad LPAREN params . RPAREN
    (102) params -> params . COMMA single_param

    RPAREN          shift and go to state 243
    COMMA           shift and go to state 187


state 169

    (118) Built_In_Declaration -> rad2deg LPAREN params . RPAREN
    (102) params -> params . COMMA single_param

    RPAREN          shift and go to state 244
    COMMA           shift and go to state 187


state 170

    (119) Built_In_Declaration -> die LPAREN params . RPAREN
    (102) params -> params . COMMA single_param

    RPAREN          shift and go to state 245
    COMMA           shift and go to state 187


state 171

    (120) Built_In_Declaration -> exp LPAREN params . RPAREN
    (102) params -> params . COMMA single_param

    RPAREN          shift and go to state 246
    COMMA           shift and go to state 187


state 172

    (121) Built_In_Declaration -> floor LPAREN params . RPAREN
    (102) params -> params . COMMA single_param

    RPAREN          shift and go to state 247
    COMMA           shift and go to state 187


state 173

    (122) Built_In_Declaration -> isset LPAREN params . RPAREN
    (102) params -> params . COMMA single_param

    RPAREN          shift and go to state 248
    COMMA           shift and go to state 187


state 174

    (123) Built_In_Declaration -> list LPAREN params . RPAREN
    (102) params -> params . COMMA single_param

    RPAREN          shift and go to state 249
    COMMA           shift and go to state 187


state 175

    (124) Built_In_Declaration -> log LPAREN params . RPAREN
    (102) params -> params . COMMA single_param

    RPAREN          shift and go to state 250
    COMMA           shift and go to state 187


state 176

    (125) Built_In_Declaration -> log10 LPAREN params . RPAREN
    (102) params -> params . COMMA single_param

    RPAREN          shift and go to state 251
    COMMA           shift and go to state 187


state 177

    (126) Built_In_Declaration -> max LPAREN params . RPAREN
    (102) params -> params . COMMA single_param

    RPAREN          shift and go to state 252
    COMMA           shift and go to state 187


state 178

    (127) Built_In_Declaration -> min LPAREN params . RPAREN
    (102) params -> params . COMMA single_param

    RPAREN          shift and go to state 253
    COMMA           shift and go to state 187


state 179

    (128) Built_In_Declaration -> rand LPAREN params . RPAREN
    (102) params -> params . COMMA single_param

    RPAREN          shift and go to state 254
    COMMA           shift and go to state 187


state 180

    (129) Built_In_Declaration -> round LPAREN params . RPAREN
    (102) params -> params . COMMA single_param

    RPAREN          shift and go to state 255
    COMMA           shift and go to state 187


state 181

    (130) Built_In_Declaration -> sin LPAREN params . RPAREN
    (102) params -> params . COMMA single_param

    RPAREN          shift and go to state 256
    COMMA           shift and go to state 187


state 182

    (131) Built_In_Declaration -> sqrt LPAREN params . RPAREN
    (102) params -> params . COMMA single_param

    RPAREN          shift and go to state 257
    COMMA           shift and go to state 187


state 183

    (132) Built_In_Declaration -> unset LPAREN params . RPAREN
    (102) params -> params . COMMA single_param

    RPAREN          shift and go to state 258
    COMMA           shift and go to state 187


state 184

    (28) constant_declaration -> const ID EQUAL data_type . SEMICOLON

    SEMICOLON       shift and go to state 259


state 185

    (26) data_type -> CADENA .

    SEMICOLON       reduce using rule 26 (data_type -> CADENA .)


state 186

    (98) fun_call -> ID LPAREN params RPAREN .

    COMMENT         reduce using rule 98 (fun_call -> ID LPAREN params RPAREN .)
    COMMENT_HASHTAG reduce using rule 98 (fun_call -> ID LPAREN params RPAREN .)
    COMMENT_MULTI   reduce using rule 98 (fun_call -> ID LPAREN params RPAREN .)
    empty           reduce using rule 98 (fun_call -> ID LPAREN params RPAREN .)
    include         reduce using rule 98 (fun_call -> ID LPAREN params RPAREN .)
    const           reduce using rule 98 (fun_call -> ID LPAREN params RPAREN .)
    print           reduce using rule 98 (fun_call -> ID LPAREN params RPAREN .)
    echo            reduce using rule 98 (fun_call -> ID LPAREN params RPAREN .)
    while           reduce using rule 98 (fun_call -> ID LPAREN params RPAREN .)
    if              reduce using rule 98 (fun_call -> ID LPAREN params RPAREN .)
    function        reduce using rule 98 (fun_call -> ID LPAREN params RPAREN .)
    ID              reduce using rule 98 (fun_call -> ID LPAREN params RPAREN .)
    class           reduce using rule 98 (fun_call -> ID LPAREN params RPAREN .)
    new             reduce using rule 98 (fun_call -> ID LPAREN params RPAREN .)
    CLOSE_TAG       reduce using rule 98 (fun_call -> ID LPAREN params RPAREN .)
    for             reduce using rule 98 (fun_call -> ID LPAREN params RPAREN .)
    foreach         reduce using rule 98 (fun_call -> ID LPAREN params RPAREN .)
    exit            reduce using rule 98 (fun_call -> ID LPAREN params RPAREN .)
    VARIABLE        reduce using rule 98 (fun_call -> ID LPAREN params RPAREN .)
    array           reduce using rule 98 (fun_call -> ID LPAREN params RPAREN .)
    pow             reduce using rule 98 (fun_call -> ID LPAREN params RPAREN .)
    POW             reduce using rule 98 (fun_call -> ID LPAREN params RPAREN .)
    abs             reduce using rule 98 (fun_call -> ID LPAREN params RPAREN .)
    cos             reduce using rule 98 (fun_call -> ID LPAREN params RPAREN .)
    deg2rad         reduce using rule 98 (fun_call -> ID LPAREN params RPAREN .)
    rad2deg         reduce using rule 98 (fun_call -> ID LPAREN params RPAREN .)
    die             reduce using rule 98 (fun_call -> ID LPAREN params RPAREN .)
    exp             reduce using rule 98 (fun_call -> ID LPAREN params RPAREN .)
    floor           reduce using rule 98 (fun_call -> ID LPAREN params RPAREN .)
    isset           reduce using rule 98 (fun_call -> ID LPAREN params RPAREN .)
    list            reduce using rule 98 (fun_call -> ID LPAREN params RPAREN .)
    log             reduce using rule 98 (fun_call -> ID LPAREN params RPAREN .)
    log10           reduce using rule 98 (fun_call -> ID LPAREN params RPAREN .)
    max             reduce using rule 98 (fun_call -> ID LPAREN params RPAREN .)
    min             reduce using rule 98 (fun_call -> ID LPAREN params RPAREN .)
    rand            reduce using rule 98 (fun_call -> ID LPAREN params RPAREN .)
    round           reduce using rule 98 (fun_call -> ID LPAREN params RPAREN .)
    sin             reduce using rule 98 (fun_call -> ID LPAREN params RPAREN .)
    sqrt            reduce using rule 98 (fun_call -> ID LPAREN params RPAREN .)
    unset           reduce using rule 98 (fun_call -> ID LPAREN params RPAREN .)
    CADENA          reduce using rule 98 (fun_call -> ID LPAREN params RPAREN .)
    $end            reduce using rule 98 (fun_call -> ID LPAREN params RPAREN .)
    RBLOCK          reduce using rule 98 (fun_call -> ID LPAREN params RPAREN .)


state 187

    (102) params -> params COMMA . single_param
    (103) single_param -> . var_declaration2
    (104) single_param -> . data_type
    (105) single_param -> . empty_function
    (38) var_declaration2 -> . VARIABLE
    (39) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (40) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL CADENA
    (42) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (43) var_declaration2 -> . VARIABLE EQUAL expression
    (44) var_declaration2 -> . Built_In_Declaration
    (45) var_declaration2 -> . Concatenar_Cadenas_declaration
    (46) var_declaration2 -> . VARIABLE assignment_tail
    (47) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (25) data_type -> . NUMBER
    (26) data_type -> . CADENA
    (137) empty_function -> .
    (112) Built_In_Declaration -> . array LPAREN params RPAREN
    (113) Built_In_Declaration -> . pow LPAREN params RPAREN
    (114) Built_In_Declaration -> . POW LPAREN params RPAREN
    (115) Built_In_Declaration -> . abs LPAREN params RPAREN
    (116) Built_In_Declaration -> . cos LPAREN params RPAREN
    (117) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (118) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (119) Built_In_Declaration -> . die LPAREN params RPAREN
    (120) Built_In_Declaration -> . exp LPAREN params RPAREN
    (121) Built_In_Declaration -> . floor LPAREN params RPAREN
    (122) Built_In_Declaration -> . isset LPAREN params RPAREN
    (123) Built_In_Declaration -> . list LPAREN params RPAREN
    (124) Built_In_Declaration -> . log LPAREN params RPAREN
    (125) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (126) Built_In_Declaration -> . max LPAREN params RPAREN
    (127) Built_In_Declaration -> . min LPAREN params RPAREN
    (128) Built_In_Declaration -> . rand LPAREN params RPAREN
    (129) Built_In_Declaration -> . round LPAREN params RPAREN
    (130) Built_In_Declaration -> . sin LPAREN params RPAREN
    (131) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (132) Built_In_Declaration -> . unset LPAREN params RPAREN
    (133) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (134) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (135) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 41
    NUMBER          shift and go to state 74
    CADENA          shift and go to state 75
    SEMICOLON       reduce using rule 137 (empty_function -> .)
    RPAREN          reduce using rule 137 (empty_function -> .)
    COMMA           reduce using rule 137 (empty_function -> .)
    RBRACKET        reduce using rule 137 (empty_function -> .)
    RBLOCK          reduce using rule 137 (empty_function -> .)
    array           shift and go to state 44
    pow             shift and go to state 45
    POW             shift and go to state 46
    abs             shift and go to state 47
    cos             shift and go to state 48
    deg2rad         shift and go to state 49
    rad2deg         shift and go to state 50
    die             shift and go to state 51
    exp             shift and go to state 52
    floor           shift and go to state 53
    isset           shift and go to state 54
    list            shift and go to state 55
    log             shift and go to state 56
    log10           shift and go to state 57
    max             shift and go to state 58
    min             shift and go to state 59
    rand            shift and go to state 60
    round           shift and go to state 61
    sin             shift and go to state 62
    sqrt            shift and go to state 63
    unset           shift and go to state 64

    single_param                   shift and go to state 260
    var_declaration2               shift and go to state 121
    data_type                      shift and go to state 122
    empty_function                 shift and go to state 123
    Built_In_Declaration           shift and go to state 42
    Concatenar_Cadenas_declaration shift and go to state 43

state 188

    (30) print_declaration -> print LPAREN var_declaration2 RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 261


state 189

    (31) print_declaration -> print LPAREN data_type RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 262


state 190

    (34) echo_declaration -> echo LPAREN var_declaration2 RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 263


state 191

    (35) echo_declaration -> echo LPAREN data_type RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 264


state 192

    (66) factor -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 265


state 193

    (54) iteration_stmt -> while LPAREN expression RPAREN . LBLOCK declaration RBLOCK

    LBLOCK          shift and go to state 266


state 194

    (56) expression -> additive_expression logical_op . additive_expression
    (59) additive_expression -> . term
    (60) additive_expression -> . term math_op term
    (61) term -> . factor
    (62) term -> . factor increment_decrement_op
    (63) term -> . increment_decrement_op factor
    (64) factor -> . NUMBER
    (65) factor -> . VARIABLE
    (66) factor -> . LPAREN expression RPAREN
    (67) increment_decrement_op -> . PLUSPLUS
    (68) increment_decrement_op -> . MINUSMINUS

    NUMBER          shift and go to state 138
    VARIABLE        shift and go to state 139
    LPAREN          shift and go to state 132
    PLUSPLUS        shift and go to state 140
    MINUSMINUS      shift and go to state 141

    additive_expression            shift and go to state 267
    term                           shift and go to state 135
    factor                         shift and go to state 136
    increment_decrement_op         shift and go to state 137

state 195

    (57) expression -> additive_expression comp_op . additive_expression
    (58) expression -> additive_expression comp_op . additive_expression logical_op additive_expression comp_op additive_expression
    (59) additive_expression -> . term
    (60) additive_expression -> . term math_op term
    (61) term -> . factor
    (62) term -> . factor increment_decrement_op
    (63) term -> . increment_decrement_op factor
    (64) factor -> . NUMBER
    (65) factor -> . VARIABLE
    (66) factor -> . LPAREN expression RPAREN
    (67) increment_decrement_op -> . PLUSPLUS
    (68) increment_decrement_op -> . MINUSMINUS

    NUMBER          shift and go to state 138
    VARIABLE        shift and go to state 139
    LPAREN          shift and go to state 132
    PLUSPLUS        shift and go to state 140
    MINUSMINUS      shift and go to state 141

    additive_expression            shift and go to state 268
    term                           shift and go to state 135
    factor                         shift and go to state 136
    increment_decrement_op         shift and go to state 137

state 196

    (87) logical_op -> BOOL_OR .

    NUMBER          reduce using rule 87 (logical_op -> BOOL_OR .)
    VARIABLE        reduce using rule 87 (logical_op -> BOOL_OR .)
    LPAREN          reduce using rule 87 (logical_op -> BOOL_OR .)
    PLUSPLUS        reduce using rule 87 (logical_op -> BOOL_OR .)
    MINUSMINUS      reduce using rule 87 (logical_op -> BOOL_OR .)


state 197

    (88) logical_op -> BOOL_AND .

    NUMBER          reduce using rule 88 (logical_op -> BOOL_AND .)
    VARIABLE        reduce using rule 88 (logical_op -> BOOL_AND .)
    LPAREN          reduce using rule 88 (logical_op -> BOOL_AND .)
    PLUSPLUS        reduce using rule 88 (logical_op -> BOOL_AND .)
    MINUSMINUS      reduce using rule 88 (logical_op -> BOOL_AND .)


state 198

    (89) logical_op -> NOT .

    NUMBER          reduce using rule 89 (logical_op -> NOT .)
    VARIABLE        reduce using rule 89 (logical_op -> NOT .)
    LPAREN          reduce using rule 89 (logical_op -> NOT .)
    PLUSPLUS        reduce using rule 89 (logical_op -> NOT .)
    MINUSMINUS      reduce using rule 89 (logical_op -> NOT .)


state 199

    (90) logical_op -> or .

    NUMBER          reduce using rule 90 (logical_op -> or .)
    VARIABLE        reduce using rule 90 (logical_op -> or .)
    LPAREN          reduce using rule 90 (logical_op -> or .)
    PLUSPLUS        reduce using rule 90 (logical_op -> or .)
    MINUSMINUS      reduce using rule 90 (logical_op -> or .)


state 200

    (91) logical_op -> and .

    NUMBER          reduce using rule 91 (logical_op -> and .)
    VARIABLE        reduce using rule 91 (logical_op -> and .)
    LPAREN          reduce using rule 91 (logical_op -> and .)
    PLUSPLUS        reduce using rule 91 (logical_op -> and .)
    MINUSMINUS      reduce using rule 91 (logical_op -> and .)


state 201

    (77) comp_op -> LESS .

    NUMBER          reduce using rule 77 (comp_op -> LESS .)
    VARIABLE        reduce using rule 77 (comp_op -> LESS .)
    LPAREN          reduce using rule 77 (comp_op -> LESS .)
    PLUSPLUS        reduce using rule 77 (comp_op -> LESS .)
    MINUSMINUS      reduce using rule 77 (comp_op -> LESS .)


state 202

    (78) comp_op -> LESSEQUAL .

    NUMBER          reduce using rule 78 (comp_op -> LESSEQUAL .)
    VARIABLE        reduce using rule 78 (comp_op -> LESSEQUAL .)
    LPAREN          reduce using rule 78 (comp_op -> LESSEQUAL .)
    PLUSPLUS        reduce using rule 78 (comp_op -> LESSEQUAL .)
    MINUSMINUS      reduce using rule 78 (comp_op -> LESSEQUAL .)


state 203

    (79) comp_op -> GREATER .

    NUMBER          reduce using rule 79 (comp_op -> GREATER .)
    VARIABLE        reduce using rule 79 (comp_op -> GREATER .)
    LPAREN          reduce using rule 79 (comp_op -> GREATER .)
    PLUSPLUS        reduce using rule 79 (comp_op -> GREATER .)
    MINUSMINUS      reduce using rule 79 (comp_op -> GREATER .)


state 204

    (80) comp_op -> GREATEREQUAL .

    NUMBER          reduce using rule 80 (comp_op -> GREATEREQUAL .)
    VARIABLE        reduce using rule 80 (comp_op -> GREATEREQUAL .)
    LPAREN          reduce using rule 80 (comp_op -> GREATEREQUAL .)
    PLUSPLUS        reduce using rule 80 (comp_op -> GREATEREQUAL .)
    MINUSMINUS      reduce using rule 80 (comp_op -> GREATEREQUAL .)


state 205

    (81) comp_op -> DEQUAL .

    NUMBER          reduce using rule 81 (comp_op -> DEQUAL .)
    VARIABLE        reduce using rule 81 (comp_op -> DEQUAL .)
    LPAREN          reduce using rule 81 (comp_op -> DEQUAL .)
    PLUSPLUS        reduce using rule 81 (comp_op -> DEQUAL .)
    MINUSMINUS      reduce using rule 81 (comp_op -> DEQUAL .)


state 206

    (82) comp_op -> DISTINT .

    NUMBER          reduce using rule 82 (comp_op -> DISTINT .)
    VARIABLE        reduce using rule 82 (comp_op -> DISTINT .)
    LPAREN          reduce using rule 82 (comp_op -> DISTINT .)
    PLUSPLUS        reduce using rule 82 (comp_op -> DISTINT .)
    MINUSMINUS      reduce using rule 82 (comp_op -> DISTINT .)


state 207

    (83) comp_op -> DIVEQUAL .

    NUMBER          reduce using rule 83 (comp_op -> DIVEQUAL .)
    VARIABLE        reduce using rule 83 (comp_op -> DIVEQUAL .)
    LPAREN          reduce using rule 83 (comp_op -> DIVEQUAL .)
    PLUSPLUS        reduce using rule 83 (comp_op -> DIVEQUAL .)
    MINUSMINUS      reduce using rule 83 (comp_op -> DIVEQUAL .)


state 208

    (84) comp_op -> ISEQUAL .

    NUMBER          reduce using rule 84 (comp_op -> ISEQUAL .)
    VARIABLE        reduce using rule 84 (comp_op -> ISEQUAL .)
    LPAREN          reduce using rule 84 (comp_op -> ISEQUAL .)
    PLUSPLUS        reduce using rule 84 (comp_op -> ISEQUAL .)
    MINUSMINUS      reduce using rule 84 (comp_op -> ISEQUAL .)


state 209

    (85) comp_op -> ISIDENTICAL .

    NUMBER          reduce using rule 85 (comp_op -> ISIDENTICAL .)
    VARIABLE        reduce using rule 85 (comp_op -> ISIDENTICAL .)
    LPAREN          reduce using rule 85 (comp_op -> ISIDENTICAL .)
    PLUSPLUS        reduce using rule 85 (comp_op -> ISIDENTICAL .)
    MINUSMINUS      reduce using rule 85 (comp_op -> ISIDENTICAL .)


state 210

    (86) comp_op -> ISNOTIDENTICAL .

    NUMBER          reduce using rule 86 (comp_op -> ISNOTIDENTICAL .)
    VARIABLE        reduce using rule 86 (comp_op -> ISNOTIDENTICAL .)
    LPAREN          reduce using rule 86 (comp_op -> ISNOTIDENTICAL .)
    PLUSPLUS        reduce using rule 86 (comp_op -> ISNOTIDENTICAL .)
    MINUSMINUS      reduce using rule 86 (comp_op -> ISNOTIDENTICAL .)


state 211

    (60) additive_expression -> term math_op . term
    (61) term -> . factor
    (62) term -> . factor increment_decrement_op
    (63) term -> . increment_decrement_op factor
    (64) factor -> . NUMBER
    (65) factor -> . VARIABLE
    (66) factor -> . LPAREN expression RPAREN
    (67) increment_decrement_op -> . PLUSPLUS
    (68) increment_decrement_op -> . MINUSMINUS

    NUMBER          shift and go to state 138
    VARIABLE        shift and go to state 139
    LPAREN          shift and go to state 132
    PLUSPLUS        shift and go to state 140
    MINUSMINUS      shift and go to state 141

    term                           shift and go to state 269
    factor                         shift and go to state 136
    increment_decrement_op         shift and go to state 137

state 212

    (69) math_op -> PLUS .

    NUMBER          reduce using rule 69 (math_op -> PLUS .)
    VARIABLE        reduce using rule 69 (math_op -> PLUS .)
    LPAREN          reduce using rule 69 (math_op -> PLUS .)
    PLUSPLUS        reduce using rule 69 (math_op -> PLUS .)
    MINUSMINUS      reduce using rule 69 (math_op -> PLUS .)


state 213

    (70) math_op -> MINUS .

    NUMBER          reduce using rule 70 (math_op -> MINUS .)
    VARIABLE        reduce using rule 70 (math_op -> MINUS .)
    LPAREN          reduce using rule 70 (math_op -> MINUS .)
    PLUSPLUS        reduce using rule 70 (math_op -> MINUS .)
    MINUSMINUS      reduce using rule 70 (math_op -> MINUS .)


state 214

    (71) math_op -> TIMES .

    NUMBER          reduce using rule 71 (math_op -> TIMES .)
    VARIABLE        reduce using rule 71 (math_op -> TIMES .)
    LPAREN          reduce using rule 71 (math_op -> TIMES .)
    PLUSPLUS        reduce using rule 71 (math_op -> TIMES .)
    MINUSMINUS      reduce using rule 71 (math_op -> TIMES .)


state 215

    (72) math_op -> DIVIDE .

    NUMBER          reduce using rule 72 (math_op -> DIVIDE .)
    VARIABLE        reduce using rule 72 (math_op -> DIVIDE .)
    LPAREN          reduce using rule 72 (math_op -> DIVIDE .)
    PLUSPLUS        reduce using rule 72 (math_op -> DIVIDE .)
    MINUSMINUS      reduce using rule 72 (math_op -> DIVIDE .)


state 216

    (73) math_op -> MULEQUAL .

    NUMBER          reduce using rule 73 (math_op -> MULEQUAL .)
    VARIABLE        reduce using rule 73 (math_op -> MULEQUAL .)
    LPAREN          reduce using rule 73 (math_op -> MULEQUAL .)
    PLUSPLUS        reduce using rule 73 (math_op -> MULEQUAL .)
    MINUSMINUS      reduce using rule 73 (math_op -> MULEQUAL .)


state 217

    (74) math_op -> PLUSEQUAL .

    NUMBER          reduce using rule 74 (math_op -> PLUSEQUAL .)
    VARIABLE        reduce using rule 74 (math_op -> PLUSEQUAL .)
    LPAREN          reduce using rule 74 (math_op -> PLUSEQUAL .)
    PLUSPLUS        reduce using rule 74 (math_op -> PLUSEQUAL .)
    MINUSMINUS      reduce using rule 74 (math_op -> PLUSEQUAL .)


state 218

    (75) math_op -> MINUSEQUAL .

    NUMBER          reduce using rule 75 (math_op -> MINUSEQUAL .)
    VARIABLE        reduce using rule 75 (math_op -> MINUSEQUAL .)
    LPAREN          reduce using rule 75 (math_op -> MINUSEQUAL .)
    PLUSPLUS        reduce using rule 75 (math_op -> MINUSEQUAL .)
    MINUSMINUS      reduce using rule 75 (math_op -> MINUSEQUAL .)


state 219

    (76) math_op -> MOD .

    NUMBER          reduce using rule 76 (math_op -> MOD .)
    VARIABLE        reduce using rule 76 (math_op -> MOD .)
    LPAREN          reduce using rule 76 (math_op -> MOD .)
    PLUSPLUS        reduce using rule 76 (math_op -> MOD .)
    MINUSMINUS      reduce using rule 76 (math_op -> MOD .)


state 220

    (62) term -> factor increment_decrement_op .

    PLUS            reduce using rule 62 (term -> factor increment_decrement_op .)
    MINUS           reduce using rule 62 (term -> factor increment_decrement_op .)
    TIMES           reduce using rule 62 (term -> factor increment_decrement_op .)
    DIVIDE          reduce using rule 62 (term -> factor increment_decrement_op .)
    MULEQUAL        reduce using rule 62 (term -> factor increment_decrement_op .)
    PLUSEQUAL       reduce using rule 62 (term -> factor increment_decrement_op .)
    MINUSEQUAL      reduce using rule 62 (term -> factor increment_decrement_op .)
    MOD             reduce using rule 62 (term -> factor increment_decrement_op .)
    BOOL_OR         reduce using rule 62 (term -> factor increment_decrement_op .)
    BOOL_AND        reduce using rule 62 (term -> factor increment_decrement_op .)
    NOT             reduce using rule 62 (term -> factor increment_decrement_op .)
    or              reduce using rule 62 (term -> factor increment_decrement_op .)
    and             reduce using rule 62 (term -> factor increment_decrement_op .)
    LESS            reduce using rule 62 (term -> factor increment_decrement_op .)
    LESSEQUAL       reduce using rule 62 (term -> factor increment_decrement_op .)
    GREATER         reduce using rule 62 (term -> factor increment_decrement_op .)
    GREATEREQUAL    reduce using rule 62 (term -> factor increment_decrement_op .)
    DEQUAL          reduce using rule 62 (term -> factor increment_decrement_op .)
    DISTINT         reduce using rule 62 (term -> factor increment_decrement_op .)
    DIVEQUAL        reduce using rule 62 (term -> factor increment_decrement_op .)
    ISEQUAL         reduce using rule 62 (term -> factor increment_decrement_op .)
    ISIDENTICAL     reduce using rule 62 (term -> factor increment_decrement_op .)
    ISNOTIDENTICAL  reduce using rule 62 (term -> factor increment_decrement_op .)
    RPAREN          reduce using rule 62 (term -> factor increment_decrement_op .)
    as              reduce using rule 62 (term -> factor increment_decrement_op .)
    SEMICOLON       reduce using rule 62 (term -> factor increment_decrement_op .)
    COMMA           reduce using rule 62 (term -> factor increment_decrement_op .)
    RBRACKET        reduce using rule 62 (term -> factor increment_decrement_op .)
    RBLOCK          reduce using rule 62 (term -> factor increment_decrement_op .)


state 221

    (63) term -> increment_decrement_op factor .

    PLUS            reduce using rule 63 (term -> increment_decrement_op factor .)
    MINUS           reduce using rule 63 (term -> increment_decrement_op factor .)
    TIMES           reduce using rule 63 (term -> increment_decrement_op factor .)
    DIVIDE          reduce using rule 63 (term -> increment_decrement_op factor .)
    MULEQUAL        reduce using rule 63 (term -> increment_decrement_op factor .)
    PLUSEQUAL       reduce using rule 63 (term -> increment_decrement_op factor .)
    MINUSEQUAL      reduce using rule 63 (term -> increment_decrement_op factor .)
    MOD             reduce using rule 63 (term -> increment_decrement_op factor .)
    BOOL_OR         reduce using rule 63 (term -> increment_decrement_op factor .)
    BOOL_AND        reduce using rule 63 (term -> increment_decrement_op factor .)
    NOT             reduce using rule 63 (term -> increment_decrement_op factor .)
    or              reduce using rule 63 (term -> increment_decrement_op factor .)
    and             reduce using rule 63 (term -> increment_decrement_op factor .)
    LESS            reduce using rule 63 (term -> increment_decrement_op factor .)
    LESSEQUAL       reduce using rule 63 (term -> increment_decrement_op factor .)
    GREATER         reduce using rule 63 (term -> increment_decrement_op factor .)
    GREATEREQUAL    reduce using rule 63 (term -> increment_decrement_op factor .)
    DEQUAL          reduce using rule 63 (term -> increment_decrement_op factor .)
    DISTINT         reduce using rule 63 (term -> increment_decrement_op factor .)
    DIVEQUAL        reduce using rule 63 (term -> increment_decrement_op factor .)
    ISEQUAL         reduce using rule 63 (term -> increment_decrement_op factor .)
    ISIDENTICAL     reduce using rule 63 (term -> increment_decrement_op factor .)
    ISNOTIDENTICAL  reduce using rule 63 (term -> increment_decrement_op factor .)
    RPAREN          reduce using rule 63 (term -> increment_decrement_op factor .)
    as              reduce using rule 63 (term -> increment_decrement_op factor .)
    SEMICOLON       reduce using rule 63 (term -> increment_decrement_op factor .)
    COMMA           reduce using rule 63 (term -> increment_decrement_op factor .)
    RBRACKET        reduce using rule 63 (term -> increment_decrement_op factor .)
    RBLOCK          reduce using rule 63 (term -> increment_decrement_op factor .)


state 222

    (92) if_statement -> if LPAREN expression RPAREN . LBLOCK declaration_list RBLOCK else_part

    LBLOCK          shift and go to state 270


state 223

    (97) fun_declaration -> function ID LPAREN params . RPAREN LBLOCK declaration RBLOCK
    (102) params -> params . COMMA single_param

    RPAREN          shift and go to state 271
    COMMA           shift and go to state 187


state 224

    (99) obj_declaration -> class ID LBLOCK declaration . RBLOCK

    RBLOCK          shift and go to state 272


state 225

    (100) create_obj_declaration -> new ID LPAREN params . RPAREN
    (102) params -> params . COMMA single_param

    RPAREN          shift and go to state 273
    COMMA           shift and go to state 187


state 226

    (106) for_loop -> for LPAREN for_init for_expr . for_update RPAREN LBLOCK declaration_list RBLOCK
    (109) for_update -> . expression
    (55) expression -> . additive_expression
    (56) expression -> . additive_expression logical_op additive_expression
    (57) expression -> . additive_expression comp_op additive_expression
    (58) expression -> . additive_expression comp_op additive_expression logical_op additive_expression comp_op additive_expression
    (59) additive_expression -> . term
    (60) additive_expression -> . term math_op term
    (61) term -> . factor
    (62) term -> . factor increment_decrement_op
    (63) term -> . increment_decrement_op factor
    (64) factor -> . NUMBER
    (65) factor -> . VARIABLE
    (66) factor -> . LPAREN expression RPAREN
    (67) increment_decrement_op -> . PLUSPLUS
    (68) increment_decrement_op -> . MINUSMINUS

    NUMBER          shift and go to state 138
    VARIABLE        shift and go to state 139
    LPAREN          shift and go to state 132
    PLUSPLUS        shift and go to state 140
    MINUSMINUS      shift and go to state 141

    for_update                     shift and go to state 274
    expression                     shift and go to state 275
    additive_expression            shift and go to state 134
    term                           shift and go to state 135
    factor                         shift and go to state 136
    increment_decrement_op         shift and go to state 137

state 227

    (108) for_expr -> expression . SEMICOLON

    SEMICOLON       shift and go to state 276


state 228

    (107) for_init -> var_declaration2 SEMICOLON .

    NUMBER          reduce using rule 107 (for_init -> var_declaration2 SEMICOLON .)
    VARIABLE        reduce using rule 107 (for_init -> var_declaration2 SEMICOLON .)
    LPAREN          reduce using rule 107 (for_init -> var_declaration2 SEMICOLON .)
    PLUSPLUS        reduce using rule 107 (for_init -> var_declaration2 SEMICOLON .)
    MINUSMINUS      reduce using rule 107 (for_init -> var_declaration2 SEMICOLON .)


state 229

    (111) foreach_loop -> foreach LPAREN expression as . expression RPAREN LBLOCK declaration_list RBLOCK
    (55) expression -> . additive_expression
    (56) expression -> . additive_expression logical_op additive_expression
    (57) expression -> . additive_expression comp_op additive_expression
    (58) expression -> . additive_expression comp_op additive_expression logical_op additive_expression comp_op additive_expression
    (59) additive_expression -> . term
    (60) additive_expression -> . term math_op term
    (61) term -> . factor
    (62) term -> . factor increment_decrement_op
    (63) term -> . increment_decrement_op factor
    (64) factor -> . NUMBER
    (65) factor -> . VARIABLE
    (66) factor -> . LPAREN expression RPAREN
    (67) increment_decrement_op -> . PLUSPLUS
    (68) increment_decrement_op -> . MINUSMINUS

    NUMBER          shift and go to state 138
    VARIABLE        shift and go to state 139
    LPAREN          shift and go to state 132
    PLUSPLUS        shift and go to state 140
    MINUSMINUS      shift and go to state 141

    expression                     shift and go to state 277
    additive_expression            shift and go to state 134
    term                           shift and go to state 135
    factor                         shift and go to state 136
    increment_decrement_op         shift and go to state 137

state 230

    (110) exit_statement -> exit LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 278


state 231

    (38) var_declaration2 -> VARIABLE .
    (39) var_declaration2 -> VARIABLE . EQUAL NUMBER
    (40) var_declaration2 -> VARIABLE . EQUAL VARIABLE
    (41) var_declaration2 -> VARIABLE . EQUAL CADENA
    (42) var_declaration2 -> VARIABLE . EQUAL Built_In_Declaration
    (43) var_declaration2 -> VARIABLE . EQUAL expression
    (46) var_declaration2 -> VARIABLE . assignment_tail
    (47) var_declaration2 -> VARIABLE . EQUAL assignment_tail
    (65) factor -> VARIABLE .
    (133) Concatenar_Cadenas_declaration -> VARIABLE . DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> VARIABLE . DOT CADENA
    (48) assignment_tail -> . COMMA var_declaration2
    (49) assignment_tail -> . LBRACKET params RBRACKET
    (50) assignment_tail -> . LBLOCK params RBLOCK
    (51) assignment_tail -> . VARIABLE LBRACKET expression COMMA params
    (52) assignment_tail -> . VARIABLE LBRACKET params RBRACKET
    (53) assignment_tail -> . VARIABLE LBLOCK params RBLOCK

  ! reduce/reduce conflict for COMMA resolved using rule 38 (var_declaration2 -> VARIABLE .)
  ! shift/reduce conflict for COMMA resolved as shift
    RBRACKET        reduce using rule 38 (var_declaration2 -> VARIABLE .)
    EQUAL           shift and go to state 88
    PLUSPLUS        reduce using rule 65 (factor -> VARIABLE .)
    MINUSMINUS      reduce using rule 65 (factor -> VARIABLE .)
    PLUS            reduce using rule 65 (factor -> VARIABLE .)
    MINUS           reduce using rule 65 (factor -> VARIABLE .)
    TIMES           reduce using rule 65 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 65 (factor -> VARIABLE .)
    MULEQUAL        reduce using rule 65 (factor -> VARIABLE .)
    PLUSEQUAL       reduce using rule 65 (factor -> VARIABLE .)
    MINUSEQUAL      reduce using rule 65 (factor -> VARIABLE .)
    MOD             reduce using rule 65 (factor -> VARIABLE .)
    BOOL_OR         reduce using rule 65 (factor -> VARIABLE .)
    BOOL_AND        reduce using rule 65 (factor -> VARIABLE .)
    NOT             reduce using rule 65 (factor -> VARIABLE .)
    or              reduce using rule 65 (factor -> VARIABLE .)
    and             reduce using rule 65 (factor -> VARIABLE .)
    LESS            reduce using rule 65 (factor -> VARIABLE .)
    LESSEQUAL       reduce using rule 65 (factor -> VARIABLE .)
    GREATER         reduce using rule 65 (factor -> VARIABLE .)
    GREATEREQUAL    reduce using rule 65 (factor -> VARIABLE .)
    DEQUAL          reduce using rule 65 (factor -> VARIABLE .)
    DISTINT         reduce using rule 65 (factor -> VARIABLE .)
    DIVEQUAL        reduce using rule 65 (factor -> VARIABLE .)
    ISEQUAL         reduce using rule 65 (factor -> VARIABLE .)
    ISIDENTICAL     reduce using rule 65 (factor -> VARIABLE .)
    ISNOTIDENTICAL  reduce using rule 65 (factor -> VARIABLE .)
    DOT             shift and go to state 90
    COMMA           shift and go to state 91
    LBRACKET        shift and go to state 92
    LBLOCK          shift and go to state 93
    VARIABLE        shift and go to state 87

  ! COMMA           [ reduce using rule 38 (var_declaration2 -> VARIABLE .) ]
  ! COMMA           [ reduce using rule 65 (factor -> VARIABLE .) ]

    assignment_tail                shift and go to state 89

state 232

    (51) assignment_tail -> VARIABLE LBRACKET expression . COMMA params

    COMMA           shift and go to state 279


state 233

    (52) assignment_tail -> VARIABLE LBRACKET params . RBRACKET
    (102) params -> params . COMMA single_param

    RBRACKET        shift and go to state 280
    COMMA           shift and go to state 187


state 234

    (25) data_type -> NUMBER .
    (64) factor -> NUMBER .

  ! reduce/reduce conflict for COMMA resolved using rule 25 (data_type -> NUMBER .)
    RBRACKET        reduce using rule 25 (data_type -> NUMBER .)
    COMMA           reduce using rule 25 (data_type -> NUMBER .)
    PLUSPLUS        reduce using rule 64 (factor -> NUMBER .)
    MINUSMINUS      reduce using rule 64 (factor -> NUMBER .)
    PLUS            reduce using rule 64 (factor -> NUMBER .)
    MINUS           reduce using rule 64 (factor -> NUMBER .)
    TIMES           reduce using rule 64 (factor -> NUMBER .)
    DIVIDE          reduce using rule 64 (factor -> NUMBER .)
    MULEQUAL        reduce using rule 64 (factor -> NUMBER .)
    PLUSEQUAL       reduce using rule 64 (factor -> NUMBER .)
    MINUSEQUAL      reduce using rule 64 (factor -> NUMBER .)
    MOD             reduce using rule 64 (factor -> NUMBER .)
    BOOL_OR         reduce using rule 64 (factor -> NUMBER .)
    BOOL_AND        reduce using rule 64 (factor -> NUMBER .)
    NOT             reduce using rule 64 (factor -> NUMBER .)
    or              reduce using rule 64 (factor -> NUMBER .)
    and             reduce using rule 64 (factor -> NUMBER .)
    LESS            reduce using rule 64 (factor -> NUMBER .)
    LESSEQUAL       reduce using rule 64 (factor -> NUMBER .)
    GREATER         reduce using rule 64 (factor -> NUMBER .)
    GREATEREQUAL    reduce using rule 64 (factor -> NUMBER .)
    DEQUAL          reduce using rule 64 (factor -> NUMBER .)
    DISTINT         reduce using rule 64 (factor -> NUMBER .)
    DIVEQUAL        reduce using rule 64 (factor -> NUMBER .)
    ISEQUAL         reduce using rule 64 (factor -> NUMBER .)
    ISIDENTICAL     reduce using rule 64 (factor -> NUMBER .)
    ISNOTIDENTICAL  reduce using rule 64 (factor -> NUMBER .)

  ! COMMA           [ reduce using rule 64 (factor -> NUMBER .) ]


state 235

    (53) assignment_tail -> VARIABLE LBLOCK params . RBLOCK
    (102) params -> params . COMMA single_param

    RBLOCK          shift and go to state 281
    COMMA           shift and go to state 187


state 236

    (49) assignment_tail -> LBRACKET params RBRACKET .

    SEMICOLON       reduce using rule 49 (assignment_tail -> LBRACKET params RBRACKET .)
    RPAREN          reduce using rule 49 (assignment_tail -> LBRACKET params RBRACKET .)
    COMMA           reduce using rule 49 (assignment_tail -> LBRACKET params RBRACKET .)
    RBRACKET        reduce using rule 49 (assignment_tail -> LBRACKET params RBRACKET .)
    RBLOCK          reduce using rule 49 (assignment_tail -> LBRACKET params RBRACKET .)


state 237

    (50) assignment_tail -> LBLOCK params RBLOCK .

    SEMICOLON       reduce using rule 50 (assignment_tail -> LBLOCK params RBLOCK .)
    RPAREN          reduce using rule 50 (assignment_tail -> LBLOCK params RBLOCK .)
    COMMA           reduce using rule 50 (assignment_tail -> LBLOCK params RBLOCK .)
    RBRACKET        reduce using rule 50 (assignment_tail -> LBLOCK params RBLOCK .)
    RBLOCK          reduce using rule 50 (assignment_tail -> LBLOCK params RBLOCK .)


state 238

    (112) Built_In_Declaration -> array LPAREN params RPAREN .

    SEMICOLON       reduce using rule 112 (Built_In_Declaration -> array LPAREN params RPAREN .)
    RPAREN          reduce using rule 112 (Built_In_Declaration -> array LPAREN params RPAREN .)
    COMMA           reduce using rule 112 (Built_In_Declaration -> array LPAREN params RPAREN .)
    RBRACKET        reduce using rule 112 (Built_In_Declaration -> array LPAREN params RPAREN .)
    RBLOCK          reduce using rule 112 (Built_In_Declaration -> array LPAREN params RPAREN .)


state 239

    (113) Built_In_Declaration -> pow LPAREN params RPAREN .

    SEMICOLON       reduce using rule 113 (Built_In_Declaration -> pow LPAREN params RPAREN .)
    RPAREN          reduce using rule 113 (Built_In_Declaration -> pow LPAREN params RPAREN .)
    COMMA           reduce using rule 113 (Built_In_Declaration -> pow LPAREN params RPAREN .)
    RBRACKET        reduce using rule 113 (Built_In_Declaration -> pow LPAREN params RPAREN .)
    RBLOCK          reduce using rule 113 (Built_In_Declaration -> pow LPAREN params RPAREN .)


state 240

    (114) Built_In_Declaration -> POW LPAREN params RPAREN .

    SEMICOLON       reduce using rule 114 (Built_In_Declaration -> POW LPAREN params RPAREN .)
    RPAREN          reduce using rule 114 (Built_In_Declaration -> POW LPAREN params RPAREN .)
    COMMA           reduce using rule 114 (Built_In_Declaration -> POW LPAREN params RPAREN .)
    RBRACKET        reduce using rule 114 (Built_In_Declaration -> POW LPAREN params RPAREN .)
    RBLOCK          reduce using rule 114 (Built_In_Declaration -> POW LPAREN params RPAREN .)


state 241

    (115) Built_In_Declaration -> abs LPAREN params RPAREN .

    SEMICOLON       reduce using rule 115 (Built_In_Declaration -> abs LPAREN params RPAREN .)
    RPAREN          reduce using rule 115 (Built_In_Declaration -> abs LPAREN params RPAREN .)
    COMMA           reduce using rule 115 (Built_In_Declaration -> abs LPAREN params RPAREN .)
    RBRACKET        reduce using rule 115 (Built_In_Declaration -> abs LPAREN params RPAREN .)
    RBLOCK          reduce using rule 115 (Built_In_Declaration -> abs LPAREN params RPAREN .)


state 242

    (116) Built_In_Declaration -> cos LPAREN params RPAREN .

    SEMICOLON       reduce using rule 116 (Built_In_Declaration -> cos LPAREN params RPAREN .)
    RPAREN          reduce using rule 116 (Built_In_Declaration -> cos LPAREN params RPAREN .)
    COMMA           reduce using rule 116 (Built_In_Declaration -> cos LPAREN params RPAREN .)
    RBRACKET        reduce using rule 116 (Built_In_Declaration -> cos LPAREN params RPAREN .)
    RBLOCK          reduce using rule 116 (Built_In_Declaration -> cos LPAREN params RPAREN .)


state 243

    (117) Built_In_Declaration -> deg2rad LPAREN params RPAREN .

    SEMICOLON       reduce using rule 117 (Built_In_Declaration -> deg2rad LPAREN params RPAREN .)
    RPAREN          reduce using rule 117 (Built_In_Declaration -> deg2rad LPAREN params RPAREN .)
    COMMA           reduce using rule 117 (Built_In_Declaration -> deg2rad LPAREN params RPAREN .)
    RBRACKET        reduce using rule 117 (Built_In_Declaration -> deg2rad LPAREN params RPAREN .)
    RBLOCK          reduce using rule 117 (Built_In_Declaration -> deg2rad LPAREN params RPAREN .)


state 244

    (118) Built_In_Declaration -> rad2deg LPAREN params RPAREN .

    SEMICOLON       reduce using rule 118 (Built_In_Declaration -> rad2deg LPAREN params RPAREN .)
    RPAREN          reduce using rule 118 (Built_In_Declaration -> rad2deg LPAREN params RPAREN .)
    COMMA           reduce using rule 118 (Built_In_Declaration -> rad2deg LPAREN params RPAREN .)
    RBRACKET        reduce using rule 118 (Built_In_Declaration -> rad2deg LPAREN params RPAREN .)
    RBLOCK          reduce using rule 118 (Built_In_Declaration -> rad2deg LPAREN params RPAREN .)


state 245

    (119) Built_In_Declaration -> die LPAREN params RPAREN .

    SEMICOLON       reduce using rule 119 (Built_In_Declaration -> die LPAREN params RPAREN .)
    RPAREN          reduce using rule 119 (Built_In_Declaration -> die LPAREN params RPAREN .)
    COMMA           reduce using rule 119 (Built_In_Declaration -> die LPAREN params RPAREN .)
    RBRACKET        reduce using rule 119 (Built_In_Declaration -> die LPAREN params RPAREN .)
    RBLOCK          reduce using rule 119 (Built_In_Declaration -> die LPAREN params RPAREN .)


state 246

    (120) Built_In_Declaration -> exp LPAREN params RPAREN .

    SEMICOLON       reduce using rule 120 (Built_In_Declaration -> exp LPAREN params RPAREN .)
    RPAREN          reduce using rule 120 (Built_In_Declaration -> exp LPAREN params RPAREN .)
    COMMA           reduce using rule 120 (Built_In_Declaration -> exp LPAREN params RPAREN .)
    RBRACKET        reduce using rule 120 (Built_In_Declaration -> exp LPAREN params RPAREN .)
    RBLOCK          reduce using rule 120 (Built_In_Declaration -> exp LPAREN params RPAREN .)


state 247

    (121) Built_In_Declaration -> floor LPAREN params RPAREN .

    SEMICOLON       reduce using rule 121 (Built_In_Declaration -> floor LPAREN params RPAREN .)
    RPAREN          reduce using rule 121 (Built_In_Declaration -> floor LPAREN params RPAREN .)
    COMMA           reduce using rule 121 (Built_In_Declaration -> floor LPAREN params RPAREN .)
    RBRACKET        reduce using rule 121 (Built_In_Declaration -> floor LPAREN params RPAREN .)
    RBLOCK          reduce using rule 121 (Built_In_Declaration -> floor LPAREN params RPAREN .)


state 248

    (122) Built_In_Declaration -> isset LPAREN params RPAREN .

    SEMICOLON       reduce using rule 122 (Built_In_Declaration -> isset LPAREN params RPAREN .)
    RPAREN          reduce using rule 122 (Built_In_Declaration -> isset LPAREN params RPAREN .)
    COMMA           reduce using rule 122 (Built_In_Declaration -> isset LPAREN params RPAREN .)
    RBRACKET        reduce using rule 122 (Built_In_Declaration -> isset LPAREN params RPAREN .)
    RBLOCK          reduce using rule 122 (Built_In_Declaration -> isset LPAREN params RPAREN .)


state 249

    (123) Built_In_Declaration -> list LPAREN params RPAREN .

    SEMICOLON       reduce using rule 123 (Built_In_Declaration -> list LPAREN params RPAREN .)
    RPAREN          reduce using rule 123 (Built_In_Declaration -> list LPAREN params RPAREN .)
    COMMA           reduce using rule 123 (Built_In_Declaration -> list LPAREN params RPAREN .)
    RBRACKET        reduce using rule 123 (Built_In_Declaration -> list LPAREN params RPAREN .)
    RBLOCK          reduce using rule 123 (Built_In_Declaration -> list LPAREN params RPAREN .)


state 250

    (124) Built_In_Declaration -> log LPAREN params RPAREN .

    SEMICOLON       reduce using rule 124 (Built_In_Declaration -> log LPAREN params RPAREN .)
    RPAREN          reduce using rule 124 (Built_In_Declaration -> log LPAREN params RPAREN .)
    COMMA           reduce using rule 124 (Built_In_Declaration -> log LPAREN params RPAREN .)
    RBRACKET        reduce using rule 124 (Built_In_Declaration -> log LPAREN params RPAREN .)
    RBLOCK          reduce using rule 124 (Built_In_Declaration -> log LPAREN params RPAREN .)


state 251

    (125) Built_In_Declaration -> log10 LPAREN params RPAREN .

    SEMICOLON       reduce using rule 125 (Built_In_Declaration -> log10 LPAREN params RPAREN .)
    RPAREN          reduce using rule 125 (Built_In_Declaration -> log10 LPAREN params RPAREN .)
    COMMA           reduce using rule 125 (Built_In_Declaration -> log10 LPAREN params RPAREN .)
    RBRACKET        reduce using rule 125 (Built_In_Declaration -> log10 LPAREN params RPAREN .)
    RBLOCK          reduce using rule 125 (Built_In_Declaration -> log10 LPAREN params RPAREN .)


state 252

    (126) Built_In_Declaration -> max LPAREN params RPAREN .

    SEMICOLON       reduce using rule 126 (Built_In_Declaration -> max LPAREN params RPAREN .)
    RPAREN          reduce using rule 126 (Built_In_Declaration -> max LPAREN params RPAREN .)
    COMMA           reduce using rule 126 (Built_In_Declaration -> max LPAREN params RPAREN .)
    RBRACKET        reduce using rule 126 (Built_In_Declaration -> max LPAREN params RPAREN .)
    RBLOCK          reduce using rule 126 (Built_In_Declaration -> max LPAREN params RPAREN .)


state 253

    (127) Built_In_Declaration -> min LPAREN params RPAREN .

    SEMICOLON       reduce using rule 127 (Built_In_Declaration -> min LPAREN params RPAREN .)
    RPAREN          reduce using rule 127 (Built_In_Declaration -> min LPAREN params RPAREN .)
    COMMA           reduce using rule 127 (Built_In_Declaration -> min LPAREN params RPAREN .)
    RBRACKET        reduce using rule 127 (Built_In_Declaration -> min LPAREN params RPAREN .)
    RBLOCK          reduce using rule 127 (Built_In_Declaration -> min LPAREN params RPAREN .)


state 254

    (128) Built_In_Declaration -> rand LPAREN params RPAREN .

    SEMICOLON       reduce using rule 128 (Built_In_Declaration -> rand LPAREN params RPAREN .)
    RPAREN          reduce using rule 128 (Built_In_Declaration -> rand LPAREN params RPAREN .)
    COMMA           reduce using rule 128 (Built_In_Declaration -> rand LPAREN params RPAREN .)
    RBRACKET        reduce using rule 128 (Built_In_Declaration -> rand LPAREN params RPAREN .)
    RBLOCK          reduce using rule 128 (Built_In_Declaration -> rand LPAREN params RPAREN .)


state 255

    (129) Built_In_Declaration -> round LPAREN params RPAREN .

    SEMICOLON       reduce using rule 129 (Built_In_Declaration -> round LPAREN params RPAREN .)
    RPAREN          reduce using rule 129 (Built_In_Declaration -> round LPAREN params RPAREN .)
    COMMA           reduce using rule 129 (Built_In_Declaration -> round LPAREN params RPAREN .)
    RBRACKET        reduce using rule 129 (Built_In_Declaration -> round LPAREN params RPAREN .)
    RBLOCK          reduce using rule 129 (Built_In_Declaration -> round LPAREN params RPAREN .)


state 256

    (130) Built_In_Declaration -> sin LPAREN params RPAREN .

    SEMICOLON       reduce using rule 130 (Built_In_Declaration -> sin LPAREN params RPAREN .)
    RPAREN          reduce using rule 130 (Built_In_Declaration -> sin LPAREN params RPAREN .)
    COMMA           reduce using rule 130 (Built_In_Declaration -> sin LPAREN params RPAREN .)
    RBRACKET        reduce using rule 130 (Built_In_Declaration -> sin LPAREN params RPAREN .)
    RBLOCK          reduce using rule 130 (Built_In_Declaration -> sin LPAREN params RPAREN .)


state 257

    (131) Built_In_Declaration -> sqrt LPAREN params RPAREN .

    SEMICOLON       reduce using rule 131 (Built_In_Declaration -> sqrt LPAREN params RPAREN .)
    RPAREN          reduce using rule 131 (Built_In_Declaration -> sqrt LPAREN params RPAREN .)
    COMMA           reduce using rule 131 (Built_In_Declaration -> sqrt LPAREN params RPAREN .)
    RBRACKET        reduce using rule 131 (Built_In_Declaration -> sqrt LPAREN params RPAREN .)
    RBLOCK          reduce using rule 131 (Built_In_Declaration -> sqrt LPAREN params RPAREN .)


state 258

    (132) Built_In_Declaration -> unset LPAREN params RPAREN .

    SEMICOLON       reduce using rule 132 (Built_In_Declaration -> unset LPAREN params RPAREN .)
    RPAREN          reduce using rule 132 (Built_In_Declaration -> unset LPAREN params RPAREN .)
    COMMA           reduce using rule 132 (Built_In_Declaration -> unset LPAREN params RPAREN .)
    RBRACKET        reduce using rule 132 (Built_In_Declaration -> unset LPAREN params RPAREN .)
    RBLOCK          reduce using rule 132 (Built_In_Declaration -> unset LPAREN params RPAREN .)


state 259

    (28) constant_declaration -> const ID EQUAL data_type SEMICOLON .

    COMMENT         reduce using rule 28 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    COMMENT_HASHTAG reduce using rule 28 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    COMMENT_MULTI   reduce using rule 28 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    empty           reduce using rule 28 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    include         reduce using rule 28 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    const           reduce using rule 28 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    print           reduce using rule 28 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    echo            reduce using rule 28 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    while           reduce using rule 28 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    if              reduce using rule 28 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    function        reduce using rule 28 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    ID              reduce using rule 28 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    class           reduce using rule 28 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    new             reduce using rule 28 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    CLOSE_TAG       reduce using rule 28 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    for             reduce using rule 28 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    foreach         reduce using rule 28 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    exit            reduce using rule 28 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    VARIABLE        reduce using rule 28 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    array           reduce using rule 28 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    pow             reduce using rule 28 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    POW             reduce using rule 28 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    abs             reduce using rule 28 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    cos             reduce using rule 28 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    deg2rad         reduce using rule 28 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    rad2deg         reduce using rule 28 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    die             reduce using rule 28 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    exp             reduce using rule 28 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    floor           reduce using rule 28 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    isset           reduce using rule 28 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    list            reduce using rule 28 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    log             reduce using rule 28 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    log10           reduce using rule 28 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    max             reduce using rule 28 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    min             reduce using rule 28 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    rand            reduce using rule 28 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    round           reduce using rule 28 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    sin             reduce using rule 28 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    sqrt            reduce using rule 28 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    unset           reduce using rule 28 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    CADENA          reduce using rule 28 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    $end            reduce using rule 28 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)
    RBLOCK          reduce using rule 28 (constant_declaration -> const ID EQUAL data_type SEMICOLON .)


state 260

    (102) params -> params COMMA single_param .

    RPAREN          reduce using rule 102 (params -> params COMMA single_param .)
    COMMA           reduce using rule 102 (params -> params COMMA single_param .)
    RBRACKET        reduce using rule 102 (params -> params COMMA single_param .)
    RBLOCK          reduce using rule 102 (params -> params COMMA single_param .)
    SEMICOLON       reduce using rule 102 (params -> params COMMA single_param .)


state 261

    (30) print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .

    COMMENT         reduce using rule 30 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    COMMENT_HASHTAG reduce using rule 30 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    COMMENT_MULTI   reduce using rule 30 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    empty           reduce using rule 30 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    include         reduce using rule 30 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    const           reduce using rule 30 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    print           reduce using rule 30 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    echo            reduce using rule 30 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    while           reduce using rule 30 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    if              reduce using rule 30 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    function        reduce using rule 30 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    ID              reduce using rule 30 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    class           reduce using rule 30 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    new             reduce using rule 30 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    CLOSE_TAG       reduce using rule 30 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    for             reduce using rule 30 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    foreach         reduce using rule 30 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    exit            reduce using rule 30 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    VARIABLE        reduce using rule 30 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    array           reduce using rule 30 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    pow             reduce using rule 30 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    POW             reduce using rule 30 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    abs             reduce using rule 30 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    cos             reduce using rule 30 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    deg2rad         reduce using rule 30 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    rad2deg         reduce using rule 30 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    die             reduce using rule 30 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    exp             reduce using rule 30 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    floor           reduce using rule 30 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    isset           reduce using rule 30 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    list            reduce using rule 30 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    log             reduce using rule 30 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    log10           reduce using rule 30 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    max             reduce using rule 30 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    min             reduce using rule 30 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    rand            reduce using rule 30 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    round           reduce using rule 30 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    sin             reduce using rule 30 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    sqrt            reduce using rule 30 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    unset           reduce using rule 30 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    CADENA          reduce using rule 30 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    $end            reduce using rule 30 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)
    RBLOCK          reduce using rule 30 (print_declaration -> print LPAREN var_declaration2 RPAREN SEMICOLON .)


state 262

    (31) print_declaration -> print LPAREN data_type RPAREN SEMICOLON .

    COMMENT         reduce using rule 31 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    COMMENT_HASHTAG reduce using rule 31 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    COMMENT_MULTI   reduce using rule 31 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    empty           reduce using rule 31 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    include         reduce using rule 31 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    const           reduce using rule 31 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    print           reduce using rule 31 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    echo            reduce using rule 31 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    while           reduce using rule 31 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    if              reduce using rule 31 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    function        reduce using rule 31 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    ID              reduce using rule 31 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    class           reduce using rule 31 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    new             reduce using rule 31 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    CLOSE_TAG       reduce using rule 31 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    for             reduce using rule 31 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    foreach         reduce using rule 31 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    exit            reduce using rule 31 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    VARIABLE        reduce using rule 31 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    array           reduce using rule 31 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    pow             reduce using rule 31 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    POW             reduce using rule 31 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    abs             reduce using rule 31 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    cos             reduce using rule 31 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    deg2rad         reduce using rule 31 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    rad2deg         reduce using rule 31 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    die             reduce using rule 31 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    exp             reduce using rule 31 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    floor           reduce using rule 31 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    isset           reduce using rule 31 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    list            reduce using rule 31 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    log             reduce using rule 31 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    log10           reduce using rule 31 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    max             reduce using rule 31 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    min             reduce using rule 31 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    rand            reduce using rule 31 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    round           reduce using rule 31 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    sin             reduce using rule 31 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    sqrt            reduce using rule 31 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    unset           reduce using rule 31 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    CADENA          reduce using rule 31 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    $end            reduce using rule 31 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)
    RBLOCK          reduce using rule 31 (print_declaration -> print LPAREN data_type RPAREN SEMICOLON .)


state 263

    (34) echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .

    COMMENT         reduce using rule 34 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    COMMENT_HASHTAG reduce using rule 34 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    COMMENT_MULTI   reduce using rule 34 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    empty           reduce using rule 34 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    include         reduce using rule 34 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    const           reduce using rule 34 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    print           reduce using rule 34 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    echo            reduce using rule 34 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    while           reduce using rule 34 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    if              reduce using rule 34 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    function        reduce using rule 34 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    ID              reduce using rule 34 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    class           reduce using rule 34 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    new             reduce using rule 34 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    CLOSE_TAG       reduce using rule 34 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    for             reduce using rule 34 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    foreach         reduce using rule 34 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    exit            reduce using rule 34 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    VARIABLE        reduce using rule 34 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    array           reduce using rule 34 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    pow             reduce using rule 34 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    POW             reduce using rule 34 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    abs             reduce using rule 34 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    cos             reduce using rule 34 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    deg2rad         reduce using rule 34 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    rad2deg         reduce using rule 34 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    die             reduce using rule 34 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    exp             reduce using rule 34 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    floor           reduce using rule 34 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    isset           reduce using rule 34 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    list            reduce using rule 34 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    log             reduce using rule 34 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    log10           reduce using rule 34 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    max             reduce using rule 34 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    min             reduce using rule 34 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    rand            reduce using rule 34 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    round           reduce using rule 34 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    sin             reduce using rule 34 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    sqrt            reduce using rule 34 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    unset           reduce using rule 34 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    CADENA          reduce using rule 34 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    $end            reduce using rule 34 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)
    RBLOCK          reduce using rule 34 (echo_declaration -> echo LPAREN var_declaration2 RPAREN SEMICOLON .)


state 264

    (35) echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .

    COMMENT         reduce using rule 35 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    COMMENT_HASHTAG reduce using rule 35 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    COMMENT_MULTI   reduce using rule 35 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    empty           reduce using rule 35 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    include         reduce using rule 35 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    const           reduce using rule 35 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    print           reduce using rule 35 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    echo            reduce using rule 35 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    while           reduce using rule 35 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    if              reduce using rule 35 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    function        reduce using rule 35 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    ID              reduce using rule 35 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    class           reduce using rule 35 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    new             reduce using rule 35 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    CLOSE_TAG       reduce using rule 35 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    for             reduce using rule 35 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    foreach         reduce using rule 35 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    exit            reduce using rule 35 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    VARIABLE        reduce using rule 35 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    array           reduce using rule 35 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    pow             reduce using rule 35 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    POW             reduce using rule 35 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    abs             reduce using rule 35 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    cos             reduce using rule 35 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    deg2rad         reduce using rule 35 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    rad2deg         reduce using rule 35 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    die             reduce using rule 35 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    exp             reduce using rule 35 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    floor           reduce using rule 35 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    isset           reduce using rule 35 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    list            reduce using rule 35 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    log             reduce using rule 35 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    log10           reduce using rule 35 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    max             reduce using rule 35 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    min             reduce using rule 35 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    rand            reduce using rule 35 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    round           reduce using rule 35 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    sin             reduce using rule 35 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    sqrt            reduce using rule 35 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    unset           reduce using rule 35 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    CADENA          reduce using rule 35 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    $end            reduce using rule 35 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)
    RBLOCK          reduce using rule 35 (echo_declaration -> echo LPAREN data_type RPAREN SEMICOLON .)


state 265

    (66) factor -> LPAREN expression RPAREN .

    PLUSPLUS        reduce using rule 66 (factor -> LPAREN expression RPAREN .)
    MINUSMINUS      reduce using rule 66 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 66 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 66 (factor -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 66 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 66 (factor -> LPAREN expression RPAREN .)
    MULEQUAL        reduce using rule 66 (factor -> LPAREN expression RPAREN .)
    PLUSEQUAL       reduce using rule 66 (factor -> LPAREN expression RPAREN .)
    MINUSEQUAL      reduce using rule 66 (factor -> LPAREN expression RPAREN .)
    MOD             reduce using rule 66 (factor -> LPAREN expression RPAREN .)
    BOOL_OR         reduce using rule 66 (factor -> LPAREN expression RPAREN .)
    BOOL_AND        reduce using rule 66 (factor -> LPAREN expression RPAREN .)
    NOT             reduce using rule 66 (factor -> LPAREN expression RPAREN .)
    or              reduce using rule 66 (factor -> LPAREN expression RPAREN .)
    and             reduce using rule 66 (factor -> LPAREN expression RPAREN .)
    LESS            reduce using rule 66 (factor -> LPAREN expression RPAREN .)
    LESSEQUAL       reduce using rule 66 (factor -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 66 (factor -> LPAREN expression RPAREN .)
    GREATEREQUAL    reduce using rule 66 (factor -> LPAREN expression RPAREN .)
    DEQUAL          reduce using rule 66 (factor -> LPAREN expression RPAREN .)
    DISTINT         reduce using rule 66 (factor -> LPAREN expression RPAREN .)
    DIVEQUAL        reduce using rule 66 (factor -> LPAREN expression RPAREN .)
    ISEQUAL         reduce using rule 66 (factor -> LPAREN expression RPAREN .)
    ISIDENTICAL     reduce using rule 66 (factor -> LPAREN expression RPAREN .)
    ISNOTIDENTICAL  reduce using rule 66 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 66 (factor -> LPAREN expression RPAREN .)
    as              reduce using rule 66 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 66 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 66 (factor -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 66 (factor -> LPAREN expression RPAREN .)
    RBLOCK          reduce using rule 66 (factor -> LPAREN expression RPAREN .)


state 266

    (54) iteration_stmt -> while LPAREN expression RPAREN LBLOCK . declaration RBLOCK
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . obj_declaration
    (19) declaration -> . create_obj_declaration
    (20) declaration -> . footer_declaration
    (21) declaration -> . for_loop
    (22) declaration -> . foreach_loop
    (23) declaration -> . exit_statement
    (24) declaration -> . empty
    (27) header_declaration -> . include CADENA SEMICOLON
    (37) var_declaration -> . var_declaration2 SEMICOLON
    (28) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (29) print_declaration -> . print var_declaration2 SEMICOLON
    (30) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (31) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (32) print_declaration -> . print data_type SEMICOLON
    (33) echo_declaration -> . echo var_declaration2 SEMICOLON
    (34) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (35) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (36) echo_declaration -> . echo data_type SEMICOLON
    (54) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (92) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (97) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration RBLOCK
    (98) fun_call -> . ID LPAREN params RPAREN
    (99) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (100) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (106) for_loop -> . for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK
    (111) foreach_loop -> . foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK
    (110) exit_statement -> . exit LPAREN expression RPAREN SEMICOLON
    (38) var_declaration2 -> . VARIABLE
    (39) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (40) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL CADENA
    (42) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (43) var_declaration2 -> . VARIABLE EQUAL expression
    (44) var_declaration2 -> . Built_In_Declaration
    (45) var_declaration2 -> . Concatenar_Cadenas_declaration
    (46) var_declaration2 -> . VARIABLE assignment_tail
    (47) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (112) Built_In_Declaration -> . array LPAREN params RPAREN
    (113) Built_In_Declaration -> . pow LPAREN params RPAREN
    (114) Built_In_Declaration -> . POW LPAREN params RPAREN
    (115) Built_In_Declaration -> . abs LPAREN params RPAREN
    (116) Built_In_Declaration -> . cos LPAREN params RPAREN
    (117) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (118) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (119) Built_In_Declaration -> . die LPAREN params RPAREN
    (120) Built_In_Declaration -> . exp LPAREN params RPAREN
    (121) Built_In_Declaration -> . floor LPAREN params RPAREN
    (122) Built_In_Declaration -> . isset LPAREN params RPAREN
    (123) Built_In_Declaration -> . list LPAREN params RPAREN
    (124) Built_In_Declaration -> . log LPAREN params RPAREN
    (125) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (126) Built_In_Declaration -> . max LPAREN params RPAREN
    (127) Built_In_Declaration -> . min LPAREN params RPAREN
    (128) Built_In_Declaration -> . rand LPAREN params RPAREN
    (129) Built_In_Declaration -> . round LPAREN params RPAREN
    (130) Built_In_Declaration -> . sin LPAREN params RPAREN
    (131) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (132) Built_In_Declaration -> . unset LPAREN params RPAREN
    (133) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (134) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (135) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 24
    include         shift and go to state 25
    const           shift and go to state 28
    print           shift and go to state 30
    echo            shift and go to state 31
    while           shift and go to state 32
    if              shift and go to state 33
    function        shift and go to state 34
    ID              shift and go to state 29
    class           shift and go to state 35
    new             shift and go to state 36
    CLOSE_TAG       shift and go to state 37
    for             shift and go to state 38
    foreach         shift and go to state 39
    exit            shift and go to state 40
    VARIABLE        shift and go to state 41
    array           shift and go to state 44
    pow             shift and go to state 45
    POW             shift and go to state 46
    abs             shift and go to state 47
    cos             shift and go to state 48
    deg2rad         shift and go to state 49
    rad2deg         shift and go to state 50
    die             shift and go to state 51
    exp             shift and go to state 52
    floor           shift and go to state 53
    isset           shift and go to state 54
    list            shift and go to state 55
    log             shift and go to state 56
    log10           shift and go to state 57
    max             shift and go to state 58
    min             shift and go to state 59
    rand            shift and go to state 60
    round           shift and go to state 61
    sin             shift and go to state 62
    sqrt            shift and go to state 63
    unset           shift and go to state 64
    CADENA          shift and go to state 26

    declaration                    shift and go to state 282
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    obj_declaration                shift and go to state 18
    create_obj_declaration         shift and go to state 19
    footer_declaration             shift and go to state 20
    for_loop                       shift and go to state 21
    foreach_loop                   shift and go to state 22
    exit_statement                 shift and go to state 23
    var_declaration2               shift and go to state 27
    Built_In_Declaration           shift and go to state 42
    Concatenar_Cadenas_declaration shift and go to state 43

state 267

    (56) expression -> additive_expression logical_op additive_expression .

    RPAREN          reduce using rule 56 (expression -> additive_expression logical_op additive_expression .)
    as              reduce using rule 56 (expression -> additive_expression logical_op additive_expression .)
    SEMICOLON       reduce using rule 56 (expression -> additive_expression logical_op additive_expression .)
    COMMA           reduce using rule 56 (expression -> additive_expression logical_op additive_expression .)
    RBRACKET        reduce using rule 56 (expression -> additive_expression logical_op additive_expression .)
    RBLOCK          reduce using rule 56 (expression -> additive_expression logical_op additive_expression .)


state 268

    (57) expression -> additive_expression comp_op additive_expression .
    (58) expression -> additive_expression comp_op additive_expression . logical_op additive_expression comp_op additive_expression
    (87) logical_op -> . BOOL_OR
    (88) logical_op -> . BOOL_AND
    (89) logical_op -> . NOT
    (90) logical_op -> . or
    (91) logical_op -> . and

    RPAREN          reduce using rule 57 (expression -> additive_expression comp_op additive_expression .)
    as              reduce using rule 57 (expression -> additive_expression comp_op additive_expression .)
    SEMICOLON       reduce using rule 57 (expression -> additive_expression comp_op additive_expression .)
    COMMA           reduce using rule 57 (expression -> additive_expression comp_op additive_expression .)
    RBRACKET        reduce using rule 57 (expression -> additive_expression comp_op additive_expression .)
    RBLOCK          reduce using rule 57 (expression -> additive_expression comp_op additive_expression .)
    BOOL_OR         shift and go to state 196
    BOOL_AND        shift and go to state 197
    NOT             shift and go to state 198
    or              shift and go to state 199
    and             shift and go to state 200

    logical_op                     shift and go to state 283

state 269

    (60) additive_expression -> term math_op term .

    BOOL_OR         reduce using rule 60 (additive_expression -> term math_op term .)
    BOOL_AND        reduce using rule 60 (additive_expression -> term math_op term .)
    NOT             reduce using rule 60 (additive_expression -> term math_op term .)
    or              reduce using rule 60 (additive_expression -> term math_op term .)
    and             reduce using rule 60 (additive_expression -> term math_op term .)
    LESS            reduce using rule 60 (additive_expression -> term math_op term .)
    LESSEQUAL       reduce using rule 60 (additive_expression -> term math_op term .)
    GREATER         reduce using rule 60 (additive_expression -> term math_op term .)
    GREATEREQUAL    reduce using rule 60 (additive_expression -> term math_op term .)
    DEQUAL          reduce using rule 60 (additive_expression -> term math_op term .)
    DISTINT         reduce using rule 60 (additive_expression -> term math_op term .)
    DIVEQUAL        reduce using rule 60 (additive_expression -> term math_op term .)
    ISEQUAL         reduce using rule 60 (additive_expression -> term math_op term .)
    ISIDENTICAL     reduce using rule 60 (additive_expression -> term math_op term .)
    ISNOTIDENTICAL  reduce using rule 60 (additive_expression -> term math_op term .)
    RPAREN          reduce using rule 60 (additive_expression -> term math_op term .)
    as              reduce using rule 60 (additive_expression -> term math_op term .)
    SEMICOLON       reduce using rule 60 (additive_expression -> term math_op term .)
    COMMA           reduce using rule 60 (additive_expression -> term math_op term .)
    RBRACKET        reduce using rule 60 (additive_expression -> term math_op term .)
    RBLOCK          reduce using rule 60 (additive_expression -> term math_op term .)


state 270

    (92) if_statement -> if LPAREN expression RPAREN LBLOCK . declaration_list RBLOCK else_part
    (4) declaration_list -> . declaration
    (5) declaration_list -> . declaration_list declaration
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . obj_declaration
    (19) declaration -> . create_obj_declaration
    (20) declaration -> . footer_declaration
    (21) declaration -> . for_loop
    (22) declaration -> . foreach_loop
    (23) declaration -> . exit_statement
    (24) declaration -> . empty
    (27) header_declaration -> . include CADENA SEMICOLON
    (37) var_declaration -> . var_declaration2 SEMICOLON
    (28) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (29) print_declaration -> . print var_declaration2 SEMICOLON
    (30) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (31) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (32) print_declaration -> . print data_type SEMICOLON
    (33) echo_declaration -> . echo var_declaration2 SEMICOLON
    (34) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (35) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (36) echo_declaration -> . echo data_type SEMICOLON
    (54) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (92) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (97) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration RBLOCK
    (98) fun_call -> . ID LPAREN params RPAREN
    (99) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (100) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (106) for_loop -> . for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK
    (111) foreach_loop -> . foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK
    (110) exit_statement -> . exit LPAREN expression RPAREN SEMICOLON
    (38) var_declaration2 -> . VARIABLE
    (39) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (40) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL CADENA
    (42) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (43) var_declaration2 -> . VARIABLE EQUAL expression
    (44) var_declaration2 -> . Built_In_Declaration
    (45) var_declaration2 -> . Concatenar_Cadenas_declaration
    (46) var_declaration2 -> . VARIABLE assignment_tail
    (47) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (112) Built_In_Declaration -> . array LPAREN params RPAREN
    (113) Built_In_Declaration -> . pow LPAREN params RPAREN
    (114) Built_In_Declaration -> . POW LPAREN params RPAREN
    (115) Built_In_Declaration -> . abs LPAREN params RPAREN
    (116) Built_In_Declaration -> . cos LPAREN params RPAREN
    (117) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (118) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (119) Built_In_Declaration -> . die LPAREN params RPAREN
    (120) Built_In_Declaration -> . exp LPAREN params RPAREN
    (121) Built_In_Declaration -> . floor LPAREN params RPAREN
    (122) Built_In_Declaration -> . isset LPAREN params RPAREN
    (123) Built_In_Declaration -> . list LPAREN params RPAREN
    (124) Built_In_Declaration -> . log LPAREN params RPAREN
    (125) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (126) Built_In_Declaration -> . max LPAREN params RPAREN
    (127) Built_In_Declaration -> . min LPAREN params RPAREN
    (128) Built_In_Declaration -> . rand LPAREN params RPAREN
    (129) Built_In_Declaration -> . round LPAREN params RPAREN
    (130) Built_In_Declaration -> . sin LPAREN params RPAREN
    (131) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (132) Built_In_Declaration -> . unset LPAREN params RPAREN
    (133) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (134) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (135) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 24
    include         shift and go to state 25
    const           shift and go to state 28
    print           shift and go to state 30
    echo            shift and go to state 31
    while           shift and go to state 32
    if              shift and go to state 33
    function        shift and go to state 34
    ID              shift and go to state 29
    class           shift and go to state 35
    new             shift and go to state 36
    CLOSE_TAG       shift and go to state 37
    for             shift and go to state 38
    foreach         shift and go to state 39
    exit            shift and go to state 40
    VARIABLE        shift and go to state 41
    array           shift and go to state 44
    pow             shift and go to state 45
    POW             shift and go to state 46
    abs             shift and go to state 47
    cos             shift and go to state 48
    deg2rad         shift and go to state 49
    rad2deg         shift and go to state 50
    die             shift and go to state 51
    exp             shift and go to state 52
    floor           shift and go to state 53
    isset           shift and go to state 54
    list            shift and go to state 55
    log             shift and go to state 56
    log10           shift and go to state 57
    max             shift and go to state 58
    min             shift and go to state 59
    rand            shift and go to state 60
    round           shift and go to state 61
    sin             shift and go to state 62
    sqrt            shift and go to state 63
    unset           shift and go to state 64
    CADENA          shift and go to state 26

    declaration_list               shift and go to state 284
    declaration                    shift and go to state 5
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    obj_declaration                shift and go to state 18
    create_obj_declaration         shift and go to state 19
    footer_declaration             shift and go to state 20
    for_loop                       shift and go to state 21
    foreach_loop                   shift and go to state 22
    exit_statement                 shift and go to state 23
    var_declaration2               shift and go to state 27
    Built_In_Declaration           shift and go to state 42
    Concatenar_Cadenas_declaration shift and go to state 43

state 271

    (97) fun_declaration -> function ID LPAREN params RPAREN . LBLOCK declaration RBLOCK

    LBLOCK          shift and go to state 285


state 272

    (99) obj_declaration -> class ID LBLOCK declaration RBLOCK .

    COMMENT         reduce using rule 99 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    COMMENT_HASHTAG reduce using rule 99 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    COMMENT_MULTI   reduce using rule 99 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    empty           reduce using rule 99 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    include         reduce using rule 99 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    const           reduce using rule 99 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    print           reduce using rule 99 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    echo            reduce using rule 99 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    while           reduce using rule 99 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    if              reduce using rule 99 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    function        reduce using rule 99 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    ID              reduce using rule 99 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    class           reduce using rule 99 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    new             reduce using rule 99 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    CLOSE_TAG       reduce using rule 99 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    for             reduce using rule 99 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    foreach         reduce using rule 99 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    exit            reduce using rule 99 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    VARIABLE        reduce using rule 99 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    array           reduce using rule 99 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    pow             reduce using rule 99 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    POW             reduce using rule 99 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    abs             reduce using rule 99 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    cos             reduce using rule 99 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    deg2rad         reduce using rule 99 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    rad2deg         reduce using rule 99 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    die             reduce using rule 99 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    exp             reduce using rule 99 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    floor           reduce using rule 99 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    isset           reduce using rule 99 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    list            reduce using rule 99 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    log             reduce using rule 99 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    log10           reduce using rule 99 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    max             reduce using rule 99 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    min             reduce using rule 99 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    rand            reduce using rule 99 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    round           reduce using rule 99 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    sin             reduce using rule 99 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    sqrt            reduce using rule 99 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    unset           reduce using rule 99 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    CADENA          reduce using rule 99 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    $end            reduce using rule 99 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)
    RBLOCK          reduce using rule 99 (obj_declaration -> class ID LBLOCK declaration RBLOCK .)


state 273

    (100) create_obj_declaration -> new ID LPAREN params RPAREN .

    COMMENT         reduce using rule 100 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    COMMENT_HASHTAG reduce using rule 100 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    COMMENT_MULTI   reduce using rule 100 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    empty           reduce using rule 100 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    include         reduce using rule 100 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    const           reduce using rule 100 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    print           reduce using rule 100 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    echo            reduce using rule 100 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    while           reduce using rule 100 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    if              reduce using rule 100 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    function        reduce using rule 100 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    ID              reduce using rule 100 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    class           reduce using rule 100 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    new             reduce using rule 100 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    CLOSE_TAG       reduce using rule 100 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    for             reduce using rule 100 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    foreach         reduce using rule 100 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    exit            reduce using rule 100 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    VARIABLE        reduce using rule 100 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    array           reduce using rule 100 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    pow             reduce using rule 100 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    POW             reduce using rule 100 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    abs             reduce using rule 100 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    cos             reduce using rule 100 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    deg2rad         reduce using rule 100 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    rad2deg         reduce using rule 100 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    die             reduce using rule 100 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    exp             reduce using rule 100 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    floor           reduce using rule 100 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    isset           reduce using rule 100 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    list            reduce using rule 100 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    log             reduce using rule 100 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    log10           reduce using rule 100 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    max             reduce using rule 100 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    min             reduce using rule 100 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    rand            reduce using rule 100 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    round           reduce using rule 100 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    sin             reduce using rule 100 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    sqrt            reduce using rule 100 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    unset           reduce using rule 100 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    CADENA          reduce using rule 100 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    $end            reduce using rule 100 (create_obj_declaration -> new ID LPAREN params RPAREN .)
    RBLOCK          reduce using rule 100 (create_obj_declaration -> new ID LPAREN params RPAREN .)


state 274

    (106) for_loop -> for LPAREN for_init for_expr for_update . RPAREN LBLOCK declaration_list RBLOCK

    RPAREN          shift and go to state 286


state 275

    (109) for_update -> expression .

    RPAREN          reduce using rule 109 (for_update -> expression .)


state 276

    (108) for_expr -> expression SEMICOLON .

    NUMBER          reduce using rule 108 (for_expr -> expression SEMICOLON .)
    VARIABLE        reduce using rule 108 (for_expr -> expression SEMICOLON .)
    LPAREN          reduce using rule 108 (for_expr -> expression SEMICOLON .)
    PLUSPLUS        reduce using rule 108 (for_expr -> expression SEMICOLON .)
    MINUSMINUS      reduce using rule 108 (for_expr -> expression SEMICOLON .)


state 277

    (111) foreach_loop -> foreach LPAREN expression as expression . RPAREN LBLOCK declaration_list RBLOCK

    RPAREN          shift and go to state 287


state 278

    (110) exit_statement -> exit LPAREN expression RPAREN SEMICOLON .

    COMMENT         reduce using rule 110 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    COMMENT_HASHTAG reduce using rule 110 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    COMMENT_MULTI   reduce using rule 110 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    empty           reduce using rule 110 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    include         reduce using rule 110 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    const           reduce using rule 110 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    print           reduce using rule 110 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    echo            reduce using rule 110 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    while           reduce using rule 110 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    if              reduce using rule 110 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    function        reduce using rule 110 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    ID              reduce using rule 110 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    class           reduce using rule 110 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    new             reduce using rule 110 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    CLOSE_TAG       reduce using rule 110 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    for             reduce using rule 110 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    foreach         reduce using rule 110 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    exit            reduce using rule 110 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    VARIABLE        reduce using rule 110 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    array           reduce using rule 110 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    pow             reduce using rule 110 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    POW             reduce using rule 110 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    abs             reduce using rule 110 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    cos             reduce using rule 110 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    deg2rad         reduce using rule 110 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    rad2deg         reduce using rule 110 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    die             reduce using rule 110 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    exp             reduce using rule 110 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    floor           reduce using rule 110 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    isset           reduce using rule 110 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    list            reduce using rule 110 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    log             reduce using rule 110 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    log10           reduce using rule 110 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    max             reduce using rule 110 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    min             reduce using rule 110 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    rand            reduce using rule 110 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    round           reduce using rule 110 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    sin             reduce using rule 110 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    sqrt            reduce using rule 110 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    unset           reduce using rule 110 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    CADENA          reduce using rule 110 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    $end            reduce using rule 110 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)
    RBLOCK          reduce using rule 110 (exit_statement -> exit LPAREN expression RPAREN SEMICOLON .)


state 279

    (51) assignment_tail -> VARIABLE LBRACKET expression COMMA . params
    (101) params -> . single_param
    (102) params -> . params COMMA single_param
    (103) single_param -> . var_declaration2
    (104) single_param -> . data_type
    (105) single_param -> . empty_function
    (38) var_declaration2 -> . VARIABLE
    (39) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (40) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL CADENA
    (42) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (43) var_declaration2 -> . VARIABLE EQUAL expression
    (44) var_declaration2 -> . Built_In_Declaration
    (45) var_declaration2 -> . Concatenar_Cadenas_declaration
    (46) var_declaration2 -> . VARIABLE assignment_tail
    (47) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (25) data_type -> . NUMBER
    (26) data_type -> . CADENA
    (137) empty_function -> .
    (112) Built_In_Declaration -> . array LPAREN params RPAREN
    (113) Built_In_Declaration -> . pow LPAREN params RPAREN
    (114) Built_In_Declaration -> . POW LPAREN params RPAREN
    (115) Built_In_Declaration -> . abs LPAREN params RPAREN
    (116) Built_In_Declaration -> . cos LPAREN params RPAREN
    (117) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (118) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (119) Built_In_Declaration -> . die LPAREN params RPAREN
    (120) Built_In_Declaration -> . exp LPAREN params RPAREN
    (121) Built_In_Declaration -> . floor LPAREN params RPAREN
    (122) Built_In_Declaration -> . isset LPAREN params RPAREN
    (123) Built_In_Declaration -> . list LPAREN params RPAREN
    (124) Built_In_Declaration -> . log LPAREN params RPAREN
    (125) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (126) Built_In_Declaration -> . max LPAREN params RPAREN
    (127) Built_In_Declaration -> . min LPAREN params RPAREN
    (128) Built_In_Declaration -> . rand LPAREN params RPAREN
    (129) Built_In_Declaration -> . round LPAREN params RPAREN
    (130) Built_In_Declaration -> . sin LPAREN params RPAREN
    (131) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (132) Built_In_Declaration -> . unset LPAREN params RPAREN
    (133) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (134) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (135) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    VARIABLE        shift and go to state 41
    NUMBER          shift and go to state 74
    CADENA          shift and go to state 75
    SEMICOLON       reduce using rule 137 (empty_function -> .)
    RPAREN          reduce using rule 137 (empty_function -> .)
    COMMA           reduce using rule 137 (empty_function -> .)
    RBRACKET        reduce using rule 137 (empty_function -> .)
    RBLOCK          reduce using rule 137 (empty_function -> .)
    array           shift and go to state 44
    pow             shift and go to state 45
    POW             shift and go to state 46
    abs             shift and go to state 47
    cos             shift and go to state 48
    deg2rad         shift and go to state 49
    rad2deg         shift and go to state 50
    die             shift and go to state 51
    exp             shift and go to state 52
    floor           shift and go to state 53
    isset           shift and go to state 54
    list            shift and go to state 55
    log             shift and go to state 56
    log10           shift and go to state 57
    max             shift and go to state 58
    min             shift and go to state 59
    rand            shift and go to state 60
    round           shift and go to state 61
    sin             shift and go to state 62
    sqrt            shift and go to state 63
    unset           shift and go to state 64

    params                         shift and go to state 288
    single_param                   shift and go to state 120
    var_declaration2               shift and go to state 121
    data_type                      shift and go to state 122
    empty_function                 shift and go to state 123
    Built_In_Declaration           shift and go to state 42
    Concatenar_Cadenas_declaration shift and go to state 43

state 280

    (52) assignment_tail -> VARIABLE LBRACKET params RBRACKET .

    SEMICOLON       reduce using rule 52 (assignment_tail -> VARIABLE LBRACKET params RBRACKET .)
    RPAREN          reduce using rule 52 (assignment_tail -> VARIABLE LBRACKET params RBRACKET .)
    COMMA           reduce using rule 52 (assignment_tail -> VARIABLE LBRACKET params RBRACKET .)
    RBRACKET        reduce using rule 52 (assignment_tail -> VARIABLE LBRACKET params RBRACKET .)
    RBLOCK          reduce using rule 52 (assignment_tail -> VARIABLE LBRACKET params RBRACKET .)


state 281

    (53) assignment_tail -> VARIABLE LBLOCK params RBLOCK .

    SEMICOLON       reduce using rule 53 (assignment_tail -> VARIABLE LBLOCK params RBLOCK .)
    RPAREN          reduce using rule 53 (assignment_tail -> VARIABLE LBLOCK params RBLOCK .)
    COMMA           reduce using rule 53 (assignment_tail -> VARIABLE LBLOCK params RBLOCK .)
    RBRACKET        reduce using rule 53 (assignment_tail -> VARIABLE LBLOCK params RBLOCK .)
    RBLOCK          reduce using rule 53 (assignment_tail -> VARIABLE LBLOCK params RBLOCK .)


state 282

    (54) iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration . RBLOCK

    RBLOCK          shift and go to state 289


state 283

    (58) expression -> additive_expression comp_op additive_expression logical_op . additive_expression comp_op additive_expression
    (59) additive_expression -> . term
    (60) additive_expression -> . term math_op term
    (61) term -> . factor
    (62) term -> . factor increment_decrement_op
    (63) term -> . increment_decrement_op factor
    (64) factor -> . NUMBER
    (65) factor -> . VARIABLE
    (66) factor -> . LPAREN expression RPAREN
    (67) increment_decrement_op -> . PLUSPLUS
    (68) increment_decrement_op -> . MINUSMINUS

    NUMBER          shift and go to state 138
    VARIABLE        shift and go to state 139
    LPAREN          shift and go to state 132
    PLUSPLUS        shift and go to state 140
    MINUSMINUS      shift and go to state 141

    additive_expression            shift and go to state 290
    term                           shift and go to state 135
    factor                         shift and go to state 136
    increment_decrement_op         shift and go to state 137

state 284

    (92) if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list . RBLOCK else_part
    (5) declaration_list -> declaration_list . declaration
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . obj_declaration
    (19) declaration -> . create_obj_declaration
    (20) declaration -> . footer_declaration
    (21) declaration -> . for_loop
    (22) declaration -> . foreach_loop
    (23) declaration -> . exit_statement
    (24) declaration -> . empty
    (27) header_declaration -> . include CADENA SEMICOLON
    (37) var_declaration -> . var_declaration2 SEMICOLON
    (28) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (29) print_declaration -> . print var_declaration2 SEMICOLON
    (30) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (31) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (32) print_declaration -> . print data_type SEMICOLON
    (33) echo_declaration -> . echo var_declaration2 SEMICOLON
    (34) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (35) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (36) echo_declaration -> . echo data_type SEMICOLON
    (54) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (92) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (97) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration RBLOCK
    (98) fun_call -> . ID LPAREN params RPAREN
    (99) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (100) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (106) for_loop -> . for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK
    (111) foreach_loop -> . foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK
    (110) exit_statement -> . exit LPAREN expression RPAREN SEMICOLON
    (38) var_declaration2 -> . VARIABLE
    (39) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (40) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL CADENA
    (42) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (43) var_declaration2 -> . VARIABLE EQUAL expression
    (44) var_declaration2 -> . Built_In_Declaration
    (45) var_declaration2 -> . Concatenar_Cadenas_declaration
    (46) var_declaration2 -> . VARIABLE assignment_tail
    (47) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (112) Built_In_Declaration -> . array LPAREN params RPAREN
    (113) Built_In_Declaration -> . pow LPAREN params RPAREN
    (114) Built_In_Declaration -> . POW LPAREN params RPAREN
    (115) Built_In_Declaration -> . abs LPAREN params RPAREN
    (116) Built_In_Declaration -> . cos LPAREN params RPAREN
    (117) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (118) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (119) Built_In_Declaration -> . die LPAREN params RPAREN
    (120) Built_In_Declaration -> . exp LPAREN params RPAREN
    (121) Built_In_Declaration -> . floor LPAREN params RPAREN
    (122) Built_In_Declaration -> . isset LPAREN params RPAREN
    (123) Built_In_Declaration -> . list LPAREN params RPAREN
    (124) Built_In_Declaration -> . log LPAREN params RPAREN
    (125) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (126) Built_In_Declaration -> . max LPAREN params RPAREN
    (127) Built_In_Declaration -> . min LPAREN params RPAREN
    (128) Built_In_Declaration -> . rand LPAREN params RPAREN
    (129) Built_In_Declaration -> . round LPAREN params RPAREN
    (130) Built_In_Declaration -> . sin LPAREN params RPAREN
    (131) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (132) Built_In_Declaration -> . unset LPAREN params RPAREN
    (133) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (134) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (135) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    RBLOCK          shift and go to state 291
    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 24
    include         shift and go to state 25
    const           shift and go to state 28
    print           shift and go to state 30
    echo            shift and go to state 31
    while           shift and go to state 32
    if              shift and go to state 33
    function        shift and go to state 34
    ID              shift and go to state 29
    class           shift and go to state 35
    new             shift and go to state 36
    CLOSE_TAG       shift and go to state 37
    for             shift and go to state 38
    foreach         shift and go to state 39
    exit            shift and go to state 40
    VARIABLE        shift and go to state 41
    array           shift and go to state 44
    pow             shift and go to state 45
    POW             shift and go to state 46
    abs             shift and go to state 47
    cos             shift and go to state 48
    deg2rad         shift and go to state 49
    rad2deg         shift and go to state 50
    die             shift and go to state 51
    exp             shift and go to state 52
    floor           shift and go to state 53
    isset           shift and go to state 54
    list            shift and go to state 55
    log             shift and go to state 56
    log10           shift and go to state 57
    max             shift and go to state 58
    min             shift and go to state 59
    rand            shift and go to state 60
    round           shift and go to state 61
    sin             shift and go to state 62
    sqrt            shift and go to state 63
    unset           shift and go to state 64
    CADENA          shift and go to state 26

    declaration                    shift and go to state 65
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    obj_declaration                shift and go to state 18
    create_obj_declaration         shift and go to state 19
    footer_declaration             shift and go to state 20
    for_loop                       shift and go to state 21
    foreach_loop                   shift and go to state 22
    exit_statement                 shift and go to state 23
    var_declaration2               shift and go to state 27
    Built_In_Declaration           shift and go to state 42
    Concatenar_Cadenas_declaration shift and go to state 43

state 285

    (97) fun_declaration -> function ID LPAREN params RPAREN LBLOCK . declaration RBLOCK
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . obj_declaration
    (19) declaration -> . create_obj_declaration
    (20) declaration -> . footer_declaration
    (21) declaration -> . for_loop
    (22) declaration -> . foreach_loop
    (23) declaration -> . exit_statement
    (24) declaration -> . empty
    (27) header_declaration -> . include CADENA SEMICOLON
    (37) var_declaration -> . var_declaration2 SEMICOLON
    (28) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (29) print_declaration -> . print var_declaration2 SEMICOLON
    (30) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (31) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (32) print_declaration -> . print data_type SEMICOLON
    (33) echo_declaration -> . echo var_declaration2 SEMICOLON
    (34) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (35) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (36) echo_declaration -> . echo data_type SEMICOLON
    (54) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (92) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (97) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration RBLOCK
    (98) fun_call -> . ID LPAREN params RPAREN
    (99) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (100) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (106) for_loop -> . for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK
    (111) foreach_loop -> . foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK
    (110) exit_statement -> . exit LPAREN expression RPAREN SEMICOLON
    (38) var_declaration2 -> . VARIABLE
    (39) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (40) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL CADENA
    (42) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (43) var_declaration2 -> . VARIABLE EQUAL expression
    (44) var_declaration2 -> . Built_In_Declaration
    (45) var_declaration2 -> . Concatenar_Cadenas_declaration
    (46) var_declaration2 -> . VARIABLE assignment_tail
    (47) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (112) Built_In_Declaration -> . array LPAREN params RPAREN
    (113) Built_In_Declaration -> . pow LPAREN params RPAREN
    (114) Built_In_Declaration -> . POW LPAREN params RPAREN
    (115) Built_In_Declaration -> . abs LPAREN params RPAREN
    (116) Built_In_Declaration -> . cos LPAREN params RPAREN
    (117) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (118) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (119) Built_In_Declaration -> . die LPAREN params RPAREN
    (120) Built_In_Declaration -> . exp LPAREN params RPAREN
    (121) Built_In_Declaration -> . floor LPAREN params RPAREN
    (122) Built_In_Declaration -> . isset LPAREN params RPAREN
    (123) Built_In_Declaration -> . list LPAREN params RPAREN
    (124) Built_In_Declaration -> . log LPAREN params RPAREN
    (125) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (126) Built_In_Declaration -> . max LPAREN params RPAREN
    (127) Built_In_Declaration -> . min LPAREN params RPAREN
    (128) Built_In_Declaration -> . rand LPAREN params RPAREN
    (129) Built_In_Declaration -> . round LPAREN params RPAREN
    (130) Built_In_Declaration -> . sin LPAREN params RPAREN
    (131) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (132) Built_In_Declaration -> . unset LPAREN params RPAREN
    (133) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (134) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (135) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 24
    include         shift and go to state 25
    const           shift and go to state 28
    print           shift and go to state 30
    echo            shift and go to state 31
    while           shift and go to state 32
    if              shift and go to state 33
    function        shift and go to state 34
    ID              shift and go to state 29
    class           shift and go to state 35
    new             shift and go to state 36
    CLOSE_TAG       shift and go to state 37
    for             shift and go to state 38
    foreach         shift and go to state 39
    exit            shift and go to state 40
    VARIABLE        shift and go to state 41
    array           shift and go to state 44
    pow             shift and go to state 45
    POW             shift and go to state 46
    abs             shift and go to state 47
    cos             shift and go to state 48
    deg2rad         shift and go to state 49
    rad2deg         shift and go to state 50
    die             shift and go to state 51
    exp             shift and go to state 52
    floor           shift and go to state 53
    isset           shift and go to state 54
    list            shift and go to state 55
    log             shift and go to state 56
    log10           shift and go to state 57
    max             shift and go to state 58
    min             shift and go to state 59
    rand            shift and go to state 60
    round           shift and go to state 61
    sin             shift and go to state 62
    sqrt            shift and go to state 63
    unset           shift and go to state 64
    CADENA          shift and go to state 26

    declaration                    shift and go to state 292
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    obj_declaration                shift and go to state 18
    create_obj_declaration         shift and go to state 19
    footer_declaration             shift and go to state 20
    for_loop                       shift and go to state 21
    foreach_loop                   shift and go to state 22
    exit_statement                 shift and go to state 23
    var_declaration2               shift and go to state 27
    Built_In_Declaration           shift and go to state 42
    Concatenar_Cadenas_declaration shift and go to state 43

state 286

    (106) for_loop -> for LPAREN for_init for_expr for_update RPAREN . LBLOCK declaration_list RBLOCK

    LBLOCK          shift and go to state 293


state 287

    (111) foreach_loop -> foreach LPAREN expression as expression RPAREN . LBLOCK declaration_list RBLOCK

    LBLOCK          shift and go to state 294


state 288

    (51) assignment_tail -> VARIABLE LBRACKET expression COMMA params .
    (102) params -> params . COMMA single_param

  ! shift/reduce conflict for COMMA resolved as shift
    SEMICOLON       reduce using rule 51 (assignment_tail -> VARIABLE LBRACKET expression COMMA params .)
    RPAREN          reduce using rule 51 (assignment_tail -> VARIABLE LBRACKET expression COMMA params .)
    RBRACKET        reduce using rule 51 (assignment_tail -> VARIABLE LBRACKET expression COMMA params .)
    RBLOCK          reduce using rule 51 (assignment_tail -> VARIABLE LBRACKET expression COMMA params .)
    COMMA           shift and go to state 187

  ! COMMA           [ reduce using rule 51 (assignment_tail -> VARIABLE LBRACKET expression COMMA params .) ]


state 289

    (54) iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .

    COMMENT         reduce using rule 54 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    COMMENT_HASHTAG reduce using rule 54 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    COMMENT_MULTI   reduce using rule 54 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    empty           reduce using rule 54 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    include         reduce using rule 54 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    const           reduce using rule 54 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    print           reduce using rule 54 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    echo            reduce using rule 54 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    while           reduce using rule 54 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    if              reduce using rule 54 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    function        reduce using rule 54 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    ID              reduce using rule 54 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    class           reduce using rule 54 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    new             reduce using rule 54 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    CLOSE_TAG       reduce using rule 54 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    for             reduce using rule 54 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    foreach         reduce using rule 54 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    exit            reduce using rule 54 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    VARIABLE        reduce using rule 54 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    array           reduce using rule 54 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    pow             reduce using rule 54 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    POW             reduce using rule 54 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    abs             reduce using rule 54 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    cos             reduce using rule 54 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    deg2rad         reduce using rule 54 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    rad2deg         reduce using rule 54 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    die             reduce using rule 54 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    exp             reduce using rule 54 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    floor           reduce using rule 54 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    isset           reduce using rule 54 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    list            reduce using rule 54 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    log             reduce using rule 54 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    log10           reduce using rule 54 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    max             reduce using rule 54 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    min             reduce using rule 54 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    rand            reduce using rule 54 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    round           reduce using rule 54 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    sin             reduce using rule 54 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    sqrt            reduce using rule 54 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    unset           reduce using rule 54 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    CADENA          reduce using rule 54 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    $end            reduce using rule 54 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)
    RBLOCK          reduce using rule 54 (iteration_stmt -> while LPAREN expression RPAREN LBLOCK declaration RBLOCK .)


state 290

    (58) expression -> additive_expression comp_op additive_expression logical_op additive_expression . comp_op additive_expression
    (77) comp_op -> . LESS
    (78) comp_op -> . LESSEQUAL
    (79) comp_op -> . GREATER
    (80) comp_op -> . GREATEREQUAL
    (81) comp_op -> . DEQUAL
    (82) comp_op -> . DISTINT
    (83) comp_op -> . DIVEQUAL
    (84) comp_op -> . ISEQUAL
    (85) comp_op -> . ISIDENTICAL
    (86) comp_op -> . ISNOTIDENTICAL

    LESS            shift and go to state 201
    LESSEQUAL       shift and go to state 202
    GREATER         shift and go to state 203
    GREATEREQUAL    shift and go to state 204
    DEQUAL          shift and go to state 205
    DISTINT         shift and go to state 206
    DIVEQUAL        shift and go to state 207
    ISEQUAL         shift and go to state 208
    ISIDENTICAL     shift and go to state 209
    ISNOTIDENTICAL  shift and go to state 210

    comp_op                        shift and go to state 295

state 291

    (92) if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK . else_part
    (93) else_part -> . elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (94) else_part -> . else LBLOCK declaration_list RBLOCK
    (95) else_part -> . endif
    (96) else_part -> . empty

    elseif          shift and go to state 297
    else            shift and go to state 298
    endif           shift and go to state 299
    empty           shift and go to state 300

    else_part                      shift and go to state 296

state 292

    (97) fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration . RBLOCK

    RBLOCK          shift and go to state 301


state 293

    (106) for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK . declaration_list RBLOCK
    (4) declaration_list -> . declaration
    (5) declaration_list -> . declaration_list declaration
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . obj_declaration
    (19) declaration -> . create_obj_declaration
    (20) declaration -> . footer_declaration
    (21) declaration -> . for_loop
    (22) declaration -> . foreach_loop
    (23) declaration -> . exit_statement
    (24) declaration -> . empty
    (27) header_declaration -> . include CADENA SEMICOLON
    (37) var_declaration -> . var_declaration2 SEMICOLON
    (28) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (29) print_declaration -> . print var_declaration2 SEMICOLON
    (30) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (31) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (32) print_declaration -> . print data_type SEMICOLON
    (33) echo_declaration -> . echo var_declaration2 SEMICOLON
    (34) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (35) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (36) echo_declaration -> . echo data_type SEMICOLON
    (54) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (92) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (97) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration RBLOCK
    (98) fun_call -> . ID LPAREN params RPAREN
    (99) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (100) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (106) for_loop -> . for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK
    (111) foreach_loop -> . foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK
    (110) exit_statement -> . exit LPAREN expression RPAREN SEMICOLON
    (38) var_declaration2 -> . VARIABLE
    (39) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (40) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL CADENA
    (42) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (43) var_declaration2 -> . VARIABLE EQUAL expression
    (44) var_declaration2 -> . Built_In_Declaration
    (45) var_declaration2 -> . Concatenar_Cadenas_declaration
    (46) var_declaration2 -> . VARIABLE assignment_tail
    (47) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (112) Built_In_Declaration -> . array LPAREN params RPAREN
    (113) Built_In_Declaration -> . pow LPAREN params RPAREN
    (114) Built_In_Declaration -> . POW LPAREN params RPAREN
    (115) Built_In_Declaration -> . abs LPAREN params RPAREN
    (116) Built_In_Declaration -> . cos LPAREN params RPAREN
    (117) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (118) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (119) Built_In_Declaration -> . die LPAREN params RPAREN
    (120) Built_In_Declaration -> . exp LPAREN params RPAREN
    (121) Built_In_Declaration -> . floor LPAREN params RPAREN
    (122) Built_In_Declaration -> . isset LPAREN params RPAREN
    (123) Built_In_Declaration -> . list LPAREN params RPAREN
    (124) Built_In_Declaration -> . log LPAREN params RPAREN
    (125) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (126) Built_In_Declaration -> . max LPAREN params RPAREN
    (127) Built_In_Declaration -> . min LPAREN params RPAREN
    (128) Built_In_Declaration -> . rand LPAREN params RPAREN
    (129) Built_In_Declaration -> . round LPAREN params RPAREN
    (130) Built_In_Declaration -> . sin LPAREN params RPAREN
    (131) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (132) Built_In_Declaration -> . unset LPAREN params RPAREN
    (133) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (134) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (135) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 24
    include         shift and go to state 25
    const           shift and go to state 28
    print           shift and go to state 30
    echo            shift and go to state 31
    while           shift and go to state 32
    if              shift and go to state 33
    function        shift and go to state 34
    ID              shift and go to state 29
    class           shift and go to state 35
    new             shift and go to state 36
    CLOSE_TAG       shift and go to state 37
    for             shift and go to state 38
    foreach         shift and go to state 39
    exit            shift and go to state 40
    VARIABLE        shift and go to state 41
    array           shift and go to state 44
    pow             shift and go to state 45
    POW             shift and go to state 46
    abs             shift and go to state 47
    cos             shift and go to state 48
    deg2rad         shift and go to state 49
    rad2deg         shift and go to state 50
    die             shift and go to state 51
    exp             shift and go to state 52
    floor           shift and go to state 53
    isset           shift and go to state 54
    list            shift and go to state 55
    log             shift and go to state 56
    log10           shift and go to state 57
    max             shift and go to state 58
    min             shift and go to state 59
    rand            shift and go to state 60
    round           shift and go to state 61
    sin             shift and go to state 62
    sqrt            shift and go to state 63
    unset           shift and go to state 64
    CADENA          shift and go to state 26

    declaration_list               shift and go to state 302
    declaration                    shift and go to state 5
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    obj_declaration                shift and go to state 18
    create_obj_declaration         shift and go to state 19
    footer_declaration             shift and go to state 20
    for_loop                       shift and go to state 21
    foreach_loop                   shift and go to state 22
    exit_statement                 shift and go to state 23
    var_declaration2               shift and go to state 27
    Built_In_Declaration           shift and go to state 42
    Concatenar_Cadenas_declaration shift and go to state 43

state 294

    (111) foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK . declaration_list RBLOCK
    (4) declaration_list -> . declaration
    (5) declaration_list -> . declaration_list declaration
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . obj_declaration
    (19) declaration -> . create_obj_declaration
    (20) declaration -> . footer_declaration
    (21) declaration -> . for_loop
    (22) declaration -> . foreach_loop
    (23) declaration -> . exit_statement
    (24) declaration -> . empty
    (27) header_declaration -> . include CADENA SEMICOLON
    (37) var_declaration -> . var_declaration2 SEMICOLON
    (28) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (29) print_declaration -> . print var_declaration2 SEMICOLON
    (30) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (31) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (32) print_declaration -> . print data_type SEMICOLON
    (33) echo_declaration -> . echo var_declaration2 SEMICOLON
    (34) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (35) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (36) echo_declaration -> . echo data_type SEMICOLON
    (54) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (92) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (97) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration RBLOCK
    (98) fun_call -> . ID LPAREN params RPAREN
    (99) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (100) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (106) for_loop -> . for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK
    (111) foreach_loop -> . foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK
    (110) exit_statement -> . exit LPAREN expression RPAREN SEMICOLON
    (38) var_declaration2 -> . VARIABLE
    (39) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (40) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL CADENA
    (42) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (43) var_declaration2 -> . VARIABLE EQUAL expression
    (44) var_declaration2 -> . Built_In_Declaration
    (45) var_declaration2 -> . Concatenar_Cadenas_declaration
    (46) var_declaration2 -> . VARIABLE assignment_tail
    (47) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (112) Built_In_Declaration -> . array LPAREN params RPAREN
    (113) Built_In_Declaration -> . pow LPAREN params RPAREN
    (114) Built_In_Declaration -> . POW LPAREN params RPAREN
    (115) Built_In_Declaration -> . abs LPAREN params RPAREN
    (116) Built_In_Declaration -> . cos LPAREN params RPAREN
    (117) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (118) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (119) Built_In_Declaration -> . die LPAREN params RPAREN
    (120) Built_In_Declaration -> . exp LPAREN params RPAREN
    (121) Built_In_Declaration -> . floor LPAREN params RPAREN
    (122) Built_In_Declaration -> . isset LPAREN params RPAREN
    (123) Built_In_Declaration -> . list LPAREN params RPAREN
    (124) Built_In_Declaration -> . log LPAREN params RPAREN
    (125) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (126) Built_In_Declaration -> . max LPAREN params RPAREN
    (127) Built_In_Declaration -> . min LPAREN params RPAREN
    (128) Built_In_Declaration -> . rand LPAREN params RPAREN
    (129) Built_In_Declaration -> . round LPAREN params RPAREN
    (130) Built_In_Declaration -> . sin LPAREN params RPAREN
    (131) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (132) Built_In_Declaration -> . unset LPAREN params RPAREN
    (133) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (134) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (135) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 24
    include         shift and go to state 25
    const           shift and go to state 28
    print           shift and go to state 30
    echo            shift and go to state 31
    while           shift and go to state 32
    if              shift and go to state 33
    function        shift and go to state 34
    ID              shift and go to state 29
    class           shift and go to state 35
    new             shift and go to state 36
    CLOSE_TAG       shift and go to state 37
    for             shift and go to state 38
    foreach         shift and go to state 39
    exit            shift and go to state 40
    VARIABLE        shift and go to state 41
    array           shift and go to state 44
    pow             shift and go to state 45
    POW             shift and go to state 46
    abs             shift and go to state 47
    cos             shift and go to state 48
    deg2rad         shift and go to state 49
    rad2deg         shift and go to state 50
    die             shift and go to state 51
    exp             shift and go to state 52
    floor           shift and go to state 53
    isset           shift and go to state 54
    list            shift and go to state 55
    log             shift and go to state 56
    log10           shift and go to state 57
    max             shift and go to state 58
    min             shift and go to state 59
    rand            shift and go to state 60
    round           shift and go to state 61
    sin             shift and go to state 62
    sqrt            shift and go to state 63
    unset           shift and go to state 64
    CADENA          shift and go to state 26

    declaration_list               shift and go to state 303
    declaration                    shift and go to state 5
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    obj_declaration                shift and go to state 18
    create_obj_declaration         shift and go to state 19
    footer_declaration             shift and go to state 20
    for_loop                       shift and go to state 21
    foreach_loop                   shift and go to state 22
    exit_statement                 shift and go to state 23
    var_declaration2               shift and go to state 27
    Built_In_Declaration           shift and go to state 42
    Concatenar_Cadenas_declaration shift and go to state 43

state 295

    (58) expression -> additive_expression comp_op additive_expression logical_op additive_expression comp_op . additive_expression
    (59) additive_expression -> . term
    (60) additive_expression -> . term math_op term
    (61) term -> . factor
    (62) term -> . factor increment_decrement_op
    (63) term -> . increment_decrement_op factor
    (64) factor -> . NUMBER
    (65) factor -> . VARIABLE
    (66) factor -> . LPAREN expression RPAREN
    (67) increment_decrement_op -> . PLUSPLUS
    (68) increment_decrement_op -> . MINUSMINUS

    NUMBER          shift and go to state 138
    VARIABLE        shift and go to state 139
    LPAREN          shift and go to state 132
    PLUSPLUS        shift and go to state 140
    MINUSMINUS      shift and go to state 141

    additive_expression            shift and go to state 304
    term                           shift and go to state 135
    factor                         shift and go to state 136
    increment_decrement_op         shift and go to state 137

state 296

    (92) if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .

    COMMENT         reduce using rule 92 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    COMMENT_HASHTAG reduce using rule 92 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    COMMENT_MULTI   reduce using rule 92 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    empty           reduce using rule 92 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    include         reduce using rule 92 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    const           reduce using rule 92 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    print           reduce using rule 92 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    echo            reduce using rule 92 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    while           reduce using rule 92 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    if              reduce using rule 92 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    function        reduce using rule 92 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    ID              reduce using rule 92 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    class           reduce using rule 92 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    new             reduce using rule 92 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    CLOSE_TAG       reduce using rule 92 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    for             reduce using rule 92 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    foreach         reduce using rule 92 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    exit            reduce using rule 92 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    VARIABLE        reduce using rule 92 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    array           reduce using rule 92 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    pow             reduce using rule 92 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    POW             reduce using rule 92 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    abs             reduce using rule 92 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    cos             reduce using rule 92 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    deg2rad         reduce using rule 92 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    rad2deg         reduce using rule 92 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    die             reduce using rule 92 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    exp             reduce using rule 92 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    floor           reduce using rule 92 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    isset           reduce using rule 92 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    list            reduce using rule 92 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    log             reduce using rule 92 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    log10           reduce using rule 92 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    max             reduce using rule 92 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    min             reduce using rule 92 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    rand            reduce using rule 92 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    round           reduce using rule 92 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    sin             reduce using rule 92 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    sqrt            reduce using rule 92 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    unset           reduce using rule 92 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    CADENA          reduce using rule 92 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    $end            reduce using rule 92 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    RBLOCK          reduce using rule 92 (if_statement -> if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)


state 297

    (93) else_part -> elseif . LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part

    LPAREN          shift and go to state 305


state 298

    (94) else_part -> else . LBLOCK declaration_list RBLOCK

    LBLOCK          shift and go to state 306


state 299

    (95) else_part -> endif .

    COMMENT         reduce using rule 95 (else_part -> endif .)
    COMMENT_HASHTAG reduce using rule 95 (else_part -> endif .)
    COMMENT_MULTI   reduce using rule 95 (else_part -> endif .)
    empty           reduce using rule 95 (else_part -> endif .)
    include         reduce using rule 95 (else_part -> endif .)
    const           reduce using rule 95 (else_part -> endif .)
    print           reduce using rule 95 (else_part -> endif .)
    echo            reduce using rule 95 (else_part -> endif .)
    while           reduce using rule 95 (else_part -> endif .)
    if              reduce using rule 95 (else_part -> endif .)
    function        reduce using rule 95 (else_part -> endif .)
    ID              reduce using rule 95 (else_part -> endif .)
    class           reduce using rule 95 (else_part -> endif .)
    new             reduce using rule 95 (else_part -> endif .)
    CLOSE_TAG       reduce using rule 95 (else_part -> endif .)
    for             reduce using rule 95 (else_part -> endif .)
    foreach         reduce using rule 95 (else_part -> endif .)
    exit            reduce using rule 95 (else_part -> endif .)
    VARIABLE        reduce using rule 95 (else_part -> endif .)
    array           reduce using rule 95 (else_part -> endif .)
    pow             reduce using rule 95 (else_part -> endif .)
    POW             reduce using rule 95 (else_part -> endif .)
    abs             reduce using rule 95 (else_part -> endif .)
    cos             reduce using rule 95 (else_part -> endif .)
    deg2rad         reduce using rule 95 (else_part -> endif .)
    rad2deg         reduce using rule 95 (else_part -> endif .)
    die             reduce using rule 95 (else_part -> endif .)
    exp             reduce using rule 95 (else_part -> endif .)
    floor           reduce using rule 95 (else_part -> endif .)
    isset           reduce using rule 95 (else_part -> endif .)
    list            reduce using rule 95 (else_part -> endif .)
    log             reduce using rule 95 (else_part -> endif .)
    log10           reduce using rule 95 (else_part -> endif .)
    max             reduce using rule 95 (else_part -> endif .)
    min             reduce using rule 95 (else_part -> endif .)
    rand            reduce using rule 95 (else_part -> endif .)
    round           reduce using rule 95 (else_part -> endif .)
    sin             reduce using rule 95 (else_part -> endif .)
    sqrt            reduce using rule 95 (else_part -> endif .)
    unset           reduce using rule 95 (else_part -> endif .)
    CADENA          reduce using rule 95 (else_part -> endif .)
    $end            reduce using rule 95 (else_part -> endif .)
    RBLOCK          reduce using rule 95 (else_part -> endif .)


state 300

    (96) else_part -> empty .

    COMMENT         reduce using rule 96 (else_part -> empty .)
    COMMENT_HASHTAG reduce using rule 96 (else_part -> empty .)
    COMMENT_MULTI   reduce using rule 96 (else_part -> empty .)
    empty           reduce using rule 96 (else_part -> empty .)
    include         reduce using rule 96 (else_part -> empty .)
    const           reduce using rule 96 (else_part -> empty .)
    print           reduce using rule 96 (else_part -> empty .)
    echo            reduce using rule 96 (else_part -> empty .)
    while           reduce using rule 96 (else_part -> empty .)
    if              reduce using rule 96 (else_part -> empty .)
    function        reduce using rule 96 (else_part -> empty .)
    ID              reduce using rule 96 (else_part -> empty .)
    class           reduce using rule 96 (else_part -> empty .)
    new             reduce using rule 96 (else_part -> empty .)
    CLOSE_TAG       reduce using rule 96 (else_part -> empty .)
    for             reduce using rule 96 (else_part -> empty .)
    foreach         reduce using rule 96 (else_part -> empty .)
    exit            reduce using rule 96 (else_part -> empty .)
    VARIABLE        reduce using rule 96 (else_part -> empty .)
    array           reduce using rule 96 (else_part -> empty .)
    pow             reduce using rule 96 (else_part -> empty .)
    POW             reduce using rule 96 (else_part -> empty .)
    abs             reduce using rule 96 (else_part -> empty .)
    cos             reduce using rule 96 (else_part -> empty .)
    deg2rad         reduce using rule 96 (else_part -> empty .)
    rad2deg         reduce using rule 96 (else_part -> empty .)
    die             reduce using rule 96 (else_part -> empty .)
    exp             reduce using rule 96 (else_part -> empty .)
    floor           reduce using rule 96 (else_part -> empty .)
    isset           reduce using rule 96 (else_part -> empty .)
    list            reduce using rule 96 (else_part -> empty .)
    log             reduce using rule 96 (else_part -> empty .)
    log10           reduce using rule 96 (else_part -> empty .)
    max             reduce using rule 96 (else_part -> empty .)
    min             reduce using rule 96 (else_part -> empty .)
    rand            reduce using rule 96 (else_part -> empty .)
    round           reduce using rule 96 (else_part -> empty .)
    sin             reduce using rule 96 (else_part -> empty .)
    sqrt            reduce using rule 96 (else_part -> empty .)
    unset           reduce using rule 96 (else_part -> empty .)
    CADENA          reduce using rule 96 (else_part -> empty .)
    $end            reduce using rule 96 (else_part -> empty .)
    RBLOCK          reduce using rule 96 (else_part -> empty .)


state 301

    (97) fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .

    COMMENT         reduce using rule 97 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    COMMENT_HASHTAG reduce using rule 97 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    COMMENT_MULTI   reduce using rule 97 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    empty           reduce using rule 97 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    include         reduce using rule 97 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    const           reduce using rule 97 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    print           reduce using rule 97 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    echo            reduce using rule 97 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    while           reduce using rule 97 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    if              reduce using rule 97 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    function        reduce using rule 97 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    ID              reduce using rule 97 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    class           reduce using rule 97 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    new             reduce using rule 97 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    CLOSE_TAG       reduce using rule 97 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    for             reduce using rule 97 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    foreach         reduce using rule 97 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    exit            reduce using rule 97 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    VARIABLE        reduce using rule 97 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    array           reduce using rule 97 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    pow             reduce using rule 97 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    POW             reduce using rule 97 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    abs             reduce using rule 97 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    cos             reduce using rule 97 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    deg2rad         reduce using rule 97 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    rad2deg         reduce using rule 97 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    die             reduce using rule 97 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    exp             reduce using rule 97 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    floor           reduce using rule 97 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    isset           reduce using rule 97 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    list            reduce using rule 97 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    log             reduce using rule 97 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    log10           reduce using rule 97 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    max             reduce using rule 97 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    min             reduce using rule 97 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    rand            reduce using rule 97 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    round           reduce using rule 97 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    sin             reduce using rule 97 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    sqrt            reduce using rule 97 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    unset           reduce using rule 97 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    CADENA          reduce using rule 97 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    $end            reduce using rule 97 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)
    RBLOCK          reduce using rule 97 (fun_declaration -> function ID LPAREN params RPAREN LBLOCK declaration RBLOCK .)


state 302

    (106) for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list . RBLOCK
    (5) declaration_list -> declaration_list . declaration
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . obj_declaration
    (19) declaration -> . create_obj_declaration
    (20) declaration -> . footer_declaration
    (21) declaration -> . for_loop
    (22) declaration -> . foreach_loop
    (23) declaration -> . exit_statement
    (24) declaration -> . empty
    (27) header_declaration -> . include CADENA SEMICOLON
    (37) var_declaration -> . var_declaration2 SEMICOLON
    (28) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (29) print_declaration -> . print var_declaration2 SEMICOLON
    (30) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (31) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (32) print_declaration -> . print data_type SEMICOLON
    (33) echo_declaration -> . echo var_declaration2 SEMICOLON
    (34) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (35) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (36) echo_declaration -> . echo data_type SEMICOLON
    (54) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (92) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (97) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration RBLOCK
    (98) fun_call -> . ID LPAREN params RPAREN
    (99) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (100) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (106) for_loop -> . for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK
    (111) foreach_loop -> . foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK
    (110) exit_statement -> . exit LPAREN expression RPAREN SEMICOLON
    (38) var_declaration2 -> . VARIABLE
    (39) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (40) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL CADENA
    (42) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (43) var_declaration2 -> . VARIABLE EQUAL expression
    (44) var_declaration2 -> . Built_In_Declaration
    (45) var_declaration2 -> . Concatenar_Cadenas_declaration
    (46) var_declaration2 -> . VARIABLE assignment_tail
    (47) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (112) Built_In_Declaration -> . array LPAREN params RPAREN
    (113) Built_In_Declaration -> . pow LPAREN params RPAREN
    (114) Built_In_Declaration -> . POW LPAREN params RPAREN
    (115) Built_In_Declaration -> . abs LPAREN params RPAREN
    (116) Built_In_Declaration -> . cos LPAREN params RPAREN
    (117) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (118) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (119) Built_In_Declaration -> . die LPAREN params RPAREN
    (120) Built_In_Declaration -> . exp LPAREN params RPAREN
    (121) Built_In_Declaration -> . floor LPAREN params RPAREN
    (122) Built_In_Declaration -> . isset LPAREN params RPAREN
    (123) Built_In_Declaration -> . list LPAREN params RPAREN
    (124) Built_In_Declaration -> . log LPAREN params RPAREN
    (125) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (126) Built_In_Declaration -> . max LPAREN params RPAREN
    (127) Built_In_Declaration -> . min LPAREN params RPAREN
    (128) Built_In_Declaration -> . rand LPAREN params RPAREN
    (129) Built_In_Declaration -> . round LPAREN params RPAREN
    (130) Built_In_Declaration -> . sin LPAREN params RPAREN
    (131) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (132) Built_In_Declaration -> . unset LPAREN params RPAREN
    (133) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (134) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (135) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    RBLOCK          shift and go to state 307
    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 24
    include         shift and go to state 25
    const           shift and go to state 28
    print           shift and go to state 30
    echo            shift and go to state 31
    while           shift and go to state 32
    if              shift and go to state 33
    function        shift and go to state 34
    ID              shift and go to state 29
    class           shift and go to state 35
    new             shift and go to state 36
    CLOSE_TAG       shift and go to state 37
    for             shift and go to state 38
    foreach         shift and go to state 39
    exit            shift and go to state 40
    VARIABLE        shift and go to state 41
    array           shift and go to state 44
    pow             shift and go to state 45
    POW             shift and go to state 46
    abs             shift and go to state 47
    cos             shift and go to state 48
    deg2rad         shift and go to state 49
    rad2deg         shift and go to state 50
    die             shift and go to state 51
    exp             shift and go to state 52
    floor           shift and go to state 53
    isset           shift and go to state 54
    list            shift and go to state 55
    log             shift and go to state 56
    log10           shift and go to state 57
    max             shift and go to state 58
    min             shift and go to state 59
    rand            shift and go to state 60
    round           shift and go to state 61
    sin             shift and go to state 62
    sqrt            shift and go to state 63
    unset           shift and go to state 64
    CADENA          shift and go to state 26

    declaration                    shift and go to state 65
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    obj_declaration                shift and go to state 18
    create_obj_declaration         shift and go to state 19
    footer_declaration             shift and go to state 20
    for_loop                       shift and go to state 21
    foreach_loop                   shift and go to state 22
    exit_statement                 shift and go to state 23
    var_declaration2               shift and go to state 27
    Built_In_Declaration           shift and go to state 42
    Concatenar_Cadenas_declaration shift and go to state 43

state 303

    (111) foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list . RBLOCK
    (5) declaration_list -> declaration_list . declaration
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . obj_declaration
    (19) declaration -> . create_obj_declaration
    (20) declaration -> . footer_declaration
    (21) declaration -> . for_loop
    (22) declaration -> . foreach_loop
    (23) declaration -> . exit_statement
    (24) declaration -> . empty
    (27) header_declaration -> . include CADENA SEMICOLON
    (37) var_declaration -> . var_declaration2 SEMICOLON
    (28) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (29) print_declaration -> . print var_declaration2 SEMICOLON
    (30) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (31) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (32) print_declaration -> . print data_type SEMICOLON
    (33) echo_declaration -> . echo var_declaration2 SEMICOLON
    (34) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (35) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (36) echo_declaration -> . echo data_type SEMICOLON
    (54) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (92) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (97) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration RBLOCK
    (98) fun_call -> . ID LPAREN params RPAREN
    (99) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (100) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (106) for_loop -> . for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK
    (111) foreach_loop -> . foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK
    (110) exit_statement -> . exit LPAREN expression RPAREN SEMICOLON
    (38) var_declaration2 -> . VARIABLE
    (39) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (40) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL CADENA
    (42) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (43) var_declaration2 -> . VARIABLE EQUAL expression
    (44) var_declaration2 -> . Built_In_Declaration
    (45) var_declaration2 -> . Concatenar_Cadenas_declaration
    (46) var_declaration2 -> . VARIABLE assignment_tail
    (47) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (112) Built_In_Declaration -> . array LPAREN params RPAREN
    (113) Built_In_Declaration -> . pow LPAREN params RPAREN
    (114) Built_In_Declaration -> . POW LPAREN params RPAREN
    (115) Built_In_Declaration -> . abs LPAREN params RPAREN
    (116) Built_In_Declaration -> . cos LPAREN params RPAREN
    (117) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (118) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (119) Built_In_Declaration -> . die LPAREN params RPAREN
    (120) Built_In_Declaration -> . exp LPAREN params RPAREN
    (121) Built_In_Declaration -> . floor LPAREN params RPAREN
    (122) Built_In_Declaration -> . isset LPAREN params RPAREN
    (123) Built_In_Declaration -> . list LPAREN params RPAREN
    (124) Built_In_Declaration -> . log LPAREN params RPAREN
    (125) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (126) Built_In_Declaration -> . max LPAREN params RPAREN
    (127) Built_In_Declaration -> . min LPAREN params RPAREN
    (128) Built_In_Declaration -> . rand LPAREN params RPAREN
    (129) Built_In_Declaration -> . round LPAREN params RPAREN
    (130) Built_In_Declaration -> . sin LPAREN params RPAREN
    (131) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (132) Built_In_Declaration -> . unset LPAREN params RPAREN
    (133) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (134) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (135) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    RBLOCK          shift and go to state 308
    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 24
    include         shift and go to state 25
    const           shift and go to state 28
    print           shift and go to state 30
    echo            shift and go to state 31
    while           shift and go to state 32
    if              shift and go to state 33
    function        shift and go to state 34
    ID              shift and go to state 29
    class           shift and go to state 35
    new             shift and go to state 36
    CLOSE_TAG       shift and go to state 37
    for             shift and go to state 38
    foreach         shift and go to state 39
    exit            shift and go to state 40
    VARIABLE        shift and go to state 41
    array           shift and go to state 44
    pow             shift and go to state 45
    POW             shift and go to state 46
    abs             shift and go to state 47
    cos             shift and go to state 48
    deg2rad         shift and go to state 49
    rad2deg         shift and go to state 50
    die             shift and go to state 51
    exp             shift and go to state 52
    floor           shift and go to state 53
    isset           shift and go to state 54
    list            shift and go to state 55
    log             shift and go to state 56
    log10           shift and go to state 57
    max             shift and go to state 58
    min             shift and go to state 59
    rand            shift and go to state 60
    round           shift and go to state 61
    sin             shift and go to state 62
    sqrt            shift and go to state 63
    unset           shift and go to state 64
    CADENA          shift and go to state 26

    declaration                    shift and go to state 65
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    obj_declaration                shift and go to state 18
    create_obj_declaration         shift and go to state 19
    footer_declaration             shift and go to state 20
    for_loop                       shift and go to state 21
    foreach_loop                   shift and go to state 22
    exit_statement                 shift and go to state 23
    var_declaration2               shift and go to state 27
    Built_In_Declaration           shift and go to state 42
    Concatenar_Cadenas_declaration shift and go to state 43

state 304

    (58) expression -> additive_expression comp_op additive_expression logical_op additive_expression comp_op additive_expression .

    RPAREN          reduce using rule 58 (expression -> additive_expression comp_op additive_expression logical_op additive_expression comp_op additive_expression .)
    as              reduce using rule 58 (expression -> additive_expression comp_op additive_expression logical_op additive_expression comp_op additive_expression .)
    SEMICOLON       reduce using rule 58 (expression -> additive_expression comp_op additive_expression logical_op additive_expression comp_op additive_expression .)
    COMMA           reduce using rule 58 (expression -> additive_expression comp_op additive_expression logical_op additive_expression comp_op additive_expression .)
    RBRACKET        reduce using rule 58 (expression -> additive_expression comp_op additive_expression logical_op additive_expression comp_op additive_expression .)
    RBLOCK          reduce using rule 58 (expression -> additive_expression comp_op additive_expression logical_op additive_expression comp_op additive_expression .)


state 305

    (93) else_part -> elseif LPAREN . expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (55) expression -> . additive_expression
    (56) expression -> . additive_expression logical_op additive_expression
    (57) expression -> . additive_expression comp_op additive_expression
    (58) expression -> . additive_expression comp_op additive_expression logical_op additive_expression comp_op additive_expression
    (59) additive_expression -> . term
    (60) additive_expression -> . term math_op term
    (61) term -> . factor
    (62) term -> . factor increment_decrement_op
    (63) term -> . increment_decrement_op factor
    (64) factor -> . NUMBER
    (65) factor -> . VARIABLE
    (66) factor -> . LPAREN expression RPAREN
    (67) increment_decrement_op -> . PLUSPLUS
    (68) increment_decrement_op -> . MINUSMINUS

    NUMBER          shift and go to state 138
    VARIABLE        shift and go to state 139
    LPAREN          shift and go to state 132
    PLUSPLUS        shift and go to state 140
    MINUSMINUS      shift and go to state 141

    expression                     shift and go to state 309
    additive_expression            shift and go to state 134
    term                           shift and go to state 135
    factor                         shift and go to state 136
    increment_decrement_op         shift and go to state 137

state 306

    (94) else_part -> else LBLOCK . declaration_list RBLOCK
    (4) declaration_list -> . declaration
    (5) declaration_list -> . declaration_list declaration
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . obj_declaration
    (19) declaration -> . create_obj_declaration
    (20) declaration -> . footer_declaration
    (21) declaration -> . for_loop
    (22) declaration -> . foreach_loop
    (23) declaration -> . exit_statement
    (24) declaration -> . empty
    (27) header_declaration -> . include CADENA SEMICOLON
    (37) var_declaration -> . var_declaration2 SEMICOLON
    (28) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (29) print_declaration -> . print var_declaration2 SEMICOLON
    (30) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (31) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (32) print_declaration -> . print data_type SEMICOLON
    (33) echo_declaration -> . echo var_declaration2 SEMICOLON
    (34) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (35) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (36) echo_declaration -> . echo data_type SEMICOLON
    (54) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (92) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (97) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration RBLOCK
    (98) fun_call -> . ID LPAREN params RPAREN
    (99) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (100) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (106) for_loop -> . for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK
    (111) foreach_loop -> . foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK
    (110) exit_statement -> . exit LPAREN expression RPAREN SEMICOLON
    (38) var_declaration2 -> . VARIABLE
    (39) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (40) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL CADENA
    (42) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (43) var_declaration2 -> . VARIABLE EQUAL expression
    (44) var_declaration2 -> . Built_In_Declaration
    (45) var_declaration2 -> . Concatenar_Cadenas_declaration
    (46) var_declaration2 -> . VARIABLE assignment_tail
    (47) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (112) Built_In_Declaration -> . array LPAREN params RPAREN
    (113) Built_In_Declaration -> . pow LPAREN params RPAREN
    (114) Built_In_Declaration -> . POW LPAREN params RPAREN
    (115) Built_In_Declaration -> . abs LPAREN params RPAREN
    (116) Built_In_Declaration -> . cos LPAREN params RPAREN
    (117) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (118) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (119) Built_In_Declaration -> . die LPAREN params RPAREN
    (120) Built_In_Declaration -> . exp LPAREN params RPAREN
    (121) Built_In_Declaration -> . floor LPAREN params RPAREN
    (122) Built_In_Declaration -> . isset LPAREN params RPAREN
    (123) Built_In_Declaration -> . list LPAREN params RPAREN
    (124) Built_In_Declaration -> . log LPAREN params RPAREN
    (125) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (126) Built_In_Declaration -> . max LPAREN params RPAREN
    (127) Built_In_Declaration -> . min LPAREN params RPAREN
    (128) Built_In_Declaration -> . rand LPAREN params RPAREN
    (129) Built_In_Declaration -> . round LPAREN params RPAREN
    (130) Built_In_Declaration -> . sin LPAREN params RPAREN
    (131) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (132) Built_In_Declaration -> . unset LPAREN params RPAREN
    (133) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (134) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (135) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 24
    include         shift and go to state 25
    const           shift and go to state 28
    print           shift and go to state 30
    echo            shift and go to state 31
    while           shift and go to state 32
    if              shift and go to state 33
    function        shift and go to state 34
    ID              shift and go to state 29
    class           shift and go to state 35
    new             shift and go to state 36
    CLOSE_TAG       shift and go to state 37
    for             shift and go to state 38
    foreach         shift and go to state 39
    exit            shift and go to state 40
    VARIABLE        shift and go to state 41
    array           shift and go to state 44
    pow             shift and go to state 45
    POW             shift and go to state 46
    abs             shift and go to state 47
    cos             shift and go to state 48
    deg2rad         shift and go to state 49
    rad2deg         shift and go to state 50
    die             shift and go to state 51
    exp             shift and go to state 52
    floor           shift and go to state 53
    isset           shift and go to state 54
    list            shift and go to state 55
    log             shift and go to state 56
    log10           shift and go to state 57
    max             shift and go to state 58
    min             shift and go to state 59
    rand            shift and go to state 60
    round           shift and go to state 61
    sin             shift and go to state 62
    sqrt            shift and go to state 63
    unset           shift and go to state 64
    CADENA          shift and go to state 26

    declaration_list               shift and go to state 310
    declaration                    shift and go to state 5
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    obj_declaration                shift and go to state 18
    create_obj_declaration         shift and go to state 19
    footer_declaration             shift and go to state 20
    for_loop                       shift and go to state 21
    foreach_loop                   shift and go to state 22
    exit_statement                 shift and go to state 23
    var_declaration2               shift and go to state 27
    Built_In_Declaration           shift and go to state 42
    Concatenar_Cadenas_declaration shift and go to state 43

state 307

    (106) for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .

    COMMENT         reduce using rule 106 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    COMMENT_HASHTAG reduce using rule 106 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    COMMENT_MULTI   reduce using rule 106 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    empty           reduce using rule 106 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    include         reduce using rule 106 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    const           reduce using rule 106 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    print           reduce using rule 106 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    echo            reduce using rule 106 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    while           reduce using rule 106 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    if              reduce using rule 106 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    function        reduce using rule 106 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    ID              reduce using rule 106 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    class           reduce using rule 106 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    new             reduce using rule 106 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    CLOSE_TAG       reduce using rule 106 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    for             reduce using rule 106 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    foreach         reduce using rule 106 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    exit            reduce using rule 106 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    VARIABLE        reduce using rule 106 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    array           reduce using rule 106 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    pow             reduce using rule 106 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    POW             reduce using rule 106 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    abs             reduce using rule 106 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    cos             reduce using rule 106 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    deg2rad         reduce using rule 106 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    rad2deg         reduce using rule 106 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    die             reduce using rule 106 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    exp             reduce using rule 106 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    floor           reduce using rule 106 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    isset           reduce using rule 106 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    list            reduce using rule 106 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    log             reduce using rule 106 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    log10           reduce using rule 106 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    max             reduce using rule 106 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    min             reduce using rule 106 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    rand            reduce using rule 106 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    round           reduce using rule 106 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    sin             reduce using rule 106 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    sqrt            reduce using rule 106 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    unset           reduce using rule 106 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    CADENA          reduce using rule 106 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    $end            reduce using rule 106 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)
    RBLOCK          reduce using rule 106 (for_loop -> for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK .)


state 308

    (111) foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .

    COMMENT         reduce using rule 111 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    COMMENT_HASHTAG reduce using rule 111 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    COMMENT_MULTI   reduce using rule 111 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    empty           reduce using rule 111 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    include         reduce using rule 111 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    const           reduce using rule 111 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    print           reduce using rule 111 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    echo            reduce using rule 111 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    while           reduce using rule 111 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    if              reduce using rule 111 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    function        reduce using rule 111 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    ID              reduce using rule 111 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    class           reduce using rule 111 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    new             reduce using rule 111 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    CLOSE_TAG       reduce using rule 111 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    for             reduce using rule 111 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    foreach         reduce using rule 111 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    exit            reduce using rule 111 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    VARIABLE        reduce using rule 111 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    array           reduce using rule 111 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    pow             reduce using rule 111 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    POW             reduce using rule 111 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    abs             reduce using rule 111 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    cos             reduce using rule 111 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    deg2rad         reduce using rule 111 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    rad2deg         reduce using rule 111 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    die             reduce using rule 111 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    exp             reduce using rule 111 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    floor           reduce using rule 111 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    isset           reduce using rule 111 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    list            reduce using rule 111 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    log             reduce using rule 111 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    log10           reduce using rule 111 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    max             reduce using rule 111 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    min             reduce using rule 111 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    rand            reduce using rule 111 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    round           reduce using rule 111 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    sin             reduce using rule 111 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    sqrt            reduce using rule 111 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    unset           reduce using rule 111 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    CADENA          reduce using rule 111 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    $end            reduce using rule 111 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)
    RBLOCK          reduce using rule 111 (foreach_loop -> foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK .)


state 309

    (93) else_part -> elseif LPAREN expression . RPAREN LBLOCK declaration_list RBLOCK else_part

    RPAREN          shift and go to state 311


state 310

    (94) else_part -> else LBLOCK declaration_list . RBLOCK
    (5) declaration_list -> declaration_list . declaration
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . obj_declaration
    (19) declaration -> . create_obj_declaration
    (20) declaration -> . footer_declaration
    (21) declaration -> . for_loop
    (22) declaration -> . foreach_loop
    (23) declaration -> . exit_statement
    (24) declaration -> . empty
    (27) header_declaration -> . include CADENA SEMICOLON
    (37) var_declaration -> . var_declaration2 SEMICOLON
    (28) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (29) print_declaration -> . print var_declaration2 SEMICOLON
    (30) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (31) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (32) print_declaration -> . print data_type SEMICOLON
    (33) echo_declaration -> . echo var_declaration2 SEMICOLON
    (34) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (35) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (36) echo_declaration -> . echo data_type SEMICOLON
    (54) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (92) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (97) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration RBLOCK
    (98) fun_call -> . ID LPAREN params RPAREN
    (99) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (100) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (106) for_loop -> . for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK
    (111) foreach_loop -> . foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK
    (110) exit_statement -> . exit LPAREN expression RPAREN SEMICOLON
    (38) var_declaration2 -> . VARIABLE
    (39) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (40) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL CADENA
    (42) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (43) var_declaration2 -> . VARIABLE EQUAL expression
    (44) var_declaration2 -> . Built_In_Declaration
    (45) var_declaration2 -> . Concatenar_Cadenas_declaration
    (46) var_declaration2 -> . VARIABLE assignment_tail
    (47) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (112) Built_In_Declaration -> . array LPAREN params RPAREN
    (113) Built_In_Declaration -> . pow LPAREN params RPAREN
    (114) Built_In_Declaration -> . POW LPAREN params RPAREN
    (115) Built_In_Declaration -> . abs LPAREN params RPAREN
    (116) Built_In_Declaration -> . cos LPAREN params RPAREN
    (117) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (118) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (119) Built_In_Declaration -> . die LPAREN params RPAREN
    (120) Built_In_Declaration -> . exp LPAREN params RPAREN
    (121) Built_In_Declaration -> . floor LPAREN params RPAREN
    (122) Built_In_Declaration -> . isset LPAREN params RPAREN
    (123) Built_In_Declaration -> . list LPAREN params RPAREN
    (124) Built_In_Declaration -> . log LPAREN params RPAREN
    (125) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (126) Built_In_Declaration -> . max LPAREN params RPAREN
    (127) Built_In_Declaration -> . min LPAREN params RPAREN
    (128) Built_In_Declaration -> . rand LPAREN params RPAREN
    (129) Built_In_Declaration -> . round LPAREN params RPAREN
    (130) Built_In_Declaration -> . sin LPAREN params RPAREN
    (131) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (132) Built_In_Declaration -> . unset LPAREN params RPAREN
    (133) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (134) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (135) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    RBLOCK          shift and go to state 312
    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 24
    include         shift and go to state 25
    const           shift and go to state 28
    print           shift and go to state 30
    echo            shift and go to state 31
    while           shift and go to state 32
    if              shift and go to state 33
    function        shift and go to state 34
    ID              shift and go to state 29
    class           shift and go to state 35
    new             shift and go to state 36
    CLOSE_TAG       shift and go to state 37
    for             shift and go to state 38
    foreach         shift and go to state 39
    exit            shift and go to state 40
    VARIABLE        shift and go to state 41
    array           shift and go to state 44
    pow             shift and go to state 45
    POW             shift and go to state 46
    abs             shift and go to state 47
    cos             shift and go to state 48
    deg2rad         shift and go to state 49
    rad2deg         shift and go to state 50
    die             shift and go to state 51
    exp             shift and go to state 52
    floor           shift and go to state 53
    isset           shift and go to state 54
    list            shift and go to state 55
    log             shift and go to state 56
    log10           shift and go to state 57
    max             shift and go to state 58
    min             shift and go to state 59
    rand            shift and go to state 60
    round           shift and go to state 61
    sin             shift and go to state 62
    sqrt            shift and go to state 63
    unset           shift and go to state 64
    CADENA          shift and go to state 26

    declaration                    shift and go to state 65
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    obj_declaration                shift and go to state 18
    create_obj_declaration         shift and go to state 19
    footer_declaration             shift and go to state 20
    for_loop                       shift and go to state 21
    foreach_loop                   shift and go to state 22
    exit_statement                 shift and go to state 23
    var_declaration2               shift and go to state 27
    Built_In_Declaration           shift and go to state 42
    Concatenar_Cadenas_declaration shift and go to state 43

state 311

    (93) else_part -> elseif LPAREN expression RPAREN . LBLOCK declaration_list RBLOCK else_part

    LBLOCK          shift and go to state 313


state 312

    (94) else_part -> else LBLOCK declaration_list RBLOCK .

    COMMENT         reduce using rule 94 (else_part -> else LBLOCK declaration_list RBLOCK .)
    COMMENT_HASHTAG reduce using rule 94 (else_part -> else LBLOCK declaration_list RBLOCK .)
    COMMENT_MULTI   reduce using rule 94 (else_part -> else LBLOCK declaration_list RBLOCK .)
    empty           reduce using rule 94 (else_part -> else LBLOCK declaration_list RBLOCK .)
    include         reduce using rule 94 (else_part -> else LBLOCK declaration_list RBLOCK .)
    const           reduce using rule 94 (else_part -> else LBLOCK declaration_list RBLOCK .)
    print           reduce using rule 94 (else_part -> else LBLOCK declaration_list RBLOCK .)
    echo            reduce using rule 94 (else_part -> else LBLOCK declaration_list RBLOCK .)
    while           reduce using rule 94 (else_part -> else LBLOCK declaration_list RBLOCK .)
    if              reduce using rule 94 (else_part -> else LBLOCK declaration_list RBLOCK .)
    function        reduce using rule 94 (else_part -> else LBLOCK declaration_list RBLOCK .)
    ID              reduce using rule 94 (else_part -> else LBLOCK declaration_list RBLOCK .)
    class           reduce using rule 94 (else_part -> else LBLOCK declaration_list RBLOCK .)
    new             reduce using rule 94 (else_part -> else LBLOCK declaration_list RBLOCK .)
    CLOSE_TAG       reduce using rule 94 (else_part -> else LBLOCK declaration_list RBLOCK .)
    for             reduce using rule 94 (else_part -> else LBLOCK declaration_list RBLOCK .)
    foreach         reduce using rule 94 (else_part -> else LBLOCK declaration_list RBLOCK .)
    exit            reduce using rule 94 (else_part -> else LBLOCK declaration_list RBLOCK .)
    VARIABLE        reduce using rule 94 (else_part -> else LBLOCK declaration_list RBLOCK .)
    array           reduce using rule 94 (else_part -> else LBLOCK declaration_list RBLOCK .)
    pow             reduce using rule 94 (else_part -> else LBLOCK declaration_list RBLOCK .)
    POW             reduce using rule 94 (else_part -> else LBLOCK declaration_list RBLOCK .)
    abs             reduce using rule 94 (else_part -> else LBLOCK declaration_list RBLOCK .)
    cos             reduce using rule 94 (else_part -> else LBLOCK declaration_list RBLOCK .)
    deg2rad         reduce using rule 94 (else_part -> else LBLOCK declaration_list RBLOCK .)
    rad2deg         reduce using rule 94 (else_part -> else LBLOCK declaration_list RBLOCK .)
    die             reduce using rule 94 (else_part -> else LBLOCK declaration_list RBLOCK .)
    exp             reduce using rule 94 (else_part -> else LBLOCK declaration_list RBLOCK .)
    floor           reduce using rule 94 (else_part -> else LBLOCK declaration_list RBLOCK .)
    isset           reduce using rule 94 (else_part -> else LBLOCK declaration_list RBLOCK .)
    list            reduce using rule 94 (else_part -> else LBLOCK declaration_list RBLOCK .)
    log             reduce using rule 94 (else_part -> else LBLOCK declaration_list RBLOCK .)
    log10           reduce using rule 94 (else_part -> else LBLOCK declaration_list RBLOCK .)
    max             reduce using rule 94 (else_part -> else LBLOCK declaration_list RBLOCK .)
    min             reduce using rule 94 (else_part -> else LBLOCK declaration_list RBLOCK .)
    rand            reduce using rule 94 (else_part -> else LBLOCK declaration_list RBLOCK .)
    round           reduce using rule 94 (else_part -> else LBLOCK declaration_list RBLOCK .)
    sin             reduce using rule 94 (else_part -> else LBLOCK declaration_list RBLOCK .)
    sqrt            reduce using rule 94 (else_part -> else LBLOCK declaration_list RBLOCK .)
    unset           reduce using rule 94 (else_part -> else LBLOCK declaration_list RBLOCK .)
    CADENA          reduce using rule 94 (else_part -> else LBLOCK declaration_list RBLOCK .)
    $end            reduce using rule 94 (else_part -> else LBLOCK declaration_list RBLOCK .)
    RBLOCK          reduce using rule 94 (else_part -> else LBLOCK declaration_list RBLOCK .)


state 313

    (93) else_part -> elseif LPAREN expression RPAREN LBLOCK . declaration_list RBLOCK else_part
    (4) declaration_list -> . declaration
    (5) declaration_list -> . declaration_list declaration
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . obj_declaration
    (19) declaration -> . create_obj_declaration
    (20) declaration -> . footer_declaration
    (21) declaration -> . for_loop
    (22) declaration -> . foreach_loop
    (23) declaration -> . exit_statement
    (24) declaration -> . empty
    (27) header_declaration -> . include CADENA SEMICOLON
    (37) var_declaration -> . var_declaration2 SEMICOLON
    (28) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (29) print_declaration -> . print var_declaration2 SEMICOLON
    (30) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (31) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (32) print_declaration -> . print data_type SEMICOLON
    (33) echo_declaration -> . echo var_declaration2 SEMICOLON
    (34) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (35) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (36) echo_declaration -> . echo data_type SEMICOLON
    (54) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (92) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (97) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration RBLOCK
    (98) fun_call -> . ID LPAREN params RPAREN
    (99) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (100) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (106) for_loop -> . for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK
    (111) foreach_loop -> . foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK
    (110) exit_statement -> . exit LPAREN expression RPAREN SEMICOLON
    (38) var_declaration2 -> . VARIABLE
    (39) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (40) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL CADENA
    (42) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (43) var_declaration2 -> . VARIABLE EQUAL expression
    (44) var_declaration2 -> . Built_In_Declaration
    (45) var_declaration2 -> . Concatenar_Cadenas_declaration
    (46) var_declaration2 -> . VARIABLE assignment_tail
    (47) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (112) Built_In_Declaration -> . array LPAREN params RPAREN
    (113) Built_In_Declaration -> . pow LPAREN params RPAREN
    (114) Built_In_Declaration -> . POW LPAREN params RPAREN
    (115) Built_In_Declaration -> . abs LPAREN params RPAREN
    (116) Built_In_Declaration -> . cos LPAREN params RPAREN
    (117) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (118) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (119) Built_In_Declaration -> . die LPAREN params RPAREN
    (120) Built_In_Declaration -> . exp LPAREN params RPAREN
    (121) Built_In_Declaration -> . floor LPAREN params RPAREN
    (122) Built_In_Declaration -> . isset LPAREN params RPAREN
    (123) Built_In_Declaration -> . list LPAREN params RPAREN
    (124) Built_In_Declaration -> . log LPAREN params RPAREN
    (125) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (126) Built_In_Declaration -> . max LPAREN params RPAREN
    (127) Built_In_Declaration -> . min LPAREN params RPAREN
    (128) Built_In_Declaration -> . rand LPAREN params RPAREN
    (129) Built_In_Declaration -> . round LPAREN params RPAREN
    (130) Built_In_Declaration -> . sin LPAREN params RPAREN
    (131) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (132) Built_In_Declaration -> . unset LPAREN params RPAREN
    (133) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (134) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (135) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 24
    include         shift and go to state 25
    const           shift and go to state 28
    print           shift and go to state 30
    echo            shift and go to state 31
    while           shift and go to state 32
    if              shift and go to state 33
    function        shift and go to state 34
    ID              shift and go to state 29
    class           shift and go to state 35
    new             shift and go to state 36
    CLOSE_TAG       shift and go to state 37
    for             shift and go to state 38
    foreach         shift and go to state 39
    exit            shift and go to state 40
    VARIABLE        shift and go to state 41
    array           shift and go to state 44
    pow             shift and go to state 45
    POW             shift and go to state 46
    abs             shift and go to state 47
    cos             shift and go to state 48
    deg2rad         shift and go to state 49
    rad2deg         shift and go to state 50
    die             shift and go to state 51
    exp             shift and go to state 52
    floor           shift and go to state 53
    isset           shift and go to state 54
    list            shift and go to state 55
    log             shift and go to state 56
    log10           shift and go to state 57
    max             shift and go to state 58
    min             shift and go to state 59
    rand            shift and go to state 60
    round           shift and go to state 61
    sin             shift and go to state 62
    sqrt            shift and go to state 63
    unset           shift and go to state 64
    CADENA          shift and go to state 26

    declaration_list               shift and go to state 314
    declaration                    shift and go to state 5
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    obj_declaration                shift and go to state 18
    create_obj_declaration         shift and go to state 19
    footer_declaration             shift and go to state 20
    for_loop                       shift and go to state 21
    foreach_loop                   shift and go to state 22
    exit_statement                 shift and go to state 23
    var_declaration2               shift and go to state 27
    Built_In_Declaration           shift and go to state 42
    Concatenar_Cadenas_declaration shift and go to state 43

state 314

    (93) else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list . RBLOCK else_part
    (5) declaration_list -> declaration_list . declaration
    (6) declaration -> . COMMENT
    (7) declaration -> . COMMENT_HASHTAG
    (8) declaration -> . COMMENT_MULTI
    (9) declaration -> . header_declaration
    (10) declaration -> . var_declaration
    (11) declaration -> . constant_declaration
    (12) declaration -> . print_declaration
    (13) declaration -> . echo_declaration
    (14) declaration -> . iteration_stmt
    (15) declaration -> . if_statement
    (16) declaration -> . fun_declaration
    (17) declaration -> . fun_call
    (18) declaration -> . obj_declaration
    (19) declaration -> . create_obj_declaration
    (20) declaration -> . footer_declaration
    (21) declaration -> . for_loop
    (22) declaration -> . foreach_loop
    (23) declaration -> . exit_statement
    (24) declaration -> . empty
    (27) header_declaration -> . include CADENA SEMICOLON
    (37) var_declaration -> . var_declaration2 SEMICOLON
    (28) constant_declaration -> . const ID EQUAL data_type SEMICOLON
    (29) print_declaration -> . print var_declaration2 SEMICOLON
    (30) print_declaration -> . print LPAREN var_declaration2 RPAREN SEMICOLON
    (31) print_declaration -> . print LPAREN data_type RPAREN SEMICOLON
    (32) print_declaration -> . print data_type SEMICOLON
    (33) echo_declaration -> . echo var_declaration2 SEMICOLON
    (34) echo_declaration -> . echo LPAREN var_declaration2 RPAREN SEMICOLON
    (35) echo_declaration -> . echo LPAREN data_type RPAREN SEMICOLON
    (36) echo_declaration -> . echo data_type SEMICOLON
    (54) iteration_stmt -> . while LPAREN expression RPAREN LBLOCK declaration RBLOCK
    (92) if_statement -> . if LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (97) fun_declaration -> . function ID LPAREN params RPAREN LBLOCK declaration RBLOCK
    (98) fun_call -> . ID LPAREN params RPAREN
    (99) obj_declaration -> . class ID LBLOCK declaration RBLOCK
    (100) create_obj_declaration -> . new ID LPAREN params RPAREN
    (3) footer_declaration -> . CLOSE_TAG
    (106) for_loop -> . for LPAREN for_init for_expr for_update RPAREN LBLOCK declaration_list RBLOCK
    (111) foreach_loop -> . foreach LPAREN expression as expression RPAREN LBLOCK declaration_list RBLOCK
    (110) exit_statement -> . exit LPAREN expression RPAREN SEMICOLON
    (38) var_declaration2 -> . VARIABLE
    (39) var_declaration2 -> . VARIABLE EQUAL NUMBER
    (40) var_declaration2 -> . VARIABLE EQUAL VARIABLE
    (41) var_declaration2 -> . VARIABLE EQUAL CADENA
    (42) var_declaration2 -> . VARIABLE EQUAL Built_In_Declaration
    (43) var_declaration2 -> . VARIABLE EQUAL expression
    (44) var_declaration2 -> . Built_In_Declaration
    (45) var_declaration2 -> . Concatenar_Cadenas_declaration
    (46) var_declaration2 -> . VARIABLE assignment_tail
    (47) var_declaration2 -> . VARIABLE EQUAL assignment_tail
    (112) Built_In_Declaration -> . array LPAREN params RPAREN
    (113) Built_In_Declaration -> . pow LPAREN params RPAREN
    (114) Built_In_Declaration -> . POW LPAREN params RPAREN
    (115) Built_In_Declaration -> . abs LPAREN params RPAREN
    (116) Built_In_Declaration -> . cos LPAREN params RPAREN
    (117) Built_In_Declaration -> . deg2rad LPAREN params RPAREN
    (118) Built_In_Declaration -> . rad2deg LPAREN params RPAREN
    (119) Built_In_Declaration -> . die LPAREN params RPAREN
    (120) Built_In_Declaration -> . exp LPAREN params RPAREN
    (121) Built_In_Declaration -> . floor LPAREN params RPAREN
    (122) Built_In_Declaration -> . isset LPAREN params RPAREN
    (123) Built_In_Declaration -> . list LPAREN params RPAREN
    (124) Built_In_Declaration -> . log LPAREN params RPAREN
    (125) Built_In_Declaration -> . log10 LPAREN params RPAREN
    (126) Built_In_Declaration -> . max LPAREN params RPAREN
    (127) Built_In_Declaration -> . min LPAREN params RPAREN
    (128) Built_In_Declaration -> . rand LPAREN params RPAREN
    (129) Built_In_Declaration -> . round LPAREN params RPAREN
    (130) Built_In_Declaration -> . sin LPAREN params RPAREN
    (131) Built_In_Declaration -> . sqrt LPAREN params RPAREN
    (132) Built_In_Declaration -> . unset LPAREN params RPAREN
    (133) Concatenar_Cadenas_declaration -> . VARIABLE DOT VARIABLE
    (134) Concatenar_Cadenas_declaration -> . CADENA DOT CADENA
    (135) Concatenar_Cadenas_declaration -> . CADENA DOT VARIABLE
    (136) Concatenar_Cadenas_declaration -> . VARIABLE DOT CADENA

    RBLOCK          shift and go to state 315
    COMMENT         shift and go to state 6
    COMMENT_HASHTAG shift and go to state 7
    COMMENT_MULTI   shift and go to state 8
    empty           shift and go to state 24
    include         shift and go to state 25
    const           shift and go to state 28
    print           shift and go to state 30
    echo            shift and go to state 31
    while           shift and go to state 32
    if              shift and go to state 33
    function        shift and go to state 34
    ID              shift and go to state 29
    class           shift and go to state 35
    new             shift and go to state 36
    CLOSE_TAG       shift and go to state 37
    for             shift and go to state 38
    foreach         shift and go to state 39
    exit            shift and go to state 40
    VARIABLE        shift and go to state 41
    array           shift and go to state 44
    pow             shift and go to state 45
    POW             shift and go to state 46
    abs             shift and go to state 47
    cos             shift and go to state 48
    deg2rad         shift and go to state 49
    rad2deg         shift and go to state 50
    die             shift and go to state 51
    exp             shift and go to state 52
    floor           shift and go to state 53
    isset           shift and go to state 54
    list            shift and go to state 55
    log             shift and go to state 56
    log10           shift and go to state 57
    max             shift and go to state 58
    min             shift and go to state 59
    rand            shift and go to state 60
    round           shift and go to state 61
    sin             shift and go to state 62
    sqrt            shift and go to state 63
    unset           shift and go to state 64
    CADENA          shift and go to state 26

    declaration                    shift and go to state 65
    header_declaration             shift and go to state 9
    var_declaration                shift and go to state 10
    constant_declaration           shift and go to state 11
    print_declaration              shift and go to state 12
    echo_declaration               shift and go to state 13
    iteration_stmt                 shift and go to state 14
    if_statement                   shift and go to state 15
    fun_declaration                shift and go to state 16
    fun_call                       shift and go to state 17
    obj_declaration                shift and go to state 18
    create_obj_declaration         shift and go to state 19
    footer_declaration             shift and go to state 20
    for_loop                       shift and go to state 21
    foreach_loop                   shift and go to state 22
    exit_statement                 shift and go to state 23
    var_declaration2               shift and go to state 27
    Built_In_Declaration           shift and go to state 42
    Concatenar_Cadenas_declaration shift and go to state 43

state 315

    (93) else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK . else_part
    (93) else_part -> . elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part
    (94) else_part -> . else LBLOCK declaration_list RBLOCK
    (95) else_part -> . endif
    (96) else_part -> . empty

    elseif          shift and go to state 297
    else            shift and go to state 298
    endif           shift and go to state 299
    empty           shift and go to state 300

    else_part                      shift and go to state 316

state 316

    (93) else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .

    COMMENT         reduce using rule 93 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    COMMENT_HASHTAG reduce using rule 93 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    COMMENT_MULTI   reduce using rule 93 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    empty           reduce using rule 93 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    include         reduce using rule 93 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    const           reduce using rule 93 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    print           reduce using rule 93 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    echo            reduce using rule 93 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    while           reduce using rule 93 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    if              reduce using rule 93 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    function        reduce using rule 93 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    ID              reduce using rule 93 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    class           reduce using rule 93 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    new             reduce using rule 93 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    CLOSE_TAG       reduce using rule 93 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    for             reduce using rule 93 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    foreach         reduce using rule 93 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    exit            reduce using rule 93 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    VARIABLE        reduce using rule 93 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    array           reduce using rule 93 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    pow             reduce using rule 93 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    POW             reduce using rule 93 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    abs             reduce using rule 93 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    cos             reduce using rule 93 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    deg2rad         reduce using rule 93 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    rad2deg         reduce using rule 93 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    die             reduce using rule 93 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    exp             reduce using rule 93 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    floor           reduce using rule 93 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    isset           reduce using rule 93 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    list            reduce using rule 93 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    log             reduce using rule 93 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    log10           reduce using rule 93 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    max             reduce using rule 93 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    min             reduce using rule 93 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    rand            reduce using rule 93 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    round           reduce using rule 93 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    sin             reduce using rule 93 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    sqrt            reduce using rule 93 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    unset           reduce using rule 93 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    CADENA          reduce using rule 93 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    $end            reduce using rule 93 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)
    RBLOCK          reduce using rule 93 (else_part -> elseif LPAREN expression RPAREN LBLOCK declaration_list RBLOCK else_part .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMMA in state 41 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 231 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 288 resolved as shift
WARNING: reduce/reduce conflict in state 152 resolved using rule (var_declaration2 -> VARIABLE EQUAL VARIABLE)
WARNING: rejected rule (factor -> VARIABLE) in state 152
WARNING: reduce/reduce conflict in state 153 resolved using rule (var_declaration2 -> VARIABLE EQUAL NUMBER)
WARNING: rejected rule (factor -> NUMBER) in state 153
WARNING: reduce/reduce conflict in state 231 resolved using rule (var_declaration2 -> VARIABLE)
WARNING: rejected rule (factor -> VARIABLE) in state 231
WARNING: reduce/reduce conflict in state 234 resolved using rule (data_type -> NUMBER)
WARNING: rejected rule (factor -> NUMBER) in state 234
